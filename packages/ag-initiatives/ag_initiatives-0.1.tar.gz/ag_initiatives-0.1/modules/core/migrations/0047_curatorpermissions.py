# Generated by Django 2.2.5 on 2022-06-03 08:01

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('plans', '0004_departmentcategory'),
        ('initiatives', '0016_initiativeinstruction'),
        ('map_works', '0004_departmentcategory'),
        ('core', '0046_auto_20220601_1159'),
    ]

    operations = [
        migrations.CreateModel(
            name='CuratorPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modules_permissions', multiselectfield.db.fields.MultiSelectField(choices=[('MAP_WORKS', 'Карты'), ('PLANS', 'Планы'), ('VOTING', 'Голосования'), ('INITIATIVES', 'Инициативы')], max_length=34, verbose_name='Права модулей')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Department', verbose_name='Организация')),
                ('initiatives_categories', models.ManyToManyField(blank=True, related_name='curator_initiatives_categories_permissions', to='initiatives.InitiativeCategory', verbose_name='Доступные категории инициатив')),
                ('initiatives_localities', models.ManyToManyField(blank=True, related_name='curator_initiatives_localities_permissions', to='core.Locality', verbose_name='Доступные муниципальные образования инициатив')),
                ('initiatives_municipalities', models.ManyToManyField(blank=True, related_name='curator_initiatives_municipalities_permissions', to='core.Locality', verbose_name='Доступные населенные пункты инициатив')),
                ('map_works_categories', models.ManyToManyField(blank=True, related_name='curator_map_works_categories_permissions', to='map_works.WorkCategory', verbose_name='Доступные категории карт')),
                ('map_works_localities', models.ManyToManyField(blank=True, related_name='curator_map_works_localities_permissions', to='core.Locality', verbose_name='Доступные муниципальные образования карт')),
                ('map_works_municipalities', models.ManyToManyField(blank=True, related_name='curator_map_works_municipalities_permissions', to='core.Locality', verbose_name='Доступные населенные пункты карт')),
                ('plans_categories', models.ManyToManyField(blank=True, related_name='curator_plans_categories_permissions', to='plans.Category', verbose_name='Доступные категории планов')),
                ('plans_localities', models.ManyToManyField(blank=True, related_name='curator_plans_localities_permissions', to='core.Locality', verbose_name='Доступные муниципальные образования планов')),
                ('plans_municipalities', models.ManyToManyField(blank=True, related_name='curator_plans_municipalities_permissions', to='core.Locality', verbose_name='Доступные населенные пункты планов')),
                ('user_sub_permissions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='curator_permissions', to='core.SubPermissions', verbose_name='Дополнительные права пользователя')),
                ('voting_categories', models.ManyToManyField(blank=True, related_name='curator_voting_categories_permissions', to='core.Category', verbose_name='Доступные категории голосований')),
                ('voting_localities', models.ManyToManyField(blank=True, related_name='curator_voting_categories_localities_permissions', to='core.Locality', verbose_name='Доступные населенные пункты голосований')),
                ('voting_municipalities', models.ManyToManyField(blank=True, related_name='curator_voting_municipalies_permissions', to='core.Locality', verbose_name='Доступные муниципальные образования голосования')),
            ],
            options={
                'verbose_name': 'Дополнительные права пользователя для роли Куратор',
                'verbose_name_plural': 'Дополнительные права пользователей для роли Куратор',
            },
        ),
    ]
