# Generated by Django 2.2.5 on 2020-03-04 09:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.gis.db.models.fields
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0011_update_proxy_permissions"),
    ]

    operations = [
        migrations.CreateModel(
            name="Banner",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.TextField(blank=True, default="", verbose_name="Заголовок"),
                ),
                (
                    "description",
                    models.TextField(blank=True, default="", verbose_name="Описание"),
                ),
                ("url", models.URLField(verbose_name="Ссылка")),
                ("url_title", models.TextField(verbose_name="Заголовок ссылки")),
                (
                    "image",
                    models.ImageField(
                        upload_to="images/banners", verbose_name="Баннер"
                    ),
                ),
            ],
            options={
                "verbose_name": "Баннер",
                "verbose_name_plural": "Баннеры",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(verbose_name="Рубрика голосований")),
                (
                    "color",
                    models.CharField(
                        default="#000000", max_length=7, verbose_name="Цвет html"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="Вспомогательное изображение",
                    ),
                ),
            ],
            options={
                "verbose_name": "Рубрика",
                "verbose_name_plural": "Рубрики",
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(unique=True, verbose_name="Название")),
                (
                    "description",
                    models.TextField(blank=True, default="", verbose_name="Описание"),
                ),
            ],
            options={
                "verbose_name": "Ведомство",
                "verbose_name_plural": "Ведомства",
            },
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.TextField(verbose_name="Имя")),
                ("last_name", models.TextField(verbose_name="Фамилия")),
                ("patronymic_name", models.TextField(verbose_name="Отчество")),
                ("email", models.EmailField(max_length=254, verbose_name="email")),
                ("phone", models.TextField(verbose_name="Номер телефона")),
                ("comment", models.TextField(verbose_name="Отзыв")),
                (
                    "file",
                    models.FileField(
                        blank=True, null=True, upload_to="", verbose_name="Файл"
                    ),
                ),
            ],
            options={
                "verbose_name": "Обратная связь",
                "verbose_name_plural": "Обратная связь",
            },
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.TextField(verbose_name="Заголовок")),
                ("description", models.TextField(verbose_name="Краткое описание")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="images/news/",
                        verbose_name="Изображение",
                    ),
                ),
                ("text", models.TextField(verbose_name="Текст новости")),
                (
                    "url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Ссылка на новость"
                    ),
                ),
                ("url_title", models.TextField(verbose_name="Текст ссылки")),
                (
                    "create_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.Category",
                        verbose_name="Категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Новость",
                "verbose_name_plural": "Новости",
            },
        ),
        migrations.CreateModel(
            name="Locality",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(verbose_name="Наименование")),
                (
                    "type",
                    models.IntegerField(
                        choices=[
                            (10, "Регион"),
                            (20, "Населенный пункт"),
                            (30, "Район"),
                            (40, "Город"),
                            (50, "Поселок городского типа"),
                            (60, "Поселок"),
                        ],
                        verbose_name="Тип",
                    ),
                ),
                (
                    "gis_center",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326, verbose_name="Центр"
                    ),
                ),
                (
                    "gis_border",
                    django.contrib.gis.db.models.fields.PolygonField(
                        blank=True, null=True, srid=4326, verbose_name="Граница"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.Locality",
                        verbose_name="Входит в",
                    ),
                ),
            ],
            options={
                "verbose_name": "Муниципальное образование",
                "verbose_name_plural": "Муниципальные образования",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("first_name", models.TextField(verbose_name="Имя")),
                (
                    "last_name",
                    models.TextField(blank=True, null=True, verbose_name="Фамилия"),
                ),
                (
                    "patronymic_name",
                    models.TextField(blank=True, null=True, verbose_name="Отчество"),
                ),
                ("gender", models.TextField(blank=True, null=True, verbose_name="Пол")),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата рождения"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь системы",
                "verbose_name_plural": "Пользователи системы",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(fields=["title"], name="core_news_title_dc7b8b_idx"),
        ),
        migrations.AddIndex(
            model_name="locality",
            index=models.Index(fields=["name"], name="core_locali_name_0ff359_idx"),
        ),
    ]
