Metadata-Version: 2.1
Name: TelescopeML
Version: 0.0.2
Summary: An End-to-End Python Package for Interpreting Telescope Datasets through Training Machine Learning Models, Generating Statistical Reports, and Visualizing Results
Home-page: https://ehsangharibnezhad.github.io/TelescopeML
Download-URL: https://github.com/EhsanGharibNezhad/TelescopeML
Author: Ehsan (Sam) Gharib-Nezhad
Author-email: e.gharibnezhad@gmail.com
License: GPL-3.0
Keywords: Astronomy,Stars,Telescope,CNN,Deep Learning,Machine Learning
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering :: Astronomy
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy==1.26.1
Requires-Dist: bokeh
Requires-Dist: pandas
Requires-Dist: astropy
Requires-Dist: matplotlib
Requires-Dist: seaborn==0.12.2
Requires-Dist: sphinx==7.2.6
Requires-Dist: scipy==1.11.1
Requires-Dist: keras==2.14.0
Requires-Dist: tensorflow==2.14.0
Requires-Dist: jupyterlab
Requires-Dist: sphinx
Requires-Dist: spectres==2.2.0
Requires-Dist: scikit-learn==1.3.0

# TelescopeML


``TelescopeML`` is a Python package comprising a series of modules, each equipped with specialized machine learning and
statistical capabilities for conducting Convolutional Neural Networks (CNN) or Machine Learning (ML) training on
datasets captured from the atmospheres of extrasolar planets and brown dwarfs. The tasks executed by the ``TelescopeML``
modules are outlined below:


![](docs/figures/TelescopeML_modules.png)

- *DataMaster module*: Performs various tasks to process the datasets, including:

    - Preparing inputs and outputs
    - Splitting the dataset into training, validation, and test sets
    - Scaling/normalizing the data
    - Visualizing the data
    - Conducting feature engineering

- *DeepTrainer module*: Utilizes different methods/packages such as TensorFlow to:

  - Build Convolutional Neural Networks (CNNs) model using the training examples
  - Utilize tuned hyperparameters
  - Fit/train the ML models
  - Visualize the loss and training history, as well as the trained model's performance

- *Predictor module*: Implements the following tasks to predict atmospheric parameters:

  - Processes and predicts the observational datasets
  - Deploys the trained ML/CNNs model to predict atmospheric parameters
  - Visualizes the processed observational dataset and the uncertainty in the predicted results

- *StatVisAnalyzer module*: Provides a set of functions to perform the following tasks:

  - Explores and processes the synthetic datasets
  - Performs the chi-square test to evaluate the similarity between two datasets
  - Calculates confidence intervals and standard errors
  - Functions to visualize the datasets, including scatter plots, histograms, boxplots


or simply...

 - Load the trained CNN models
 - Follow the tutorials
 - Predict the stellar/exoplanetary parameters
 - Report the statistical analysis



## Documentation

- Documentation: https://ehsangharibnezhad.github.io/TelescopeML/
- Installation: https://ehsangharibnezhad.github.io/TelescopeML/installation.html
- Tutorials: https://ehsangharibnezhad.github.io/TelescopeML/tutorials.html
- The code: https://ehsangharibnezhad.github.io/TelescopeML/code.html

