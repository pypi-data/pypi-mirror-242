Metadata-Version: 2.1
Name: tarp
Version: 0.1.1
Summary: Statistical coverage testing in python.
Author-email: Adam Coogan <dr.adam.coogan@gmail.com>, Pablo Lemos <plemos91@gmail.com>
License: MIT License
        
        Copyright (c) [2023] [Adam Coogan & Pablo Lemos]
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: homepage, https://github.com/Ciela-Institute/tarp
Project-URL: repository, https://github.com/Ciela-Institute/tarp
Project-URL: documentation, https://tarp.readthedocs.io/en/latest/
Keywords: bayesian,coverage,posterior,statistics
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Provides-Extra: dev
Requires-Dist: build ; extra == 'dev'
Requires-Dist: furo ; extra == 'dev'
Requires-Dist: myst-parser ; extra == 'dev'
Requires-Dist: pip ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: sphinx ; extra == 'dev'
Requires-Dist: sphinx-autodoc-typehints ; extra == 'dev'
Requires-Dist: sphinx-pyproject ; extra == 'dev'
Requires-Dist: twine ; extra == 'dev'

# tarp

[![Documentation Status](https://readthedocs.org/projects/tarp/badge/?version=latest)](https://tarp.readthedocs.io/en/latest/?badge=latest)
[![PyPI version](https://badge.fury.io/py/tarp.svg)](https://badge.fury.io/py/tarp)
[![Tests](https://github.com/Ciela-Institute/tarp/actions/workflows/python-app.yml/badge.svg?branch=main)](https://github.com/Ciela-Institute/tarp/actions)
[![Coverage](https://img.shields.io/codecov/c/github/Ciela-Institute/tarp)](https://app.codecov.io/gh/Ciela-Institute/tarp)

`tarp` is a small python package for performing statistical coverage tests to assess
the quality of posterior estimators.
<!-- `tarp` is framework-agnostic: it works with posterior estimators and samplers written in numpy, pytorch, jax. -->

`tarp` currently implements the distance to random point (DRP) test introduced
in [Lemos, Coogan et al 2023](https://arxiv.org/abs/2302.03026), which relies on
posterior samples.

<!-- An upcoming release will implement the highest posterior density region test (HPDR; see [Hermans, Delaunoy et al 2022](https://arxiv.org/abs/2110.06581) or [Cole et al 2022](https://arxiv.org/abs/2111.08030)), which requires a posterior density estimator. -->

## Installation

`pip install tarp`

## Contributing

Please reach out to us if you're interested in contributing!

To start, follow the installation instructions, replacing the last line with
```bash
pip install -e ".[dev]"
```
This creates an editable install and installs the dev dependencies for generating
docs, running tests and packaging for PyPI.

Please use `isort` and `black` to format your code. Open up [issues](https://github.com/Ciela-Institute/tarp/issues)
for bugs/missing features. Use pull requests for additions to the code. Write tests
that can be run by [`pytest`](https://docs.pytest.org/).
