Metadata-Version: 2.1
Name: L-mappy
Version: 0.1.0
Summary: Mappy는 위치 기반 기능을 제공하는 파이썬 라이브러리로, 주소를 좌표로 변환하는 지오코딩(geocoding), 좌표에서 주소 정보를 얻는 지오로케이션(geolocation), 두 지점 간의 경로를 계산하는 방향(directions) 정보 제공 기능을 포함하고 있습니다.
Home-page: https://github.com/gunhe17/l-mappy
Author: L
Author-email: pers.gun17@gmail.com
Description-Content-Type: text/markdown
Requires-Dist: dotenv
Requires-Dist: requests

### Mappy 사용 안내서

#### Mappy 라이브러리 개요
Mappy는 위치 기반 기능을 제공하는 파이썬 라이브러리로, 주소를 좌표로 변환하는 지오코딩(geocoding), 좌표에서 주소 정보를 얻는 지오로케이션(geolocation), 두 지점 간의 경로를 계산하는 방향(directions) 정보 제공 기능을 포함하고 있습니다.

#### 주요 기능
- **Naver API 연동 기능**:
  - `get_geocode(Address)`: 주어진 주소의 좌표를 조회합니다.
  - `get_geocodes([Address, ...])`: 주어진 주소 리스트의 좌표를 일괄 조회합니다.
  - `get_driving_direction({start: Point, goal: Point})`: 시작점과 도착점 좌표를 기반으로 경로를 계산합니다.
  - `get_driving_directions([{start: Point, goal: Point}, ...], only_closest=Bool)`: 여러 경로에 대한 정보를 일괄 조회합니다. (only_closest=True, 가장 가까운 경로만 조회.)

- **Tmap API 연동 기능**:
  - `get_walking_direction({start: Point, goal: Point})`: 시작점과 도착점 좌표로 Tmap 경로 정보를 조회합니다.
  - `get_walking_directions([{start: Point, goal: Point}, ...], only_closest=Bool)`: 여러 경로에 대한 Tmap 정보를 일괄 조회합니다. (only_closest=True, 가장 가까운 경로만 조회.)

#### 데이터 타입
- **`Address` 클래스**: 문자열 형태의 주소 정보를 관리합니다.
  - 생성자: `Address(address: str)` - 주소 문자열을 입력받아 인스턴스를 생성합니다.
  - `__str__()` 메서드: 주소 인스턴스를 문자열로 반환합니다.

- **`Point` 클래스**: 위도와 경도 정보를 나타내는 좌표 데이터를 관리합니다.
  - 생성자: 아래와 같은 다양한 형태를 지원합니다.
    - Point(lat=126.831405, lng=37.199565)
    - Point('126.8286671,37.1989033')
    - Point([126.8299873, 37.2002067]),
  - `__str__()` 메서드: 좌표 인스턴스를 "위도,경도" 형태의 문자열로 반환합니다.
  - `to_list()` 메서드: 좌표 인스턴스를 [위도, 경도] 형태의 리스트로 반환합니다.

#### get_env
- `tmap`: https://tmapapi.sktelecom.com/main.html#webv2/guide/apiGuide.guide2
- `naver`: https://www.ncloud.com/
- `kakao`: soon...

#### test
- `python -m unittest tests/test_tmap.py`
- `python -m unittest tests/test_naver.py`
- `python -m unittest tests/types/test_address.py`
- `python -m unittest tests/types/test_point.py`
