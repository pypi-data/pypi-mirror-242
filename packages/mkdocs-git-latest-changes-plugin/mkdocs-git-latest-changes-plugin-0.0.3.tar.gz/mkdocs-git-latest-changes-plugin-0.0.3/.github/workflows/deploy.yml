# This workflow will
# * upload the Python Package using Twine when a release is created
# * run mypy
# * deploy to github pages
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries


name: Deploy Python Package

on:
  push
  # release:
  #   types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install --upgrade build
    - name: Check typing
      run: |
        pip install --upgrade mypy mkdocs GitPython
        python -m mypy mkdocs_git_latest_changes_plugin/
    - name: Build package
      run: python -m build
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
    # - name: Publish package to TestPyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     repository-url: https://test.pypi.org/legacy/
    #     user: __token__
    #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
    - name: Deploy to github pages
      run: | 
        pip install mkdocs-git-latest-changes-plugin
        mkdocs gh-deploy --force
