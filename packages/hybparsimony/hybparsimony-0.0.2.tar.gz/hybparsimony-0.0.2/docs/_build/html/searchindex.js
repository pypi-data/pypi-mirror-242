Search.setIndex({"docnames": ["hybparsimony", "hybparsimony.lhs", "hybparsimony.lhs.base", "hybparsimony.lhs.util", "hybparsimony.util", "index", "modules"], "filenames": ["hybparsimony.rst", "hybparsimony.lhs.rst", "hybparsimony.lhs.base.rst", "hybparsimony.lhs.util.rst", "hybparsimony.util.rst", "index.rst", "modules.rst"], "titles": ["hybparsimony package", "hybparsimony.lhs package", "hybparsimony.lhs.base package", "hybparsimony.lhs.util package", "hybparsimony.util package", "Welcome to HYBparsimony Documentation\u2019s documentation!", "hybparsimony"], "terms": {"lh": [0, 5, 6], "base": [0, 1, 4], "geneticlh": [0, 1], "improvedlh": [0, 1], "maximinlh": [0, 1], "optimumlh": [0, 1], "randomlh": [0, 1], "util": [0, 1, 5, 6], "bclib": [0, 1], "utilitylh": [0, 1], "complex": [0, 5, 6], "decision_tree_complex": [0, 4], "generic_complex": [0, 4], "kernel_ridge_complex": [0, 4], "knn_complex": [0, 4], "linearmodels_complex": [0, 4], "mlp_complex": [0, 4], "randomforest_complex": [0, 4], "svm_complex": [0, 4], "xgboost_complex": [0, 4], "fit": [0, 5, 6], "fitness_for_parallel": [0, 4], "getfit": [0, 4], "hyb_aux": [0, 5, 6], "model": [0, 5, 6], "check_algorithm": [0, 4], "order": [0, 5, 6], "parsimony_monitor": [0, 5, 6], "parsimony_summari": [0, 4], "popul": [0, 2, 5, 6], "chromosom": [0, 4], "column": [0, 2, 4], "param": [0, 4], "categor": [0, 4], "constant": [0, 4], "float": [0, 2, 4], "integ": [0, 4], "power": [0, 4], "getchromosom": [0, 4], "paramsnam": [0, 4], "update_to_feat_thr": [0, 4], "python": 0, "i": [0, 2, 3, 4], "search": [0, 2, 4, 5], "accur": 0, "parsimoni": [0, 4], "combin": 0, "featur": [0, 4], "select": [0, 4], "f": 0, "hyperparamet": 0, "optim": [0, 2, 4], "ho": 0, "pm": 0, "separ": 0, "cost": 0, "evalu": [0, 4], "To": 0, "improv": [0, 2], "hybrid": 0, "method": [0, 4], "ga": [0, 4], "mechan": 0, "crossov": 0, "mutat": [0, 2], "within": 0, "pso": 0, "algorithm": [0, 2, 4], "includ": 0, "strategi": 0, "which": [0, 2, 4], "best": [0, 4], "posit": 0, "each": [0, 2, 4], "particl": 0, "thu": 0, "neighborhood": 0, "calcul": [0, 4], "take": 0, "account": 0, "onli": 0, "good": 0, "principl": 0, "In": [0, 2], "percentag": 0, "variabl": [0, 2], "replac": 0, "iter": [0, 4], "t": 0, "decreas": [0, 4], "exponenti": 0, "function": [0, 2, 3, 4], "pcrossov": 0, "max": 0, "0": [0, 2, 3, 4], "80": 0, "cdot": 0, "e": 0, "gamma": [0, 4], "10": [0, 4], "adjust": 0, "default": [0, 2, 4], "set": [0, 2], "50": [0, 4], "first": [0, 4], "promot": 0, "high": 0, "begin": [0, 4], "subsequ": 0, "becom": 0, "more": 0, "relev": 0, "accuraci": 0, "thi": [0, 2, 4], "differ": 0, "from": [0, 2, 4], "other": [0, 4], "appli": [0, 2], "between": [0, 2], "individu": 0, "approach": 0, "worst": 0, "ar": [0, 4], "new": 0, "extrem": 0, "experi": 0, "show": 0, "gener": [0, 2, 4], "suitabl": 0, "allow": [0, 4], "obtain": 0, "better": 0, "robust": 0, "compar": 0, "It": 0, "reduc": 0, "number": [0, 2, 4], "consequ": 0, "comput": 0, "effort": 0, "divas\u00f3n": 0, "j": [0, 3, 4], "pernia": 0, "espinoza": 0, "A": [0, 2, 4], "martinez": 0, "de": 0, "pison": 0, "2022": 0, "methodologi": 0, "swarm": 0, "genet": [0, 2], "dimension": 0, "databas": 0, "garc\u00eda": 0, "bringa": 0, "p": 0, "et": 0, "al": 0, "artifici": 0, "intellig": 0, "system": 0, "hai": 0, "lectur": 0, "note": [0, 4], "scienc": 0, "vol": 0, "13469": 0, "springer": 0, "cham": 0, "http": 0, "doi": 0, "org": 0, "1007": 0, "978": 0, "3": [0, 2, 4], "031": 0, "15471": 0, "3_29": 0, "class": [0, 4], "none": [0, 2, 3, 4], "custom_eval_fun": [0, 4], "cv": 0, "score": [0, 4], "type_ini_pop": 0, "npart": 0, "15": 0, "maxit": 0, "250": 0, "early_stop": 0, "lambda": [0, 3], "1": [0, 2, 4], "c1": 0, "1931471805599454": 0, "c2": 0, "iw_max": 0, "9": [0, 4], "iw_min": 0, "4": [0, 2, 4], "k": [0, 2], "pmutat": 0, "gamma_crossov": 0, "5": [0, 2], "tol": 0, "0001": 0, "rerank_error": 0, "1e": 0, "09": 0, "keep_histori": 0, "fals": [0, 2, 4], "feat_thr": [0, 4], "best_global_thr": 0, "particles_to_delet": 0, "seed_ini": 0, "1234": 0, "not_mut": 0, "feat_mut_thr": 0, "n_job": 0, "verbos": 0, "sourc": [0, 2, 3, 4], "object": [0, 4], "__init__": [0, 6], "tune": 0, "an": [0, 2, 4], "option": [0, 2, 4], "The": [0, 2, 4], "ani": [0, 4], "input": [0, 4], "numer": 0, "vector": [0, 4], "three": 0, "valu": [0, 2, 4], "validation_cost": 0, "testing_cost": 0, "model_complex": 0, "train": 0, "list": [0, 4], "str": [0, 2], "name": 0, "dataset": [0, 4], "If": [0, 4], "extract": 0, "x": [0, 4], "datafram": [0, 4], "otherwis": [0, 4], "accord": 0, "shape": [0, 2, 4], "string": 0, "dict": 0, "id": 0, "defin": [0, 4], "py": 0, "dictionari": 0, "follow": [0, 2, 4], "properti": [0, 4], "estim": 0, "machin": [0, 4], "learn": [0, 4], "compat": 0, "scikit": [0, 4], "measur": [0, 2], "case": 0, "thei": [0, 4], "can": [0, 2, 4], "fix": 0, "rang": 0, "min": 0, "type": [0, 2, 4], "us": [0, 2, 4], "logisticregress": 0, "classif": [0, 4], "problem": 0, "ridg": 0, "regress": [0, 4], "similar": [0, 4], "": [0, 2, 4], "cross_val_scor": [0, 4], "int": [0, 2, 4], "cross": 0, "valid": 0, "determin": [0, 2], "split": 0, "callabl": 0, "tupl": 0, "perform": 0, "test": 0, "mse": 0, "log_loss": 0, "binari": [0, 4], "f1_macro": 0, "multiclass": 0, "random": [0, 2, 4], "creat": [0, 2], "gaparsimoni": 0, "_popul": 0, "possibl": 0, "correspond": 0, "sever": 0, "latin": [0, 2], "hypercub": [0, 2], "initi": [0, 2], "sampl": [0, 2], "By": 0, "size": [0, 4], "maximum": [0, 2], "run": 0, "befor": 0, "hyb": [0, 4], "process": [0, 4], "halt": 0, "consecut": 0, "without": [0, 4], "lower": 0, "than": [0, 2], "best_fit": 0, "stop": [0, 2], "signific": [0, 4], "earli": 0, "when": [0, 2], "provid": 0, "second": 0, "rerank": 0, "call": 0, "parsimony_rerank": 0, "Its": 0, "primari": 0, "isto": 0, "while": 0, "maintain": 0, "robustnessof": 0, "switch": 0, "two": 0, "one": [0, 2], "latter": 0, "found": 0, "term": 0, "absolut": 0, "consid": 0, "info": 0, "2": [0, 2, 4], "math": 0, "log": 0, "influenc": 0, "global": 0, "neighbourhood": 0, "len": 0, "length": 0, "delet": 0, "arrai": [0, 2, 4], "complet": 0, "zero": 0, "up": 0, "probabl": [0, 2], "parent": 0, "usual": 0, "occur": [0, 2], "small": 0, "mute": 0, "90": 0, "proport": 0, "recommend": 0, "bool": [0, 2, 4], "true": [0, 4], "keep": 0, "result": 0, "all": [0, 2], "histori": 0, "contain": [0, 4], "state": 0, "core": 0, "parallel": [0, 4], "should": [0, 2], "caution": 0, "becaus": 0, "cross_valid": 0, "mai": 0, "intern": [0, 4], "level": 0, "messag": 0, "we": [0, 4], "want": [0, 4], "u": 0, "silent": 0, "mode": 0, "monitor": [0, 4], "debug": 0, "minutes_tot": 0, "total": 0, "elaps": 0, "time": [0, 2, 4], "minut": [0, 4], "best_model": 0, "whole": [0, 4], "best_scor": 0, "best_complex": 0, "selected_featur": 0, "selected_features_bool": 0, "boolean": 0, "form": 0, "best_model_conf": 0, "usag": [0, 4], "sklearn": [0, 4], "diabet": 0, "import": [0, 4], "panda": [0, 4], "pd": [0, 4], "model_select": [0, 4], "train_test_split": 0, "metric": 0, "mean_squared_error": 0, "load_diabet": 0, "preprocess": 0, "standardscal": 0, "load": [0, 4], "y": [0, 4], "data": [0, 4], "target": [0, 4], "x_train": 0, "x_test": 0, "y_train": 0, "y_test": 0, "test_siz": 0, "random_st": 0, "standar": 0, "scaler_x": 0, "fit_transform": 0, "transform": 0, "scaler_i": 0, "reshap": 0, "flatten": 0, "algo": 0, "kernelridg": 0, "hybparsimony_model": 0, "feature_nam": [0, 4], "001": 0, "increas": [0, 4], "time_limit": 0, "rmse": 0, "consum": 0, "20": 0, "510786": 0, "017": 0, "405": 0, "352": 0, "meanval": 0, "88274": 0, "valbest": 0, "complexbest": 0, "005858": 0, "499005": 0, "8": 0, "000": 0, "032": 0, "783": 0, "88": 0, "659969": 0, "004452": 0, "34": 0, "489468": 0, "002": 0, "255": 0, "68": 0, "527314": 0, "007533": 0, "35": 0, "489457": 0, "199": 0, "12": 0, "526294": 0, "006522": 0, "limit": 0, "reach": 0, "breast_canc": [0, 4], "load_breast_canc": [0, 4], "print": [0, 4], "some": [0, 4], "requir": 0, "005": 0, "prob": 0, "pred": 0, "predict_proba": [0, 6], "n": [0, 2, 3], "nbest": 0, "round": 0, "logloss": 0, "6": [0, 4], "569": 0, "30": 0, "detect": 0, "neg_log_loss": 0, "091519": 0, "29": 0, "11": 0, "297448": 0, "006501": 0, "085673": 0, "27": 0, "009": 0, "97": 0, "117216": 0, "004273": 0, "102": 0, "064557": 0, "039": 0, "47": 0, "076314": 0, "066261": 0, "047": 0, "25": [0, 2], "004769": 0, "103": 0, "086243": 0, "064995": 0, "004591": 0, "c": [0, 4], "92705799354935": 0, "mean": 0, "textur": 0, "concav": 0, "point": [0, 2], "radiu": 0, "error": 0, "area": 0, "compact": 0, "perimet": 0, "smooth": 0, "symmetri": 0, "076254": 0, "optimizacion": 0, "matrix": [0, 2, 3, 4], "numpi": [0, 2, 4], "rel": 0, "predict": [0, 6], "multinomi": [0, 6], "pval": 0, "draw": [0, 2], "distribut": [0, 2], "multivari": 0, "binomi": 0, "outcom": 0, "throw": 0, "dice": 0, "where": 0, "through": [0, 2], "drawn": 0, "repres": 0, "x_i": 0, "x_0": 0, "x_1": 0, "x_p": 0, "wa": 0, "code": 0, "instanc": 0, "instead": 0, "pleas": 0, "quick": 0, "start": 0, "sequenc": 0, "These": 0, "must": 0, "sum": [0, 4], "howev": 0, "last": [0, 4], "element": 0, "alwai": 0, "assum": 0, "remain": [0, 2], "long": 0, "output": 0, "given": 0, "g": 0, "m": 0, "singl": 0, "out": 0, "ndarrai": 0, "word": 0, "entri": 0, "np": [0, 4], "7": 0, "land": 0, "onc": 0, "etc": 0, "now": 0, "again": 0, "For": [0, 4], "threw": 0, "die": 0, "like": [0, 4], "100": [0, 2], "16": 0, "14": 0, "17": 0, "26": 0, "normal": 0, "As": 0, "implement": [0, 4], "detail": 0, "ignor": [0, 4], "leftov": 0, "mass": 0, "reli": 0, "bias": 0, "coin": 0, "ha": 0, "twice": 0, "much": 0, "weight": [0, 4], "side": 0, "so": [0, 2], "right": 0, "38": 0, "62": 0, "wrong": 0, "traceback": 0, "most": [0, 4], "recent": 0, "valueerror": 0, "nan": [0, 4], "submodul": [1, 5, 6], "randomlhs_int": [1, 2], "findord": [1, 3], "findorder_zero": [1, 3], "inner_product": [1, 3], "calculatedist": [1, 3], "calculatedistancesquar": [1, 3], "calculatesoptim": [1, 3], "convertintegertonumericlh": [1, 3], "initializeavailablematrix": [1, 3], "isvalidlh": [1, 3], "isvalidlhs_int": [1, 3], "runif_std": [1, 3], "runifint": [1, 3], "suminvdist": [1, 3], "pop": 2, "gen": 2, "pmut": 2, "criterium": 2, "seed": 2, "uniform": [2, 4], "latinhypercub": 2, "design": 2, "attempt": 2, "respect": 2, "optimalitycriterion": 2, "row": [2, 4], "over": 2, "progeni": 2, "maximin": 2, "also": 2, "support": [2, 4], "dup": 2, "optimum": 2, "euclidean": 2, "distanc": 2, "factor": 2, "candid": 2, "multipl": 2, "ad": 2, "maxim": 2, "minium": 2, "criteria": 2, "uniformli": 2, "maxsweep": 2, "ep": 2, "columnwis": 2, "pairwis": 2, "cp": 2, "criterion": 2, "partit": 2, "simul": 2, "replic": 2, "chang": 2, "less": 2, "previou": 2, "01": 2, "bpreservedraw": 2, "construct": 2, "4x3": 2, "per": 2, "sai": 2, "Then": 2, "randomnumb": 2, "pick": 2, "indic": 2, "quartil": 2, "exampl": [2, 5, 6], "75": 2, "chosen": 2, "final": 2, "same": 2, "v": 3, "b": 3, "init": 3, "op1": 3, "op2": 3, "mat": 3, "intmat": 3, "predefin": 4, "popular": 4, "librari": 4, "linear_model": 4, "nfeatur": 4, "squar": 4, "coef": 4, "svm": 4, "neighbor": 4, "neural_network": 4, "ann": 4, "ensembl": 4, "randomforestregressor": 4, "randomforestclassifi": 4, "averag": 4, "tree": 4, "leav": 4, "xgboost": 4, "experiment": 4, "interfac": 4, "def": 4, "kwarg": 4, "pass": 4, "decis": 4, "argument": 4, "knn": 4, "linear": 4, "mlp": 4, "randomforest": 4, "cromosoma": 4, "ignore_warn": 4, "being": 4, "nest": 4, "pickl": 4, "therefor": 4, "There": 4, "avail": 4, "solut": 4, "n_sampl": 4, "n_featur": 4, "label": 4, "real": 4, "warn": 4, "svc": 4, "name_param": 4, "const": 4, "kernel": 4, "rbf": 4, "col": 4, "name_col": 4, "is_classif": 4, "obj": 4, "kind": 4, "heapsort": 4, "na_last": 4, "overload": 4, "argsort": 4, "sort": 4, "place": 4, "end": 4, "quicksort": 4, "mergesort": 4, "stabl": 4, "both": 4, "timsort": 4, "under": 4, "cover": 4, "actual": 4, "vari": 4, "control": 4, "treatment": 4, "na": 4, "miss": 4, "put": 4, "current_best_scor": 4, "current_best_complex": 4, "fitnessv": 4, "bestfitnessv": 4, "bestcomplex": 4, "minutes_gen": 4, "digit": 4, "arg": 4, "evolut": 4, "summari": 4, "statist": 4, "minim": 4, "further": 4, "kei": 4, "index": [4, 5], "popsiz": 4, "packag": [5, 6], "subpackag": [5, 6], "modul": [5, 6], "page": 5, "content": 6, "refer": 6}, "objects": {"": [[0, 0, 0, "-", "hybparsimony"]], "hybparsimony": [[0, 0, 0, "-", "hybparsimony"], [1, 0, 0, "-", "lhs"], [4, 0, 0, "-", "util"]], "hybparsimony.hybparsimony": [[0, 1, 1, "", "HYBparsimony"], [0, 3, 1, "", "multinomial"]], "hybparsimony.hybparsimony.HYBparsimony": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "fit"], [0, 2, 1, "", "predict"], [0, 2, 1, "", "predict_proba"]], "hybparsimony.lhs": [[2, 0, 0, "-", "base"], [3, 0, 0, "-", "util"]], "hybparsimony.lhs.base": [[2, 0, 0, "-", "geneticLHS"], [2, 0, 0, "-", "improvedLHS"], [2, 0, 0, "-", "maximinLHS"], [2, 0, 0, "-", "optimumLHS"], [2, 0, 0, "-", "randomLHS"]], "hybparsimony.lhs.base.geneticLHS": [[2, 3, 1, "", "geneticLHS"]], "hybparsimony.lhs.base.improvedLHS": [[2, 3, 1, "", "improvedLHS"]], "hybparsimony.lhs.base.maximinLHS": [[2, 3, 1, "", "maximinLHS"]], "hybparsimony.lhs.base.optimumLHS": [[2, 3, 1, "", "optimumLHS"]], "hybparsimony.lhs.base.randomLHS": [[2, 3, 1, "", "randomLHS"], [2, 3, 1, "", "randomLHS_int"]], "hybparsimony.lhs.util": [[3, 0, 0, "-", "bclib"], [3, 0, 0, "-", "utilityLHS"]], "hybparsimony.lhs.util.bclib": [[3, 3, 1, "", "findorder"], [3, 3, 1, "", "findorder_zero"], [3, 3, 1, "", "inner_product"]], "hybparsimony.lhs.util.utilityLHS": [[3, 3, 1, "", "calculateDistance"], [3, 3, 1, "", "calculateDistanceSquared"], [3, 3, 1, "", "calculateSOptimal"], [3, 3, 1, "", "convertIntegerToNumericLhs"], [3, 3, 1, "", "initializeAvailableMatrix"], [3, 3, 1, "", "isValidLHS"], [3, 3, 1, "", "isValidLHS_int"], [3, 3, 1, "", "runif_std"], [3, 3, 1, "", "runifint"], [3, 3, 1, "", "sumInvDistance"]], "hybparsimony.util": [[4, 0, 0, "-", "complexity"], [4, 0, 0, "-", "fitness"], [4, 0, 0, "-", "hyb_aux"], [4, 0, 0, "-", "models"], [4, 3, 1, "", "order"], [4, 0, 0, "-", "order"], [4, 3, 1, "", "parsimony_monitor"], [4, 0, 0, "-", "parsimony_monitor"], [4, 0, 0, "-", "population"]], "hybparsimony.util.complexity": [[4, 3, 1, "", "decision_tree_complexity"], [4, 3, 1, "", "generic_complexity"], [4, 3, 1, "", "kernel_ridge_complexity"], [4, 3, 1, "", "knn_complexity"], [4, 3, 1, "", "linearModels_complexity"], [4, 3, 1, "", "mlp_complexity"], [4, 3, 1, "", "randomForest_complexity"], [4, 3, 1, "", "svm_complexity"], [4, 3, 1, "", "xgboost_complexity"]], "hybparsimony.util.fitness": [[4, 3, 1, "", "fitness_for_parallel"], [4, 3, 1, "", "getFitness"]], "hybparsimony.util.models": [[4, 3, 1, "", "check_algorithm"]], "hybparsimony.util.order": [[4, 3, 1, "", "order"]], "hybparsimony.util.parsimony_monitor": [[4, 3, 1, "", "parsimony_monitor"], [4, 3, 1, "", "parsimony_summary"]], "hybparsimony.util.population": [[4, 1, 1, "", "Chromosome"], [4, 1, 1, "", "Population"]], "hybparsimony.util.population.Chromosome": [[4, 4, 1, "", "columns"], [4, 4, 1, "", "params"]], "hybparsimony.util.population.Population": [[4, 5, 1, "", "CATEGORICAL"], [4, 5, 1, "", "CONSTANT"], [4, 5, 1, "", "FLOAT"], [4, 5, 1, "", "INTEGER"], [4, 5, 1, "", "POWER"], [4, 2, 1, "", "getChromosome"], [4, 4, 1, "", "paramsnames"], [4, 4, 1, "", "population"], [4, 2, 1, "", "update_to_feat_thres"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"hybparsimoni": [0, 1, 2, 3, 4, 5, 6], "packag": [0, 1, 2, 3, 4], "subpackag": [0, 1], "submodul": [0, 2, 3, 4], "exampl": [0, 4], "modul": [0, 1, 2, 3, 4], "refer": 0, "attribut": 0, "paramet": [0, 2, 4], "return": [0, 2, 4], "see": 0, "also": 0, "content": [0, 1, 2, 3, 4, 5], "lh": [1, 2, 3], "base": 2, "geneticlh": 2, "improvedlh": 2, "maximinlh": 2, "optimumlh": 2, "randomlh": 2, "util": [3, 4], "bclib": 3, "utilitylh": 3, "complex": 4, "fit": 4, "hyb_aux": 4, "model": 4, "order": 4, "parsimony_monitor": 4, "popul": 4, "welcom": 5, "document": 5, "": 5, "indic": 5, "tabl": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"hybparsimony.lhs package": [[1, "hybparsimony-lhs-package"]], "Subpackages": [[1, "subpackages"], [0, "subpackages"]], "Module contents": [[1, "module-hybparsimony.lhs"], [2, "module-hybparsimony.lhs.base"], [3, "module-hybparsimony.lhs.util"], [4, "module-hybparsimony.util"], [0, "module-hybparsimony"]], "hybparsimony.lhs.base package": [[2, "hybparsimony-lhs-base-package"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [0, "submodules"]], "hybparsimony.lhs.base.geneticLHS module": [[2, "module-hybparsimony.lhs.base.geneticLHS"]], "Parameters": [[2, "parameters"], [2, "id1"], [2, "id3"], [2, "id5"], [2, "id7"], [2, "id9"], [4, "parameters"], [4, "id13"], [4, "id17"], [4, "id21"], [4, "id25"], [4, "id29"], [4, "id33"], [4, "id37"], [4, "id41"], [4, "id43"], [4, "id46"], [4, "id47"], [4, "id50"], [4, "id52"], [4, "id53"], [0, "parameters"], [0, "id1"], [0, "id2"], [0, "id4"]], "Returns": [[2, "returns"], [2, "id2"], [2, "id4"], [2, "id6"], [2, "id8"], [2, "id10"], [4, "returns"], [4, "id16"], [4, "id20"], [4, "id24"], [4, "id28"], [4, "id32"], [4, "id36"], [4, "id40"], [4, "id42"], [4, "id44"], [4, "id51"], [0, "returns"], [0, "id3"], [0, "id5"]], "hybparsimony.lhs.base.improvedLHS module": [[2, "module-hybparsimony.lhs.base.improvedLHS"]], "hybparsimony.lhs.base.maximinLHS module": [[2, "module-hybparsimony.lhs.base.maximinLHS"]], "hybparsimony.lhs.base.optimumLHS module": [[2, "module-hybparsimony.lhs.base.optimumLHS"]], "hybparsimony.lhs.base.randomLHS module": [[2, "module-hybparsimony.lhs.base.randomLHS"]], "hybparsimony.lhs.util package": [[3, "hybparsimony-lhs-util-package"]], "hybparsimony.lhs.util.bclib module": [[3, "module-hybparsimony.lhs.util.bclib"]], "hybparsimony.lhs.util.utilityLHS module": [[3, "module-hybparsimony.lhs.util.utilityLHS"]], "hybparsimony.util package": [[4, "hybparsimony-util-package"]], "hybparsimony.util.complexity module": [[4, "module-hybparsimony.util.complexity"]], "hybparsimony.util.fitness module": [[4, "module-hybparsimony.util.fitness"]], "Examples": [[4, "examples"], [4, "id45"], [0, "examples"], [0, "id6"]], "hybparsimony.util.hyb_aux module": [[4, "module-hybparsimony.util.hyb_aux"]], "hybparsimony.util.models module": [[4, "module-hybparsimony.util.models"]], "hybparsimony.util.order module": [[4, "module-hybparsimony.util.order"]], "hybparsimony.util.parsimony_monitor module": [[4, "module-hybparsimony.util.parsimony_monitor"]], "hybparsimony.util.population module": [[4, "module-hybparsimony.util.population"]], "Welcome to HYBparsimony Documentation\u2019s documentation!": [[5, "welcome-to-hybparsimony-documentation-s-documentation"]], "Contents:": [[5, null]], "Indices and tables": [[5, "indices-and-tables"]], "hybparsimony": [[6, "hybparsimony"]], "hybparsimony package": [[0, "hybparsimony-package"]], "hybparsimony.Examples module": [[0, "hybparsimony-examples-module"]], "hybparsimony.hybparsimony module": [[0, "module-hybparsimony.hybparsimony"]], "References": [[0, "references"]], "Attributes": [[0, "attributes"]], "See Also": [[0, "see-also"]]}, "indexentries": {"hybparsimony (class in hybparsimony.hybparsimony)": [[0, "hybparsimony.hybparsimony.HYBparsimony"]], "__init__() (hybparsimony.hybparsimony.hybparsimony method)": [[0, "hybparsimony.hybparsimony.HYBparsimony.__init__"]], "fit() (hybparsimony.hybparsimony.hybparsimony method)": [[0, "hybparsimony.hybparsimony.HYBparsimony.fit"]], "hybparsimony": [[0, "module-hybparsimony"]], "hybparsimony.hybparsimony": [[0, "module-hybparsimony.hybparsimony"]], "module": [[0, "module-hybparsimony"], [0, "module-hybparsimony.hybparsimony"], [1, "module-hybparsimony.lhs"], [2, "module-hybparsimony.lhs.base"], [2, "module-hybparsimony.lhs.base.geneticLHS"], [2, "module-hybparsimony.lhs.base.improvedLHS"], [2, "module-hybparsimony.lhs.base.maximinLHS"], [2, "module-hybparsimony.lhs.base.optimumLHS"], [2, "module-hybparsimony.lhs.base.randomLHS"], [3, "module-hybparsimony.lhs.util"], [3, "module-hybparsimony.lhs.util.bclib"], [3, "module-hybparsimony.lhs.util.utilityLHS"], [4, "module-hybparsimony.util"], [4, "module-hybparsimony.util.complexity"], [4, "module-hybparsimony.util.fitness"], [4, "module-hybparsimony.util.hyb_aux"], [4, "module-hybparsimony.util.models"], [4, "module-hybparsimony.util.order"], [4, "module-hybparsimony.util.parsimony_monitor"], [4, "module-hybparsimony.util.population"]], "multinomial() (in module hybparsimony.hybparsimony)": [[0, "hybparsimony.hybparsimony.multinomial"]], "predict() (hybparsimony.hybparsimony.hybparsimony method)": [[0, "hybparsimony.hybparsimony.HYBparsimony.predict"]], "predict_proba() (hybparsimony.hybparsimony.hybparsimony method)": [[0, "hybparsimony.hybparsimony.HYBparsimony.predict_proba"]], "hybparsimony.lhs": [[1, "module-hybparsimony.lhs"]], "geneticlhs() (in module hybparsimony.lhs.base.geneticlhs)": [[2, "hybparsimony.lhs.base.geneticLHS.geneticLHS"]], "hybparsimony.lhs.base": [[2, "module-hybparsimony.lhs.base"]], "hybparsimony.lhs.base.geneticlhs": [[2, "module-hybparsimony.lhs.base.geneticLHS"]], "hybparsimony.lhs.base.improvedlhs": [[2, "module-hybparsimony.lhs.base.improvedLHS"]], "hybparsimony.lhs.base.maximinlhs": [[2, "module-hybparsimony.lhs.base.maximinLHS"]], "hybparsimony.lhs.base.optimumlhs": [[2, "module-hybparsimony.lhs.base.optimumLHS"]], "hybparsimony.lhs.base.randomlhs": [[2, "module-hybparsimony.lhs.base.randomLHS"]], "improvedlhs() (in module hybparsimony.lhs.base.improvedlhs)": [[2, "hybparsimony.lhs.base.improvedLHS.improvedLHS"]], "maximinlhs() (in module hybparsimony.lhs.base.maximinlhs)": [[2, "hybparsimony.lhs.base.maximinLHS.maximinLHS"]], "optimumlhs() (in module hybparsimony.lhs.base.optimumlhs)": [[2, "hybparsimony.lhs.base.optimumLHS.optimumLHS"]], "randomlhs() (in module hybparsimony.lhs.base.randomlhs)": [[2, "hybparsimony.lhs.base.randomLHS.randomLHS"]], "randomlhs_int() (in module hybparsimony.lhs.base.randomlhs)": [[2, "hybparsimony.lhs.base.randomLHS.randomLHS_int"]], "calculatedistance() (in module hybparsimony.lhs.util.utilitylhs)": [[3, "hybparsimony.lhs.util.utilityLHS.calculateDistance"]], "calculatedistancesquared() (in module hybparsimony.lhs.util.utilitylhs)": [[3, "hybparsimony.lhs.util.utilityLHS.calculateDistanceSquared"]], "calculatesoptimal() (in module hybparsimony.lhs.util.utilitylhs)": [[3, "hybparsimony.lhs.util.utilityLHS.calculateSOptimal"]], "convertintegertonumericlhs() (in module hybparsimony.lhs.util.utilitylhs)": [[3, "hybparsimony.lhs.util.utilityLHS.convertIntegerToNumericLhs"]], "findorder() (in module hybparsimony.lhs.util.bclib)": [[3, "hybparsimony.lhs.util.bclib.findorder"]], "findorder_zero() (in module hybparsimony.lhs.util.bclib)": [[3, "hybparsimony.lhs.util.bclib.findorder_zero"]], "hybparsimony.lhs.util": [[3, "module-hybparsimony.lhs.util"]], "hybparsimony.lhs.util.bclib": [[3, "module-hybparsimony.lhs.util.bclib"]], "hybparsimony.lhs.util.utilitylhs": [[3, "module-hybparsimony.lhs.util.utilityLHS"]], "initializeavailablematrix() (in module hybparsimony.lhs.util.utilitylhs)": [[3, "hybparsimony.lhs.util.utilityLHS.initializeAvailableMatrix"]], "inner_product() (in module hybparsimony.lhs.util.bclib)": [[3, "hybparsimony.lhs.util.bclib.inner_product"]], "isvalidlhs() (in module hybparsimony.lhs.util.utilitylhs)": [[3, "hybparsimony.lhs.util.utilityLHS.isValidLHS"]], "isvalidlhs_int() (in module hybparsimony.lhs.util.utilitylhs)": [[3, "hybparsimony.lhs.util.utilityLHS.isValidLHS_int"]], "runif_std() (in module hybparsimony.lhs.util.utilitylhs)": [[3, "hybparsimony.lhs.util.utilityLHS.runif_std"]], "runifint() (in module hybparsimony.lhs.util.utilitylhs)": [[3, "hybparsimony.lhs.util.utilityLHS.runifint"]], "suminvdistance() (in module hybparsimony.lhs.util.utilitylhs)": [[3, "hybparsimony.lhs.util.utilityLHS.sumInvDistance"]], "categorical (hybparsimony.util.population.population attribute)": [[4, "hybparsimony.util.population.Population.CATEGORICAL"]], "constant (hybparsimony.util.population.population attribute)": [[4, "hybparsimony.util.population.Population.CONSTANT"]], "chromosome (class in hybparsimony.util.population)": [[4, "hybparsimony.util.population.Chromosome"]], "float (hybparsimony.util.population.population attribute)": [[4, "hybparsimony.util.population.Population.FLOAT"]], "integer (hybparsimony.util.population.population attribute)": [[4, "hybparsimony.util.population.Population.INTEGER"]], "power (hybparsimony.util.population.population attribute)": [[4, "hybparsimony.util.population.Population.POWER"]], "population (class in hybparsimony.util.population)": [[4, "hybparsimony.util.population.Population"]], "check_algorithm() (in module hybparsimony.util.models)": [[4, "hybparsimony.util.models.check_algorithm"]], "columns (hybparsimony.util.population.chromosome property)": [[4, "hybparsimony.util.population.Chromosome.columns"]], "decision_tree_complexity() (in module hybparsimony.util.complexity)": [[4, "hybparsimony.util.complexity.decision_tree_complexity"]], "fitness_for_parallel() (in module hybparsimony.util.fitness)": [[4, "hybparsimony.util.fitness.fitness_for_parallel"]], "generic_complexity() (in module hybparsimony.util.complexity)": [[4, "hybparsimony.util.complexity.generic_complexity"]], "getchromosome() (hybparsimony.util.population.population method)": [[4, "hybparsimony.util.population.Population.getChromosome"]], "getfitness() (in module hybparsimony.util.fitness)": [[4, "hybparsimony.util.fitness.getFitness"]], "hybparsimony.util": [[4, "module-hybparsimony.util"]], "hybparsimony.util.complexity": [[4, "module-hybparsimony.util.complexity"]], "hybparsimony.util.fitness": [[4, "module-hybparsimony.util.fitness"]], "hybparsimony.util.hyb_aux": [[4, "module-hybparsimony.util.hyb_aux"]], "hybparsimony.util.models": [[4, "module-hybparsimony.util.models"]], "hybparsimony.util.order": [[4, "module-hybparsimony.util.order"]], "hybparsimony.util.parsimony_monitor": [[4, "module-hybparsimony.util.parsimony_monitor"]], "hybparsimony.util.population": [[4, "module-hybparsimony.util.population"]], "kernel_ridge_complexity() (in module hybparsimony.util.complexity)": [[4, "hybparsimony.util.complexity.kernel_ridge_complexity"]], "knn_complexity() (in module hybparsimony.util.complexity)": [[4, "hybparsimony.util.complexity.knn_complexity"]], "linearmodels_complexity() (in module hybparsimony.util.complexity)": [[4, "hybparsimony.util.complexity.linearModels_complexity"]], "mlp_complexity() (in module hybparsimony.util.complexity)": [[4, "hybparsimony.util.complexity.mlp_complexity"]], "order() (in module hybparsimony.util)": [[4, "hybparsimony.util.order"]], "order() (in module hybparsimony.util.order)": [[4, "hybparsimony.util.order.order"]], "params (hybparsimony.util.population.chromosome property)": [[4, "hybparsimony.util.population.Chromosome.params"]], "paramsnames (hybparsimony.util.population.population property)": [[4, "hybparsimony.util.population.Population.paramsnames"]], "parsimony_monitor() (in module hybparsimony.util)": [[4, "hybparsimony.util.parsimony_monitor"]], "parsimony_monitor() (in module hybparsimony.util.parsimony_monitor)": [[4, "hybparsimony.util.parsimony_monitor.parsimony_monitor"]], "parsimony_summary() (in module hybparsimony.util.parsimony_monitor)": [[4, "hybparsimony.util.parsimony_monitor.parsimony_summary"]], "population (hybparsimony.util.population.population property)": [[4, "hybparsimony.util.population.Population.population"]], "randomforest_complexity() (in module hybparsimony.util.complexity)": [[4, "hybparsimony.util.complexity.randomForest_complexity"]], "svm_complexity() (in module hybparsimony.util.complexity)": [[4, "hybparsimony.util.complexity.svm_complexity"]], "update_to_feat_thres() (hybparsimony.util.population.population method)": [[4, "hybparsimony.util.population.Population.update_to_feat_thres"]], "xgboost_complexity() (in module hybparsimony.util.complexity)": [[4, "hybparsimony.util.complexity.xgboost_complexity"]]}})