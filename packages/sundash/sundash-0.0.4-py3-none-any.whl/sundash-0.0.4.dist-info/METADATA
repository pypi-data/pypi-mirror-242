Metadata-Version: 2.1
Name: sundash
Version: 0.0.4
Summary: Python & JS micro framework for realtime web UI applications
Home-page: https://github.com/ruthus18/sundash
License: MIT
Keywords: backend,frontend,server,client,ws,framework
Author: Danil Tryapchev
Author-email: ruthus18@gmail.com
Requires-Python: >=3.12,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Requires-Dist: starlette (>=0.31.1,<0.32.0)
Requires-Dist: uvicorn (>=0.23.2,<0.24.0)
Requires-Dist: websockets (>=12.0,<13.0)
Project-URL: Repository, https://github.com/ruthus18/sundash
Description-Content-Type: text/markdown

# Sundash

**Python & JS micro framework for realtime web UI applications**

* **ASGI-based** -- minimal 3rd party dependencies and clean core part
* **Flexible and extensible** -- easy to customize, add 3rd party integrations
* **Realtime** -- operating through websockets bus, client & backend in app
* **Lightweight frontend** -- based on Parcel
* **Crafted with ‚ù§Ô∏è**

Link to project on PyPi: https://pypi.org/project/sundash/


### Installation

Require Python 3.12 and npm

```bash
    pip install sundash
```


### Frontend


**FIXME:**

_Frontend build not working now, when install from PyPi_

_Need to upgrade frontend and build system_

```bash
    npm install
```


### Examples

Check `examples` folder.

Run example (counter with buttons and user interaction):

```bash
    python -m examples counter
```


### Basic example

```python
    import datetime as dt

    from sundash import EVERY_SECOND
    from sundash import App
    from sundash import Component
    from sundash import on
    

    app = App()

    now = lambda: dt.datetime.now().strftime('%H:%M:%S')


    class Clock(Component):
        html = '<p><b>Time: </b>{{ time }}<p/>'

        class Vars:
            # you can pass init values (static or procedural)
            time: str = now

        # run callback when user open webpage
        @on(EVERY_SECOND)
        async def update(self, _):
            await self.set('time', now())  # live update of value

    # add plain HTML or own components
    app.run(layout=('<h1>üï∞Ô∏è Clock</h1>', Clock))
```

![clock](examples/img/_02_clock.png "Clock")


### –í —á–µ–º –∏–¥–µ—è?

–•–æ—á—É –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞—Ç—å real-time –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫ JS –ª–∏–±–∞–º, —á—Ç–æ–±—ã –±—ã–ª–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å
–Ω–∞–ø–∏—Å–∞—Ç—å –ª—é–±—É—é –≤–µ–±-–º–æ—Ä–¥—É –¥–ª—è –ª—é–±—ã—Ö —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.

**–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:** –ª—é–±—ã–µ –∞–¥–º–∏–Ω–∫–∏, —Ç–æ—Ä–≥–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω–∞–ª—ã, –¥–∞—à–±–æ—Ä–¥—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞, —Ç—É–ª–∑—ã –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.
–í—Å–µ –∫–∞—Å—Ç–æ–º–Ω–æ–µ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ, —á—Ç–æ —Ö–æ—á–µ—Ç—Å—è –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å, –Ω–æ —Ç—ã –±—ç–∫–µ–Ω–¥–µ—Ä –∏ —Ö–æ—á–µ—à—å –ø–∏—Å–∞—Ç—å
–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –Ω–∞ Python —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º JavaScript-–∞,
–±–µ–∑ —Ç—è–∂–µ–ª–æ–≤–µ—Å–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ä–∏—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ—Ä–æ–≤ (React –∏ –ø—Ä).


### Development

* Required: npm, nodejs, python 3.12, poetry, virtualenv
* Install JS dependencies: `npm install`
* Install Python dependencies: `poetry install --with=dev`
* Run local linters: `poe q`
* Publish package: `poetry publish --build`
