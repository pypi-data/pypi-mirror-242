[tool.poetry]
name = "renderj2"
version = "1.2.1b2"
description = "Simplate template rensder usesd jinja2"
authors = ["KAWAI Shun <mypaceshun@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [
  {include = "renderj2", from = "src"}
]

[tool.poetry.dependencies]
python = "^3.9"
jinja2 = "^3.1.2"
click = "^8.1.7"
pyyaml = "^6.0.1"
click-log = "^0.4.0"


[tool.poetry.group.dev.dependencies]
flake8 = "^6.1.0"
pyproject-flake8 = "^6.1.0"
mypy = "^1.7.0"
isort = "^5.12.0"
autoflake = "^2.2.1"
black = "^23.11.0"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
types-pyyaml = "^6.0.12.12"

[tool.poetry.scripts]
renderj2 = "renderj2.renderj2:cmd"

[tool.poe.tasks.lint]
sequence = [
  { cmd = "pflake8 src/ tests/" },
  { cmd = "mypy src/ tests/" },
]
ignore_fail = "return_non_zero"

[tool.poe.tasks.format]
sequence = [
  { cmd = "isort src/ tests/" },
  { cmd = "autoflake -ir --remove-all-unused-imports --ignore-init-module-imports --remove-unused-variables src/ tests/" },
  { cmd = "black src/ tests/" },
  "lint",
]

[tool.poe.tasks.test]
cmd = "pytest --cov=src/ --junit-xml=report.xml --cov-report=html --cov-report=xml --cov-report=term tests/"

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 88
max-complexity = 10

[tool.mypy]
[[tool.mypy.overrides]]
module = [
  "click_log",
]
ignore_missing_imports = true


[tool.poetry-dynamic-versioning]
enable = false
[tool.poetry-dynamic-versioning.substitution]
folders = [
  { path = "src" }
]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"
