"""
@generated by mypy-protobuf.  Do not edit manually!
"""
import abc

import grpc

from .SiLAService_pb2 import *

#
# This Feature MUST be implemented by each SiLA Server.
#
# It specifies Commands and Properties to discover the Features a SiLA Server implements as well as details
# about the SiLA Server, like name, type, description, vendor and UUID.
#
# Any interaction described in this feature MUST not affect the behaviour of any other Feature.
class SiLAServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    #
    # Get the Feature Definition of an implemented Feature by its fully qualified Feature Identifier.
    # This command has no preconditions and no further dependencies and can be called at any time.
    GetFeatureDefinition: grpc.UnaryUnaryMultiCallable[
        global___GetFeatureDefinition_Parameters, global___GetFeatureDefinition_Responses
    ] = ...

    #
    # Sets a human readable name to the Server Name Property.Command has no preconditions and
    # no further dependencies and can be called at any time.
    SetServerName: grpc.UnaryUnaryMultiCallable[
        global___SetServerName_Parameters, global___SetServerName_Responses
    ] = ...

    #
    # Human readable name of the SiLA Server. The name can be set using the 'Set Server Name' command.
    Get_ServerName: grpc.UnaryUnaryMultiCallable[
        global___Get_ServerName_Parameters, global___Get_ServerName_Responses
    ] = ...

    #
    # The type of this server. It, could be, e.g., in the case of a SiLA Device the model name.
    # It is specified by the implementer of the SiLA Server and MAY not be unique.
    Get_ServerType: grpc.UnaryUnaryMultiCallable[
        global___Get_ServerType_Parameters, global___Get_ServerType_Responses
    ] = ...

    #
    # Globally unique identifier that identifies a SiLA Server. The Server UUID MUST be generated once
    # and remain the same for all times.
    Get_ServerUUID: grpc.UnaryUnaryMultiCallable[
        global___Get_ServerUUID_Parameters, global___Get_ServerUUID_Responses
    ] = ...

    #
    # Description of the SiLA Server. This should include the use and purpose of this SiLA Server.
    Get_ServerDescription: grpc.UnaryUnaryMultiCallable[
        global___Get_ServerDescription_Parameters, global___Get_ServerDescription_Responses
    ] = ...

    #
    # Returns the version of the SiLA Server. A "Major" and a "Minor" version number (e.g. 1.0) MUST be provided,
    # a Patch version number MAY be provided. Optionally, an arbitrary text, separated by an underscore MAY be
    # appended, e.g. “3.19.373_mighty_lab_devices”.
    Get_ServerVersion: grpc.UnaryUnaryMultiCallable[
        global___Get_ServerVersion_Parameters, global___Get_ServerVersion_Responses
    ] = ...

    #
    # Returns the URL to the website of the vendor or the website of the product of this SiLA Server.
    # This URL SHOULD be accessible at all times.
    # The URL is a Uniform Resource Locator as defined in RFC 1738.
    Get_ServerVendorURL: grpc.UnaryUnaryMultiCallable[
        global___Get_ServerVendorURL_Parameters, global___Get_ServerVendorURL_Responses
    ] = ...

    #
    # Returns a list of fully qualified Feature identifiers of all implemented Features of this SiLA Server.
    # This list SHOULD remain the same throughout the lifetime of the SiLA Server.
    Get_ImplementedFeatures: grpc.UnaryUnaryMultiCallable[
        global___Get_ImplementedFeatures_Parameters, global___Get_ImplementedFeatures_Responses
    ] = ...

#
# This Feature MUST be implemented by each SiLA Server.
#
# It specifies Commands and Properties to discover the Features a SiLA Server implements as well as details
# about the SiLA Server, like name, type, description, vendor and UUID.
#
# Any interaction described in this feature MUST not affect the behaviour of any other Feature.
class SiLAServiceServicer(metaclass=abc.ABCMeta):
    #
    # Get the Feature Definition of an implemented Feature by its fully qualified Feature Identifier.
    # This command has no preconditions and no further dependencies and can be called at any time.
    @abc.abstractmethod
    def GetFeatureDefinition(
        self,
        request: global___GetFeatureDefinition_Parameters,
        context: grpc.ServicerContext,
    ) -> global___GetFeatureDefinition_Responses: ...
    #
    # Sets a human readable name to the Server Name Property.Command has no preconditions and
    # no further dependencies and can be called at any time.
    @abc.abstractmethod
    def SetServerName(
        self,
        request: global___SetServerName_Parameters,
        context: grpc.ServicerContext,
    ) -> global___SetServerName_Responses: ...
    #
    # Human readable name of the SiLA Server. The name can be set using the 'Set Server Name' command.
    @abc.abstractmethod
    def Get_ServerName(
        self,
        request: global___Get_ServerName_Parameters,
        context: grpc.ServicerContext,
    ) -> global___Get_ServerName_Responses: ...
    #
    # The type of this server. It, could be, e.g., in the case of a SiLA Device the model name.
    # It is specified by the implementer of the SiLA Server and MAY not be unique.
    @abc.abstractmethod
    def Get_ServerType(
        self,
        request: global___Get_ServerType_Parameters,
        context: grpc.ServicerContext,
    ) -> global___Get_ServerType_Responses: ...
    #
    # Globally unique identifier that identifies a SiLA Server. The Server UUID MUST be generated once
    # and remain the same for all times.
    @abc.abstractmethod
    def Get_ServerUUID(
        self,
        request: global___Get_ServerUUID_Parameters,
        context: grpc.ServicerContext,
    ) -> global___Get_ServerUUID_Responses: ...
    #
    # Description of the SiLA Server. This should include the use and purpose of this SiLA Server.
    @abc.abstractmethod
    def Get_ServerDescription(
        self,
        request: global___Get_ServerDescription_Parameters,
        context: grpc.ServicerContext,
    ) -> global___Get_ServerDescription_Responses: ...
    #
    # Returns the version of the SiLA Server. A "Major" and a "Minor" version number (e.g. 1.0) MUST be provided,
    # a Patch version number MAY be provided. Optionally, an arbitrary text, separated by an underscore MAY be
    # appended, e.g. “3.19.373_mighty_lab_devices”.
    @abc.abstractmethod
    def Get_ServerVersion(
        self,
        request: global___Get_ServerVersion_Parameters,
        context: grpc.ServicerContext,
    ) -> global___Get_ServerVersion_Responses: ...
    #
    # Returns the URL to the website of the vendor or the website of the product of this SiLA Server.
    # This URL SHOULD be accessible at all times.
    # The URL is a Uniform Resource Locator as defined in RFC 1738.
    @abc.abstractmethod
    def Get_ServerVendorURL(
        self,
        request: global___Get_ServerVendorURL_Parameters,
        context: grpc.ServicerContext,
    ) -> global___Get_ServerVendorURL_Responses: ...
    #
    # Returns a list of fully qualified Feature identifiers of all implemented Features of this SiLA Server.
    # This list SHOULD remain the same throughout the lifetime of the SiLA Server.
    @abc.abstractmethod
    def Get_ImplementedFeatures(
        self,
        request: global___Get_ImplementedFeatures_Parameters,
        context: grpc.ServicerContext,
    ) -> global___Get_ImplementedFeatures_Responses: ...

def add_SiLAServiceServicer_to_server(servicer: SiLAServiceServicer, server: grpc.Server) -> None: ...
