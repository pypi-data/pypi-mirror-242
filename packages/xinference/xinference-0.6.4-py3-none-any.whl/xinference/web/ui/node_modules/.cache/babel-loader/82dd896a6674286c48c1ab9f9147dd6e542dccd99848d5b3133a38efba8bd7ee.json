{"ast":null,"code":"import _toConsumableArray from\"/home/runner/work/inference/inference/xinference/web/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/runner/work/inference/inference/xinference/web/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/home/runner/work/inference/inference/xinference/web/ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/runner/work/inference/inference/xinference/web/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/runner/work/inference/inference/xinference/web/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useContext}from\"react\";import TextField from\"@mui/material/TextField\";import Button from\"@mui/material/Button\";import{ApiContext}from\"../../components/apiContext\";import{Box,Checkbox,FormHelperText,FormControlLabel,Radio,RadioGroup,FormControl}from\"@mui/material\";import{useMode}from\"../../theme\";import Title from\"../../components/Title\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SUPPORTED_LANGUAGES_DICT={en:\"English\",zh:\"Chinese\"};var SUPPORTED_FEATURES=[\"Generate\",\"Chat\"];// Convert dictionary of supported languages into list\nvar SUPPORTED_LANGUAGES=Object.keys(SUPPORTED_LANGUAGES_DICT);var RegisterModel=function RegisterModel(){var ERROR_COLOR=useMode();var endPoint=useContext(ApiContext).endPoint;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),errorMessage=_useState2[0],setErrorMessage=_useState2[1];var _useState3=useState(\"pytorch\"),_useState4=_slicedToArray(_useState3,2),modelFormat=_useState4[0],setModelFormat=_useState4[1];var _useState5=useState(7),_useState6=_slicedToArray(_useState5,2),modelSize=_useState6[0],setModelSize=_useState6[1];var _useState7=useState(\"/path/to/llama-2\"),_useState8=_slicedToArray(_useState7,2),modelUri=_useState8[0],setModelUri=_useState8[1];var _useState9=useState({version:1,context_length:2048,model_name:\"custom-llama-2\",model_lang:[\"en\"],model_ability:[\"generate\"],model_description:\"This is a custom model description.\",model_specs:[],prompt_style:undefined}),_useState10=_slicedToArray(_useState9,2),formData=_useState10[0],setFormData=_useState10[1];var _useState11=useState(\"vicuna\"),_useState12=_slicedToArray(_useState11,2),promptStyleLabel=_useState12[0],setPromptStyleLabel=_useState12[1];var promptStyles=[{name:\"vicuna\",style_name:\"ADD_COLON_TWO\",system_prompt:\"A chat between a curious human and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the human's questions.\",roles:[\"USER\",\"ASSISTANT\"],intra_message_sep:\" \",inter_message_sep:\"</s>\"},{name:\"llama-2-chat\",style_name:\"LLAMA2\",system_prompt:\"<s>[INST] <<SYS>>\\nYou are a helpful AI assistant.\\n<</SYS>>\\n\\n\",roles:[\"[INST]\",\"[/INST]\"],intra_message_sep:\" \",inter_message_sep:\" </s><s>\",stop_token_ids:[2]},{name:\"falcon-instruct\",style_name:\"FALCON\",system_prompt:\"\",roles:[\"User\",\"Assistant\"],intra_message_sep:\"\\n\",inter_message_sep:\"<|endoftext|>\",stop:[\"\\nUser\"],stop_token_ids:[0,1,2,3,4,5,6,7,8,9,10,11]},{name:\"baichuan-chat\",style_name:\"NO_COLON_TWO\",system_prompt:\"\",roles:[\" <reserved_102> \",\" <reserved_103> \"],intra_message_sep:\"\",inter_message_sep:\"</s>\",stop_token_ids:[2,195]},{name:\"baichuan-2-chat\",style_name:\"NO_COLON_TWO\",system_prompt:\"\",roles:[\"<reserved_106>\",\"<reserved_107>\"],intra_message_sep:\"\",inter_message_sep:\"</s>\",stop_token_ids:[2,195]},{name:\"internlm-chat\",style_name:\"INTERNLM\",system_prompt:\"\",roles:[\"<|User|>\",\"<|Bot|>\"],intra_message_sep:\"<eoh>\\n\",inter_message_sep:\"<eoa>\\n\",stop_token_ids:[1,103028],stop:[\"<eoa>\"]}];// model name must be\n// 1. Starts with an alphanumeric character (a letter or a digit).\n// 2. Followed by any number of alphanumeric characters, underscores (_), or hyphens (-).\nvar errorModelName=!/^[A-Za-z0-9][A-Za-z0-9_-]*$/.test(formData.model_name);var errorModelDescription=!/^[A-Za-z0-9\\s!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]{0,500}$/.test(formData.model_description);var errorContextLength=formData.context_length===0;var errorLanguage=formData.model_lang===undefined||formData.model_lang.length===0;var errorAbility=formData.model_ability===undefined||formData.model_ability.length===0;var errorModelSize=formData.model_specs&&formData.model_specs.some(function(spec){return spec.model_size_in_billions===undefined||spec.model_size_in_billions===0;});var errorAny=errorModelName||errorModelDescription||errorContextLength||errorLanguage||errorAbility||errorModelSize;var isModelFormatPytorch=function isModelFormatPytorch(){return modelFormat===\"pytorch\";};var getPathComponents=function getPathComponents(path){var normalizedPath=path.replace(/\\\\/g,\"/\");var baseDir=normalizedPath.substring(0,normalizedPath.lastIndexOf(\"/\"));var filename=normalizedPath.substring(normalizedPath.lastIndexOf(\"/\")+1);return{baseDir:baseDir,filename:filename};};var handleClick=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _getPathComponents,baseDir,filename,ps,response,errorData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!isModelFormatPytorch()){_getPathComponents=getPathComponents(modelUri),baseDir=_getPathComponents.baseDir,filename=_getPathComponents.filename;formData.model_specs=[{model_format:modelFormat,model_size_in_billions:modelSize,quantizations:[\"\"],model_id:\"\",model_file_name_template:filename,model_uri:baseDir}];}else{formData.model_specs=[{model_format:modelFormat,model_size_in_billions:modelSize,quantizations:[\"4-bit\",\"8-bit\",\"none\"],model_id:\"\",model_uri:modelUri}];}ps=promptStyles.find(function(item){return item.name===promptStyleLabel;});formData.prompt_style={style_name:ps.style_name,system_prompt:ps.system_prompt,roles:ps.roles,intra_message_sep:ps.intra_message_sep,inter_message_sep:ps.inter_message_sep};if(!errorAny){_context.next=6;break;}setErrorMessage(\"Please fill in valid value for all fields\");return _context.abrupt(\"return\");case 6:_context.prev=6;_context.next=9;return fetch(endPoint+\"/v1/model_registrations/LLM\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({model:JSON.stringify(formData),persist:true})});case 9:response=_context.sent;if(response.ok){_context.next=15;break;}_context.next=13;return response.json();case 13:errorData=_context.sent;throw new Error(\"Server error: \".concat(response.status,\" - \").concat(errorData.detail||\"Unknown error\"));case 15:setErrorMessage(\"Model has been registered successfully! Navigate to launch model page to proceed.\");_context.next=22;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](6);console.error(\"There was a problem with the fetch operation:\",_context.t0);setErrorMessage(_context.t0.message||\"An unexpected error occurred.\");case 22:case\"end\":return _context.stop();}},_callee,null,[[6,18]]);}));return function handleClick(){return _ref.apply(this,arguments);};}();var toggleLanguage=function toggleLanguage(lang){if(formData.model_lang.includes(lang)){setFormData(_objectSpread(_objectSpread({},formData),{},{model_lang:formData.model_lang.filter(function(l){return l!==lang;})}));}else{setFormData(_objectSpread(_objectSpread({},formData),{},{model_lang:[].concat(_toConsumableArray(formData.model_lang),[lang])}));}};var toggleAbility=function toggleAbility(ability){if(formData.model_ability.includes(ability)){setFormData(_objectSpread(_objectSpread({},formData),{},{model_ability:formData.model_ability.filter(function(a){return a!==ability;})}));}else{setFormData(_objectSpread(_objectSpread({},formData),{},{model_ability:[].concat(_toConsumableArray(formData.model_ability),[ability])}));}};return/*#__PURE__*/_jsxs(Box,{m:\"20px\",children:[/*#__PURE__*/_jsx(Title,{title:\"Register Model\"}),/*#__PURE__*/_jsx(Box,{padding:\"20px\"}),/*#__PURE__*/_jsxs(FormControl,{sx:styles.baseFormControl,children:[/*#__PURE__*/_jsx(TextField,{label:\"Model Name\",error:errorModelName,defaultValue:formData.model_name,size:\"small\",helperText:\"Alphanumeric characters with properly placed hyphens and underscores. Must not match any built-in model names.\",onChange:function onChange(event){return setFormData(_objectSpread(_objectSpread({},formData),{},{model_name:event.target.value}));}}),/*#__PURE__*/_jsx(Box,{padding:\"15px\"}),/*#__PURE__*/_jsx(\"label\",{style:{paddingLeft:5},children:\"Model Format\"}),/*#__PURE__*/_jsx(RadioGroup,{value:modelFormat,onChange:function onChange(e){setModelFormat(e.target.value);},children:/*#__PURE__*/_jsxs(Box,{sx:styles.checkboxWrapper,children:[/*#__PURE__*/_jsx(Box,{sx:{marginLeft:\"10px\"},children:/*#__PURE__*/_jsx(FormControlLabel,{value:\"pytorch\",control:/*#__PURE__*/_jsx(Radio,{}),label:\"PyTorch\"})}),/*#__PURE__*/_jsx(Box,{sx:{marginLeft:\"10px\"},children:/*#__PURE__*/_jsx(FormControlLabel,{value:\"ggmlv3\",control:/*#__PURE__*/_jsx(Radio,{}),label:\"GGML\"})}),/*#__PURE__*/_jsx(Box,{sx:{marginLeft:\"10px\"},children:/*#__PURE__*/_jsx(FormControlLabel,{value:\"ggufv2\",control:/*#__PURE__*/_jsx(Radio,{}),label:\"GGUF\"})})]})}),/*#__PURE__*/_jsx(Box,{padding:\"15px\"}),/*#__PURE__*/_jsx(TextField,{error:errorContextLength,label:\"Context Length\",value:formData.context_length,size:\"small\",onChange:function onChange(event){var value=event.target.value;// Remove leading zeros\nif(/^0+/.test(value)){value=value.replace(/^0+/,\"\")||\"0\";}// Ensure it's a positive integer, if not set it to the minimum\nif(!/^\\d+$/.test(value)||parseInt(value)<0){value=\"0\";}// Update with the processed value\nsetFormData(_objectSpread(_objectSpread({},formData),{},{context_length:Number(value)}));}}),/*#__PURE__*/_jsx(Box,{padding:\"15px\"}),/*#__PURE__*/_jsx(TextField,{label:\"Model Size in Billions\",size:\"small\",error:errorModelSize,value:modelSize,onChange:function onChange(e){var value=e.target.value;// Remove leading zeros\nif(/^0+/.test(value)){value=value.replace(/^0+/,\"\")||\"0\";}// Ensure it's a positive integer, if not set it to the minimum\nif(!/^\\d+$/.test(value)||parseInt(value)<0){value=\"0\";}setModelSize(Number(value));}}),/*#__PURE__*/_jsx(Box,{padding:\"15px\"}),/*#__PURE__*/_jsx(TextField,{label:\"Model Path\",size:\"small\",value:modelUri,onChange:function onChange(e){setModelUri(e.target.value);},helperText:\"For PyTorch, provide the model directory. For GGML/GGUF, provide the model file path.\"}),/*#__PURE__*/_jsx(Box,{padding:\"15px\"}),/*#__PURE__*/_jsx(TextField,{label:\"Model Description (Optional)\",error:errorModelDescription,defaultValue:formData.model_description,size:\"small\",onChange:function onChange(event){return setFormData(_objectSpread(_objectSpread({},formData),{},{model_description:event.target.value}));}}),/*#__PURE__*/_jsx(Box,{padding:\"15px\"}),/*#__PURE__*/_jsx(\"label\",{style:{paddingLeft:5,color:errorLanguage?ERROR_COLOR:\"inherit\"},children:\"Model Languages\"}),/*#__PURE__*/_jsx(Box,{sx:styles.checkboxWrapper,children:SUPPORTED_LANGUAGES.map(function(lang){return/*#__PURE__*/_jsx(Box,{sx:{marginRight:\"10px\"},children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:formData.model_lang.includes(lang),onChange:function onChange(){return toggleLanguage(lang);},name:lang,sx:errorLanguage?{color:ERROR_COLOR,\"&.Mui-checked\":{color:ERROR_COLOR}}:{}}),label:SUPPORTED_LANGUAGES_DICT[lang],style:{paddingLeft:10,color:errorLanguage?ERROR_COLOR:\"inherit\"}})},lang);})}),/*#__PURE__*/_jsx(Box,{padding:\"15px\"}),/*#__PURE__*/_jsx(\"label\",{style:{paddingLeft:5,color:errorAbility?ERROR_COLOR:\"inherit\"},children:\"Model Abilities\"}),/*#__PURE__*/_jsx(Box,{sx:styles.checkboxWrapper,children:SUPPORTED_FEATURES.map(function(ability){return/*#__PURE__*/_jsx(Box,{sx:{marginRight:\"10px\"},children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:formData.model_ability.includes(ability.toLowerCase()),onChange:function onChange(){return toggleAbility(ability.toLowerCase());},name:ability,sx:errorAbility?{color:ERROR_COLOR,\"&.Mui-checked\":{color:ERROR_COLOR}}:{}}),label:ability,style:{paddingLeft:10,color:errorAbility?ERROR_COLOR:\"inherit\"}})},ability);})}),/*#__PURE__*/_jsx(Box,{padding:\"15px\"})]}),formData.model_ability.includes(\"chat\")&&/*#__PURE__*/_jsxs(FormControl,{sx:styles.baseFormControl,children:[/*#__PURE__*/_jsx(\"label\",{style:{paddingLeft:5,color:errorAbility?ERROR_COLOR:\"inherit\"},children:\"Prompt styles\"}),/*#__PURE__*/_jsx(FormHelperText,{children:\"Select a prompt style that aligns with the training data of your model.\"}),/*#__PURE__*/_jsx(RadioGroup,{value:promptStyleLabel,onChange:function onChange(e){setPromptStyleLabel(e.target.value);},children:/*#__PURE__*/_jsx(Box,{sx:styles.checkboxWrapper,children:promptStyles.map(function(p){return/*#__PURE__*/_jsx(Box,{sx:{marginLeft:\"10px\"},children:/*#__PURE__*/_jsx(FormControlLabel,{value:p.name,control:/*#__PURE__*/_jsx(Radio,{}),label:p.name})});})})})]}),/*#__PURE__*/_jsxs(Box,{width:\"100%\",children:[/*#__PURE__*/_jsx(\"div\",{style:_objectSpread(_objectSpread({},styles.error),{},{color:ERROR_COLOR}),children:errorMessage}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",type:\"submit\",onClick:handleClick,children:\"Register Model\"})]})]});};export default RegisterModel;var styles={baseFormControl:{width:\"100%\",margin:\"normal\",size:\"small\"},checkboxWrapper:{display:\"flex\",flexWrap:\"wrap\",maxWidth:\"80%\"},labelPaddingLeft:{paddingLeft:5},formControlLabelPaddingLeft:{paddingLeft:10},buttonBox:{width:\"100%\",margin:\"20px\"},error:{fontWeight:\"bold\",margin:\"5px 0\",padding:\"1px\",borderRadius:\"5px\"}};","map":{"version":3,"names":["React","useState","useContext","TextField","Button","ApiContext","Box","Checkbox","FormHelperText","FormControlLabel","Radio","RadioGroup","FormControl","useMode","Title","jsx","_jsx","jsxs","_jsxs","SUPPORTED_LANGUAGES_DICT","en","zh","SUPPORTED_FEATURES","SUPPORTED_LANGUAGES","Object","keys","RegisterModel","ERROR_COLOR","endPoint","_useState","_useState2","_slicedToArray","errorMessage","setErrorMessage","_useState3","_useState4","modelFormat","setModelFormat","_useState5","_useState6","modelSize","setModelSize","_useState7","_useState8","modelUri","setModelUri","_useState9","version","context_length","model_name","model_lang","model_ability","model_description","model_specs","prompt_style","undefined","_useState10","formData","setFormData","_useState11","_useState12","promptStyleLabel","setPromptStyleLabel","promptStyles","name","style_name","system_prompt","roles","intra_message_sep","inter_message_sep","stop_token_ids","stop","errorModelName","test","errorModelDescription","errorContextLength","errorLanguage","length","errorAbility","errorModelSize","some","spec","model_size_in_billions","errorAny","isModelFormatPytorch","getPathComponents","path","normalizedPath","replace","baseDir","substring","lastIndexOf","filename","handleClick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_getPathComponents","ps","response","errorData","wrap","_callee$","_context","prev","next","model_format","quantizations","model_id","model_file_name_template","model_uri","find","item","abrupt","fetch","method","headers","body","JSON","stringify","model","persist","sent","ok","json","Error","concat","status","detail","t0","console","error","message","apply","arguments","toggleLanguage","lang","includes","_objectSpread","filter","l","_toConsumableArray","toggleAbility","ability","a","m","children","title","padding","sx","styles","baseFormControl","label","defaultValue","size","helperText","onChange","event","target","value","style","paddingLeft","e","checkboxWrapper","marginLeft","control","parseInt","Number","color","map","marginRight","checked","toLowerCase","p","width","variant","type","onClick","margin","display","flexWrap","maxWidth","labelPaddingLeft","formControlLabelPaddingLeft","buttonBox","fontWeight","borderRadius"],"sources":["/home/runner/work/inference/inference/xinference/web/ui/src/scenes/register_model/index.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { ApiContext } from \"../../components/apiContext\";\nimport {\n  Box,\n  Checkbox,\n  FormHelperText,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n} from \"@mui/material\";\nimport { useMode } from \"../../theme\";\nimport Title from \"../../components/Title\";\n\nconst SUPPORTED_LANGUAGES_DICT = { en: \"English\", zh: \"Chinese\" };\nconst SUPPORTED_FEATURES = [\"Generate\", \"Chat\"];\n\n// Convert dictionary of supported languages into list\nconst SUPPORTED_LANGUAGES = Object.keys(SUPPORTED_LANGUAGES_DICT);\n\nconst RegisterModel = () => {\n  const ERROR_COLOR = useMode();\n  const endPoint = useContext(ApiContext).endPoint;\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [modelFormat, setModelFormat] = useState(\"pytorch\");\n  const [modelSize, setModelSize] = useState(7);\n  const [modelUri, setModelUri] = useState(\"/path/to/llama-2\");\n  const [formData, setFormData] = useState({\n    version: 1,\n    context_length: 2048,\n    model_name: \"custom-llama-2\",\n    model_lang: [\"en\"],\n    model_ability: [\"generate\"],\n    model_description: \"This is a custom model description.\",\n    model_specs: [],\n    prompt_style: undefined,\n  });\n  const [promptStyleLabel, setPromptStyleLabel] = useState(\"vicuna\");\n  const promptStyles = [\n    {\n      name: \"vicuna\",\n      style_name: \"ADD_COLON_TWO\",\n      system_prompt:\n        \"A chat between a curious human and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the human's questions.\",\n      roles: [\"USER\", \"ASSISTANT\"],\n      intra_message_sep: \" \",\n      inter_message_sep: \"</s>\",\n    },\n    {\n      name: \"llama-2-chat\",\n      style_name: \"LLAMA2\",\n      system_prompt:\n        \"<s>[INST] <<SYS>>\\nYou are a helpful AI assistant.\\n<</SYS>>\\n\\n\",\n      roles: [\"[INST]\", \"[/INST]\"],\n      intra_message_sep: \" \",\n      inter_message_sep: \" </s><s>\",\n      stop_token_ids: [2],\n    },\n    {\n      name: \"falcon-instruct\",\n      style_name: \"FALCON\",\n      system_prompt: \"\",\n      roles: [\"User\", \"Assistant\"],\n      intra_message_sep: \"\\n\",\n      inter_message_sep: \"<|endoftext|>\",\n      stop: [\"\\nUser\"],\n      stop_token_ids: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n    },\n    {\n      name: \"baichuan-chat\",\n      style_name: \"NO_COLON_TWO\",\n      system_prompt: \"\",\n      roles: [\" <reserved_102> \", \" <reserved_103> \"],\n      intra_message_sep: \"\",\n      inter_message_sep: \"</s>\",\n      stop_token_ids: [2, 195],\n    },\n    {\n      name: \"baichuan-2-chat\",\n      style_name: \"NO_COLON_TWO\",\n      system_prompt: \"\",\n      roles: [\"<reserved_106>\", \"<reserved_107>\"],\n      intra_message_sep: \"\",\n      inter_message_sep: \"</s>\",\n      stop_token_ids: [2, 195],\n    },\n    {\n      name: \"internlm-chat\",\n      style_name: \"INTERNLM\",\n      system_prompt: \"\",\n      roles: [\"<|User|>\", \"<|Bot|>\"],\n      intra_message_sep: \"<eoh>\\n\",\n      inter_message_sep: \"<eoa>\\n\",\n      stop_token_ids: [1, 103028],\n      stop: [\"<eoa>\"],\n    },\n  ];\n\n  // model name must be\n  // 1. Starts with an alphanumeric character (a letter or a digit).\n  // 2. Followed by any number of alphanumeric characters, underscores (_), or hyphens (-).\n  const errorModelName = !/^[A-Za-z0-9][A-Za-z0-9_-]*$/.test(\n    formData.model_name,\n  );\n  const errorModelDescription =\n    !/^[A-Za-z0-9\\s!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]{0,500}$/.test(\n      formData.model_description,\n    );\n  const errorContextLength = formData.context_length === 0;\n  const errorLanguage =\n    formData.model_lang === undefined || formData.model_lang.length === 0;\n  const errorAbility =\n    formData.model_ability === undefined || formData.model_ability.length === 0;\n  const errorModelSize =\n    formData.model_specs &&\n    formData.model_specs.some((spec) => {\n      return (\n        spec.model_size_in_billions === undefined ||\n        spec.model_size_in_billions === 0\n      );\n    });\n  const errorAny =\n    errorModelName ||\n    errorModelDescription ||\n    errorContextLength ||\n    errorLanguage ||\n    errorAbility ||\n    errorModelSize;\n\n  const isModelFormatPytorch = () => {\n    return modelFormat === \"pytorch\";\n  };\n\n  const getPathComponents = (path) => {\n    const normalizedPath = path.replace(/\\\\/g, \"/\");\n    const baseDir = normalizedPath.substring(\n      0,\n      normalizedPath.lastIndexOf(\"/\"),\n    );\n    const filename = normalizedPath.substring(\n      normalizedPath.lastIndexOf(\"/\") + 1,\n    );\n    return { baseDir, filename };\n  };\n\n  const handleClick = async () => {\n    if (!isModelFormatPytorch()) {\n      const { baseDir, filename } = getPathComponents(modelUri);\n      formData.model_specs = [\n        {\n          model_format: modelFormat,\n          model_size_in_billions: modelSize,\n          quantizations: [\"\"],\n          model_id: \"\",\n          model_file_name_template: filename,\n          model_uri: baseDir,\n        },\n      ];\n    } else {\n      formData.model_specs = [\n        {\n          model_format: modelFormat,\n          model_size_in_billions: modelSize,\n          quantizations: [\"4-bit\", \"8-bit\", \"none\"],\n          model_id: \"\",\n          model_uri: modelUri,\n        },\n      ];\n    }\n\n    const ps = promptStyles.find((item) => item.name === promptStyleLabel);\n    formData.prompt_style = {\n      style_name: ps.style_name,\n      system_prompt: ps.system_prompt,\n      roles: ps.roles,\n      intra_message_sep: ps.intra_message_sep,\n      inter_message_sep: ps.inter_message_sep,\n    };\n\n    if (errorAny) {\n      setErrorMessage(\"Please fill in valid value for all fields\");\n      return;\n    }\n\n    try {\n      const response = await fetch(endPoint + \"/v1/model_registrations/LLM\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          model: JSON.stringify(formData),\n          persist: true,\n        }),\n      });\n      if (!response.ok) {\n        const errorData = await response.json(); // Assuming the server returns error details in JSON format\n        throw new Error(\n          `Server error: ${response.status} - ${\n            errorData.detail || \"Unknown error\"\n          }`,\n        );\n      }\n\n      setErrorMessage(\n        \"Model has been registered successfully! Navigate to launch model page to proceed.\",\n      );\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n      setErrorMessage(error.message || \"An unexpected error occurred.\");\n    }\n  };\n\n  const toggleLanguage = (lang) => {\n    if (formData.model_lang.includes(lang)) {\n      setFormData({\n        ...formData,\n        model_lang: formData.model_lang.filter((l) => l !== lang),\n      });\n    } else {\n      setFormData({\n        ...formData,\n        model_lang: [...formData.model_lang, lang],\n      });\n    }\n  };\n\n  const toggleAbility = (ability) => {\n    if (formData.model_ability.includes(ability)) {\n      setFormData({\n        ...formData,\n        model_ability: formData.model_ability.filter((a) => a !== ability),\n      });\n    } else {\n      setFormData({\n        ...formData,\n        model_ability: [...formData.model_ability, ability],\n      });\n    }\n  };\n\n  return (\n    <Box m=\"20px\">\n      <Title title=\"Register Model\" />\n      <Box padding=\"20px\"></Box>\n\n      {/* Base Information */}\n      <FormControl sx={styles.baseFormControl}>\n        <TextField\n          label=\"Model Name\"\n          error={errorModelName}\n          defaultValue={formData.model_name}\n          size=\"small\"\n          helperText=\"Alphanumeric characters with properly placed hyphens and underscores. Must not match any built-in model names.\"\n          onChange={(event) =>\n            setFormData({ ...formData, model_name: event.target.value })\n          }\n        />\n        <Box padding=\"15px\"></Box>\n\n        <label\n          style={{\n            paddingLeft: 5,\n          }}\n        >\n          Model Format\n        </label>\n\n        <RadioGroup\n          value={modelFormat}\n          onChange={(e) => {\n            setModelFormat(e.target.value);\n          }}\n        >\n          <Box sx={styles.checkboxWrapper}>\n            <Box sx={{ marginLeft: \"10px\" }}>\n              <FormControlLabel\n                value=\"pytorch\"\n                control={<Radio />}\n                label=\"PyTorch\"\n              />\n            </Box>\n            <Box sx={{ marginLeft: \"10px\" }}>\n              <FormControlLabel\n                value=\"ggmlv3\"\n                control={<Radio />}\n                label=\"GGML\"\n              />\n            </Box>\n            <Box sx={{ marginLeft: \"10px\" }}>\n              <FormControlLabel\n                value=\"ggufv2\"\n                control={<Radio />}\n                label=\"GGUF\"\n              />\n            </Box>\n          </Box>\n        </RadioGroup>\n        <Box padding=\"15px\"></Box>\n\n        <TextField\n          error={errorContextLength}\n          label=\"Context Length\"\n          value={formData.context_length}\n          size=\"small\"\n          onChange={(event) => {\n            let value = event.target.value;\n            // Remove leading zeros\n            if (/^0+/.test(value)) {\n              value = value.replace(/^0+/, \"\") || \"0\";\n            }\n            // Ensure it's a positive integer, if not set it to the minimum\n            if (!/^\\d+$/.test(value) || parseInt(value) < 0) {\n              value = \"0\";\n            }\n            // Update with the processed value\n            setFormData({\n              ...formData,\n              context_length: Number(value),\n            });\n          }}\n        />\n        <Box padding=\"15px\"></Box>\n\n        <TextField\n          label=\"Model Size in Billions\"\n          size=\"small\"\n          error={errorModelSize}\n          value={modelSize}\n          onChange={(e) => {\n            let value = e.target.value;\n            // Remove leading zeros\n            if (/^0+/.test(value)) {\n              value = value.replace(/^0+/, \"\") || \"0\";\n            }\n            // Ensure it's a positive integer, if not set it to the minimum\n            if (!/^\\d+$/.test(value) || parseInt(value) < 0) {\n              value = \"0\";\n            }\n            setModelSize(Number(value));\n          }}\n        />\n        <Box padding=\"15px\"></Box>\n\n        <TextField\n          label=\"Model Path\"\n          size=\"small\"\n          value={modelUri}\n          onChange={(e) => {\n            setModelUri(e.target.value);\n          }}\n          helperText=\"For PyTorch, provide the model directory. For GGML/GGUF, provide the model file path.\"\n        />\n        <Box padding=\"15px\"></Box>\n\n        <TextField\n          label=\"Model Description (Optional)\"\n          error={errorModelDescription}\n          defaultValue={formData.model_description}\n          size=\"small\"\n          onChange={(event) =>\n            setFormData({ ...formData, model_description: event.target.value })\n          }\n        />\n        <Box padding=\"15px\"></Box>\n\n        <label\n          style={{\n            paddingLeft: 5,\n            color: errorLanguage ? ERROR_COLOR : \"inherit\",\n          }}\n        >\n          Model Languages\n        </label>\n        <Box sx={styles.checkboxWrapper}>\n          {SUPPORTED_LANGUAGES.map((lang) => (\n            <Box key={lang} sx={{ marginRight: \"10px\" }}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={formData.model_lang.includes(lang)}\n                    onChange={() => toggleLanguage(lang)}\n                    name={lang}\n                    sx={\n                      errorLanguage\n                        ? {\n                            color: ERROR_COLOR,\n                            \"&.Mui-checked\": {\n                              color: ERROR_COLOR,\n                            },\n                          }\n                        : {}\n                    }\n                  />\n                }\n                label={SUPPORTED_LANGUAGES_DICT[lang]}\n                style={{\n                  paddingLeft: 10,\n                  color: errorLanguage ? ERROR_COLOR : \"inherit\",\n                }}\n              />\n            </Box>\n          ))}\n        </Box>\n        <Box padding=\"15px\"></Box>\n\n        <label\n          style={{\n            paddingLeft: 5,\n            color: errorAbility ? ERROR_COLOR : \"inherit\",\n          }}\n        >\n          Model Abilities\n        </label>\n        <Box sx={styles.checkboxWrapper}>\n          {SUPPORTED_FEATURES.map((ability) => (\n            <Box key={ability} sx={{ marginRight: \"10px\" }}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={formData.model_ability.includes(\n                      ability.toLowerCase(),\n                    )}\n                    onChange={() => toggleAbility(ability.toLowerCase())}\n                    name={ability}\n                    sx={\n                      errorAbility\n                        ? {\n                            color: ERROR_COLOR,\n                            \"&.Mui-checked\": {\n                              color: ERROR_COLOR,\n                            },\n                          }\n                        : {}\n                    }\n                  />\n                }\n                label={ability}\n                style={{\n                  paddingLeft: 10,\n                  color: errorAbility ? ERROR_COLOR : \"inherit\",\n                }}\n              />\n            </Box>\n          ))}\n        </Box>\n        <Box padding=\"15px\"></Box>\n      </FormControl>\n\n      {formData.model_ability.includes(\"chat\") && (\n        <FormControl sx={styles.baseFormControl}>\n          <label\n            style={{\n              paddingLeft: 5,\n              color: errorAbility ? ERROR_COLOR : \"inherit\",\n            }}\n          >\n            Prompt styles\n          </label>\n          <FormHelperText>\n            Select a prompt style that aligns with the training data of your\n            model.\n          </FormHelperText>\n          <RadioGroup\n            value={promptStyleLabel}\n            onChange={(e) => {\n              setPromptStyleLabel(e.target.value);\n            }}\n          >\n            <Box sx={styles.checkboxWrapper}>\n              {promptStyles.map((p) => (\n                <Box sx={{ marginLeft: \"10px\" }}>\n                  <FormControlLabel\n                    value={p.name}\n                    control={<Radio />}\n                    label={p.name}\n                  />\n                </Box>\n              ))}\n            </Box>\n          </RadioGroup>\n        </FormControl>\n      )}\n\n      <Box width={\"100%\"}>\n        <div style={{ ...styles.error, color: ERROR_COLOR }}>\n          {errorMessage}\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={handleClick}\n        >\n          Register Model\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default RegisterModel;\n\nconst styles = {\n  baseFormControl: {\n    width: \"100%\",\n    margin: \"normal\",\n    size: \"small\",\n  },\n  checkboxWrapper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    maxWidth: \"80%\",\n  },\n  labelPaddingLeft: {\n    paddingLeft: 5,\n  },\n  formControlLabelPaddingLeft: {\n    paddingLeft: 10,\n  },\n  buttonBox: {\n    width: \"100%\",\n    margin: \"20px\",\n  },\n  error: {\n    fontWeight: \"bold\",\n    margin: \"5px 0\",\n    padding: \"1px\",\n    borderRadius: \"5px\",\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}