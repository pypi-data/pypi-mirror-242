# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ......core.datetime_utils import serialize_datetime
from .....claim_actions_commons.types.claim_action import ClaimAction
from .....claim_actions_commons.types.claim_action_metadata import ClaimActionMetadata
from .....commons.types.claim_id import ClaimId
from .....commons.types.work_queue_id import WorkQueueId


class ClaimJobMetadata(pydantic.BaseModel):
    """
    Metadata for a claim in a job
    """

    action: ClaimAction
    work_queue_id: WorkQueueId
    claim_id: ClaimId
    claim_metadata: ClaimActionMetadata

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
