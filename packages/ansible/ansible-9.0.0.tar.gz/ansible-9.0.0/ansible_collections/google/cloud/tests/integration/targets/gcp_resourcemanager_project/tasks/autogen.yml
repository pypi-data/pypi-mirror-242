---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://www.github.com/GoogleCloudPlatform/magic-modules
#
# ----------------------------------------------------------------------------
# Pre-test setup
- name: delete a project
  google.cloud.gcp_resourcemanager_project:
    name: "{{ resource_prefix[0:30] }}"
    id: "{{ resource_prefix[0:30] }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    parent:
      type: folder
      id: "{{ gcp_folder_id }}"
    state: absent
#----------------------------------------------------------
- name: create a project
  google.cloud.gcp_resourcemanager_project:
    name: "{{ resource_prefix[0:30] }}"
    id: "{{ resource_prefix[0:30] }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    parent:
      type: folder
      id: "{{ gcp_folder_id }}"
    state: present
  register: result
- name: assert changed is true
  assert:
    that:
      - result.changed == true
- name: Pause for 2 minutes for project to appear
  ansible.builtin.pause:
    minutes: 2
- name: verify that project was created
  google.cloud.gcp_resourcemanager_project_info:
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      # choose 1000 projects so iterate past the deleted ones.
      page_size: 1000
      scopes:
        - https://www.googleapis.com/auth/cloud-platform
  register: results
- name: verify that command succeeded
  assert:
    that:
      - results['resources'] | selectattr("lifecycleState", "equalto", "ACTIVE") | map(attribute='name') | select("match", ".*{{ resource_prefix[0:30] }}.*") | list | length == 1
# ----------------------------------------------------------------------------
- name: create a project that already exists
  google.cloud.gcp_resourcemanager_project:
    name: "{{ resource_prefix[0:30] }}"
    id: "{{ resource_prefix[0:30] }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    parent:
      type: folder
      id: "{{ gcp_folder_id }}"
    state: present
  register: result
- name: assert changed is false
  assert:
    that:
      - result.changed == false
#----------------------------------------------------------
- name: delete a project
  google.cloud.gcp_resourcemanager_project:
    name: "{{ resource_prefix[0:30] }}"
    id: "{{ resource_prefix[0:30] }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    parent:
      type: folder
      id: "{{ gcp_folder_id }}"
    state: absent
  register: result
- name: assert changed is true
  assert:
    that:
      - result.changed == true
- name: Pause for 2 minutes for project to appear
  ansible.builtin.pause:
    minutes: 2
- name: verify that project was deleted
  google.cloud.gcp_resourcemanager_project_info:
      project: "{{ resource_prefix[0:30] }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      # choose 1000 projects so iterate past the deleted ones.
      page_size: 1000
      scopes:
        - https://www.googleapis.com/auth/cloud-platform
  register: results
- name: verify that command succeeded
  assert:
    that:
      - results['resources'] | selectattr("lifecycleState", "equalto", "DELETE_REQUESTED") | map(attribute='name') | select("match", ".*{{ resource_prefix[0:30] }}.*") | list | length == 1
# ----------------------------------------------------------------------------
- name: delete a project that does not exist
  google.cloud.gcp_resourcemanager_project:
    name: "{{ resource_prefix[0:30] }}"
    id: "{{ resource_prefix[0:30] }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    parent:
      type: folder
      id: "{{ gcp_folder_id }}"
    state: absent
  register: result
- name: assert changed is false
  assert:
    that:
      - result.changed == false
