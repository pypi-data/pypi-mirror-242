[tool.poetry]
name = "boss-bus"
version = "0.4.0"
description = "A Type-driven Message Bus for Python 3.8+"
authors = ["Jim Dickinson <james.n.dickinson@gmail.com>"]
license = "GPL-3.0"
readme = "README.md"
homepage = "https://github.com/jimbroze/boss-bus"
repository = "https://github.com/jimbroze/boss-bus"
documentation = "https://boss-bus.readthedocs.io"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
]

[tool.poetry.urls]
Changelog = "https://github.com/jimbroze/boss-bus/releases"

[tool.poetry.dependencies]
python = "^3.8.1"
click = ">=8.0.1"
typeguard = ">=2.13.3"

# Optional
lagom = { version = "^2.4", optional = true }

[tool.poetry.extras]
lagom = ["lagom"]

[tool.poetry.group.dev.dependencies]
Pygments = ">=2.10.0"
black = ">=23.10.1"
darglint = ">=1.8.1"
ruff = ">=0.1"
mypy = ">=0.930"
pep8-naming = ">=0.12.1"
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.1.0"
safety = ">=1.10.3"

[tool.poetry.group.docs.dependencies]
furo = ">=2021.11.12"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=3.0.2"
myst-parser = {version = ">=0.16.1"}

[tool.poetry.group.test.dependencies]
coverage = {extras = ["toml"], version = ">=7.3.2"}
pytest = ">=6.2.5"
pytest-testdox = "^3.1.0"
xdoctest = {extras = ["colors"], version = ">=0.15.10"}

[tool.poetry.scripts]
boss-bus = "boss_bus.__main__:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["boss_bus", "tests"]
omit = [
    "src/boss_bus/_utils/*",
    "tests/examples.py",
]

[tool.coverage.report]
show_missing = true
fail_under = 100
ignore_errors = true
exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "pass",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.pytest.ini_options]
addopts = [
    "--testdox"
]
markers = [
    "integration: integration tests",
]
pythonpath = ["src"]

[tool.ruff]
src = ['src', 'tests']
line-length = 80
target-version = 'py38'

[tool.ruff.lint]
select = [
    "A",
    "ARG",
    "B",
    "BLE",
    "B9",
    "C",
    "C4",
    "D",
    "DTZ",
    "E",
    "F",
    "I",
    "N",
    "PIE",
    "PT",
    "PTH",
    "Q",
    "RET",
    "RUF",
    "S",
    "SIM",
    "SLF",
    "T10",
    "TCH",
    "UP",
    "W",
]
ignore = ["E501", "UP006", "UP007"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S", "D100", "D101", "D102", "D103", "D104", "D107", "D205", "D212"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"
