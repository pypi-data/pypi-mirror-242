[tool.poetry]
name = "wireup"
version = "0.6.0"
description = "Python Dependency Injection Library"
authors = ["Aldo Mateli <aldo.mateli@gmail.com>"]
license = "MIT"
readme = "readme.md"
homepage = "https://github.com/maldoinc/wireup"
packages = [
    { include = "wireup" }
]
keywords = [
    "flask",
    "django",
    "injector",
    "dependency injection",
    "dependency injection container",
    "dependency injector"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Framework :: Django",
    "Framework :: Flask",
    "Framework :: FastAPI",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Typing :: Typed",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Repository = "https://github.com/maldoinc/wireup"
Documentation = "https://maldoinc.github.io/wireup/"
Changelog = "https://github.com/maldoinc/wireup/releases"

[tool.poetry.dependencies]
python = "^3.8"
graphlib2 = "^0.4.7"

[tool.poetry.group.dev.dependencies]
ruff = "0.1.*"
setuptools = "^68.0.0"
mkdocs = "^1.5.2"
mkdocs-material = "^9.2.8"
mkdocstrings-python = "^1.6.2"
mkdocs-open-in-new-tab = "^1.0.2"
mike = "^1.1.2"
typing-extensions = "^4.7.1"
mypy = "^1.5.1"
flask = "^3.0.0"

[tool.ruff]
target-version = "py38"
line-length = 120
src = ["wireup"]
fixable = ["ALL"]
select = ["ALL"]
ignore = [
    "ANN401", # Allow returning any. Parameter bag has to store/retrieve arbitraty types.
    "PT009", # Prefer using assertEqual instead of plain asserts
    "ANN101", # Exclude self from type hint requirement,
    "TD003", # Exclude "missing issue link for todos",
    "FIX002", # Disable "Line contains to do, consider resolving the issue". It will be done, in due time.
    "D100", # Disable undocumented public module. The definitions themselves will be documented
    "D104", # Same as above, disable missing docstring in public package,
    "D203", # Ignore "one blank line before class". Using "no blank lines before class rule".
    "D213", # Disable "Summary must go into next line"
    "D107", # Disable required docs for __init. Can be redundant if class also has them.

    # Disable as they may cause conflicts with ruff formatter
    "COM812",
    "ISC001"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
