import{isEmpty,bindMouseUntilRelease}from"../../base/helpers.mjs";import{ElementBuilder}from"../../base/builder.mjs";import{View}from"../../view/base.mjs";import{Controller}from"../base.mjs";import{PromptTravelFormView}from"../../forms/enfugue/prompts.mjs";const E=new ElementBuilder;class PromptView extends View{static className="prompt-view";static editIcon="fa-solid fa-edit";static deleteIcon="fa-solid fa-trash";static minimumTickInterval=100;static edgeHandlerTolerance=15;static slideHandlerTolerance=40;static minimumFrames=2;constructor(t,e,i=null,s=null,n=null,o=null,a=null){super(t),this.total=e,this.positive=i,this.negative=s,isEmpty(n)?this.start=0:this.start=n,isEmpty(o)?this.end=e:this.end=o,isEmpty(a)?this.weight=1:this.weight=a,this.showEditCallbacks=[],this.onRemoveCallbacks=[],this.onChangeCallbacks=[]}setPosition(t){let e,i;e=isEmpty(this.start)?0:this.start/this.total,i=isEmpty(this.end)?1:this.end/this.total,t.css({"margin-left":100*e+"%","margin-right":100*(1-i)+"%"})}resetPosition(){isEmpty(this.node)||this.setPosition(this.node)}onShowEdit(t){this.showEditCallbacks.push(t)}showEdit(){for(let t of this.showEditCallbacks)t()}onRemove(t){this.onRemoveCallbacks.push(t)}remove(){for(let t of this.onRemoveCallbacks)t()}onChange(t){this.onChangeCallbacks.push(t)}changed(){let t=this.getState();for(let e of this.onChangeCallbacks)e(t)}getState(){return{positive:this.positive,negative:this.negative,weight:this.weight,start:this.start,end:this.end}}setFormData(t){if(this.positive=t.positive,this.negative=t.negative,this.weight=isEmpty(t.weight)?1:t.weight,!isEmpty(this.node)){let t=this.node.find(".positive"),e=this.node.find(".negative");this.node.find(".weight").content(`${this.weight.toFixed(2)}`),isEmpty(this.positive)?t.content("(none)"):(t.content(this.positive),isEmpty(this.negative)?e.hide():e.show().content(this.negative))}}setState(t){isEmpty(t)&&(t={}),this.start=t.start,this.end=t.end,this.resetPosition(),this.setFormData(t)}async build(){let t=await super.build(),e=isEmpty(this.weight)?1:this.weight,i=E.i().class(this.constructor.editIcon).on("click",(()=>{this.showEdit()})),s=E.i().class(this.constructor.deleteIcon).on("click",(()=>{this.remove()})),n=E.p().class("positive"),o=E.p().class("negative"),a=E.div().class("prompts").content(n,o);isEmpty(this.positive)?(n.content("(none)"),o.hide()):(n.content(this.positive),isEmpty(this.negative)?o.hide():o.content(this.negative));let r,h,l=!1,p=!1,m=!1,c=!1,d=!1,g=!1,w=(new Date).getTime(),u=e=>{if(l)this.start=Math.min(e,this.end-this.constructor.minimumFrames),this.setPosition(t),this.changed();else if(p)this.end=Math.max(e,this.start+this.constructor.minimumFrames),this.setPosition(t),this.changed();else if(m){let i=r-e,[s,n]=h;this.start=Math.max(s-i,0),this.end=Math.min(n-i,this.total),this.setPosition(t),this.changed()}},v=e=>{let i=(new Date).getTime();if(i-w<this.constructor.minimumTickInterval)return;w=i;let s=t.element.getBoundingClientRect(),n=s.width,o=Math.min(Math.max(e.clientX-s.x,0),n),a=Math.max(n-o,0),h=t.element.parentElement.getBoundingClientRect(),v=h.width-15,f=Math.min(Math.max(e.clientX-h.x,0),v),E=(Math.max(v-f,0),f/v),y=Math.ceil(E*this.total);c=!1,d=!1,g=!1,o<this.constructor.edgeHandlerTolerance?(t.css("cursor","ew-resize"),c=!0):a<this.constructor.edgeHandlerTolerance?(t.css("cursor","ew-resize"),d=!0):o>=this.constructor.slideHandlerTolerance&&a>=this.constructor.slideHandlerTolerance?(t.css("cursor","grab"),g=!0,m||(r=y)):l||p||m||t.css("cursor","default"),u(y),e.preventDefault(),e.stopPropagation()};return t.content(a,E.div().class("weight").content(`${e.toFixed(2)}`),i,s).on("mouseenter",(t=>{v(t)})).on("mousemove",(t=>{v(t)})).on("mousedown",(t=>{c?l=!0:d?p=!0:g&&(m=!0,h=[this.start,this.end]),v(t),bindMouseUntilRelease((t=>{v(t)}),(t=>{l=!1,p=!1,m=!1}))})).on("dblclick",(t=>{t.preventDefault(),t.stopPropagation(),this.showEdit()})),this.setPosition(t),t}}class PromptTravelView extends View{static tagName="enfugue-prompt-travel-view";static promptFormWindowWidth=350;static promptFormWindowHeight=450;static minimumFrames=2;constructor(t,e,i=16){super(t),this.length=i,this.spawnWindow=e,this.promptViews=[],this.onChangeCallbacks=[]}setLength(t){if(this.length=t,void 0!==this.node){let t=this.node.find(".notches"),e=new Array(this.length).fill(null).map(((t,e)=>E.span().class("notch").content(`${e+1}`)));t.content(...e)}for(let t of this.promptViews)t.total=this.length,t.end=Math.min(t.total,t.end),t.start=Math.max(0,Math.min(t.start,t.end-this.constructor.minimumFrames)),t.resetPosition()}onChange(t){this.onChangeCallbacks.push(t)}changed(){let t=this.getState();for(let e of this.onChangeCallbacks)e(t)}removePrompt(t){let e=this.promptViews.indexOf(t);-1!==e?(this.promptViews.splice(e,1),isEmpty(this.node)||isEmpty(t.node)||this.node.find(".prompts-container").remove(t.node)):console.error("Couldn't find prompt view in memory",t)}async addPrompt(t){isEmpty(t)&&(t={});let e,i=new PromptView(this.config,this.length,t.positive,t.negative,t.start,t.end,t.weight),s=new PromptTravelFormView(this.config,t);s.onSubmit((t=>{i.setFormData(t),this.changed()})),i.onChange((()=>this.changed())),i.onRemove((()=>{this.removePrompt(i)})),i.onShowEdit((async()=>{isEmpty(e)?(e=await this.spawnWindow("Edit Prompt",s,this.constructor.promptFormWindowWidth,this.constructor.promptFormWindowHeight),e.onClose((()=>{e=null}))):e.focus()})),this.promptViews.push(i),void 0!==this.node&&this.node.find(".prompts-container").append(await i.getNode())}emptyPrompts(){this.promptViews=[],isEmpty(this.node)||this.node.find(".prompts-container").empty()}getState(){return this.promptViews.map((t=>t.getState()))}async setState(t=[]){this.emptyPrompts();for(let e of t)await this.addPrompt(e);this.node.render()}async build(){let t=await super.build(),e=E.button().content("Add Prompt").on("click",(()=>{this.addPrompt()})),i=new Array(this.length).fill(null).map(((t,e)=>E.span().class("notch").content(`${e+1}`))),s=E.div().class("notches").content(...i),n=E.div().class("prompts-container"),o=E.div().class("prompts-track").content(s,n);for(let t of this.promptViews)n.append(await t.getNode());return t.content(o,e),t}}class PromptTravelController extends Controller{getDefaultState(){return{travel:[]}}getState(){return{travel:this.promptView.getState()}}async setState(t){isEmpty(t.travel)||await this.promptView.setState(t.travel)}async disablePromptTravel(){this.promptView.hide(),this.application.container.classList.remove("prompt-travel"),this.engine.prompts=null}async enablePromptTravel(){if(0===this.promptView.getState().length){let t=[this.engine.prompt,this.engine.prompt2],e=[this.engine.negativePrompt,this.engine.negativePrompt2];t=t.filter((t=>!isEmpty(t))),isEmpty(t)?t=null:1===t.length&&(t=t[0]),e=e.filter((t=>!isEmpty(t))),isEmpty(e)?e=null:1===e.length&&(e=e[0]),this.promptView.addPrompt({positive:t,negative:e})}this.promptView.show(),this.application.container.classList.add("prompt-travel"),this.engine.prompts=this.promptView.getState()}async initialize(){this.promptView=new PromptTravelView(this.config,((t,e,i,s,n,o)=>this.spawnWindow(t,e,i,s,n,o))),this.promptView.hide(),this.promptView.onChange((t=>{this.engine.prompts=t})),this.application.container.appendChild(await this.promptView.render()),this.subscribe("promptTravelEnabled",(()=>this.enablePromptTravel())),this.subscribe("promptTravelDisabled",(()=>this.disablePromptTravel())),this.subscribe("engineAnimationFramesChange",(t=>{!isEmpty(t)&&t>0&&this.promptView.setLength(t)}))}}export{PromptTravelController};
