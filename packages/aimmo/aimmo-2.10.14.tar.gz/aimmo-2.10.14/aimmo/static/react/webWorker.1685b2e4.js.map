{"version":3,"sources":["../node_modules/is-observable/index.js","../node_modules/threads/dist/serializers.js","../node_modules/threads/dist/common.js","../node_modules/threads/dist/symbols.js","../node_modules/threads/dist/transferable.js","../node_modules/threads/dist/types/messages.js","../node_modules/threads/dist/worker/implementation.browser.js","../node_modules/process/browser.js","../node_modules/threads/dist/worker/index.js","../node_modules/threads/worker.js","../src/pyodide/badges.ts","../src/pyodide/webWorker.ts"],"names":["module","exports","value","Symbol","observable","process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","checkIfBadgeEarned","badges","result","userCode","gameState","userPythonCode","replace","badgesPerWorksheet","id","worksheetID","trigger","badge1Trigger","badge2Trigger","badge3Trigger","badge","badgeWorksheetPair","includes","action","action_type","JSON","stringify","options","direction","x","y","substrings","codeContainsKeywords","every","substring","_worker","require","_badges","pyodide","getAvatarStateFromGameState","playerAvatarID","players","find","player","initializePyodide","importScripts","loadPyodide","loadPackage","runPythonAsync","self","location","origin","computeNextAction","gamePaused","avatarState","Promise","resolve","log","turnCount","error","simplifyErrorMessageInLog","toString","regexToFindNextTurnErrors","matches","match","simpleError","split","slice","join","updateAvatarCode","undefined","setAvatarCodeToWaitActionOnError","pyodideWorker","filterByWorksheet","expose"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,KAAK,IAAI;EACzB,IAAI,CAACA,KAAK,EAAE;IACX,OAAO,KAAK;EACb;;EAEA;EACA,IAAI,OAAOC,MAAM,CAACC,UAAU,KAAK,QAAQ,IAAI,OAAOF,KAAK,CAACC,MAAM,CAACC,UAAU,CAAC,KAAK,UAAU,EAAE;IAC5F;IACA,OAAOF,KAAK,KAAKA,KAAK,CAACC,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC;EAC5C;EAEA,IAAI,OAAOF,KAAK,CAAC,cAAc,CAAC,KAAK,UAAU,EAAE;IAChD,OAAOA,KAAK,KAAKA,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;EACzC;EAEA,OAAO,KAAK;AACb,CAAC;;AClBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;A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","file":"webWorker.1685b2e4.js","sourceRoot":"../../../game_frontend/public","sourcesContent":["'use strict';\n\nmodule.exports = value => {\n\tif (!value) {\n\t\treturn false;\n\t}\n\n\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\tif (typeof Symbol.observable === 'symbol' && typeof value[Symbol.observable] === 'function') {\n\t\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\t\treturn value === value[Symbol.observable]();\n\t}\n\n\tif (typeof value['@@observable'] === 'function') {\n\t\treturn value === value['@@observable']();\n\t}\n\n\treturn false;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultSerializer = exports.extendSerializer = void 0;\nfunction extendSerializer(extend, implementation) {\n    const fallbackDeserializer = extend.deserialize.bind(extend);\n    const fallbackSerializer = extend.serialize.bind(extend);\n    return {\n        deserialize(message) {\n            return implementation.deserialize(message, fallbackDeserializer);\n        },\n        serialize(input) {\n            return implementation.serialize(input, fallbackSerializer);\n        }\n    };\n}\nexports.extendSerializer = extendSerializer;\nconst DefaultErrorSerializer = {\n    deserialize(message) {\n        return Object.assign(Error(message.message), {\n            name: message.name,\n            stack: message.stack\n        });\n    },\n    serialize(error) {\n        return {\n            __error_marker: \"$$error\",\n            message: error.message,\n            name: error.name,\n            stack: error.stack\n        };\n    }\n};\nconst isSerializedError = (thing) => thing && typeof thing === \"object\" && \"__error_marker\" in thing && thing.__error_marker === \"$$error\";\nexports.DefaultSerializer = {\n    deserialize(message) {\n        if (isSerializedError(message)) {\n            return DefaultErrorSerializer.deserialize(message);\n        }\n        else {\n            return message;\n        }\n    },\n    serialize(input) {\n        if (input instanceof Error) {\n            return DefaultErrorSerializer.serialize(input);\n        }\n        else {\n            return input;\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = exports.deserialize = exports.registerSerializer = void 0;\nconst serializers_1 = require(\"./serializers\");\nlet registeredSerializer = serializers_1.DefaultSerializer;\nfunction registerSerializer(serializer) {\n    registeredSerializer = serializers_1.extendSerializer(registeredSerializer, serializer);\n}\nexports.registerSerializer = registerSerializer;\nfunction deserialize(message) {\n    return registeredSerializer.deserialize(message);\n}\nexports.deserialize = deserialize;\nfunction serialize(input) {\n    return registeredSerializer.serialize(input);\n}\nexports.serialize = serialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.$worker = exports.$transferable = exports.$terminate = exports.$events = exports.$errors = void 0;\nexports.$errors = Symbol(\"thread.errors\");\nexports.$events = Symbol(\"thread.events\");\nexports.$terminate = Symbol(\"thread.terminate\");\nexports.$transferable = Symbol(\"thread.transferable\");\nexports.$worker = Symbol(\"thread.worker\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transfer = exports.isTransferDescriptor = void 0;\nconst symbols_1 = require(\"./symbols\");\nfunction isTransferable(thing) {\n    if (!thing || typeof thing !== \"object\")\n        return false;\n    // Don't check too thoroughly, since the list of transferable things in JS might grow over time\n    return true;\n}\nfunction isTransferDescriptor(thing) {\n    return thing && typeof thing === \"object\" && thing[symbols_1.$transferable];\n}\nexports.isTransferDescriptor = isTransferDescriptor;\nfunction Transfer(payload, transferables) {\n    if (!transferables) {\n        if (!isTransferable(payload))\n            throw Error();\n        transferables = [payload];\n    }\n    return {\n        [symbols_1.$transferable]: true,\n        send: payload,\n        transferables\n    };\n}\nexports.Transfer = Transfer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkerMessageType = exports.MasterMessageType = void 0;\n/////////////////////////////\n// Messages sent by master:\nvar MasterMessageType;\n(function (MasterMessageType) {\n    MasterMessageType[\"cancel\"] = \"cancel\";\n    MasterMessageType[\"run\"] = \"run\";\n})(MasterMessageType = exports.MasterMessageType || (exports.MasterMessageType = {}));\n////////////////////////////\n// Messages sent by worker:\nvar WorkerMessageType;\n(function (WorkerMessageType) {\n    WorkerMessageType[\"error\"] = \"error\";\n    WorkerMessageType[\"init\"] = \"init\";\n    WorkerMessageType[\"result\"] = \"result\";\n    WorkerMessageType[\"running\"] = \"running\";\n    WorkerMessageType[\"uncaughtError\"] = \"uncaughtError\";\n})(WorkerMessageType = exports.WorkerMessageType || (exports.WorkerMessageType = {}));\n","\"use strict\";\n/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isWorkerRuntime = function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\nexports.default = {\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expose = exports.isWorkerRuntime = exports.Transfer = exports.registerSerializer = void 0;\nconst is_observable_1 = __importDefault(require(\"is-observable\"));\nconst common_1 = require(\"../common\");\nconst transferable_1 = require(\"../transferable\");\nconst messages_1 = require(\"../types/messages\");\nconst implementation_1 = __importDefault(require(\"./implementation\"));\nvar common_2 = require(\"../common\");\nObject.defineProperty(exports, \"registerSerializer\", { enumerable: true, get: function () { return common_2.registerSerializer; } });\nvar transferable_2 = require(\"../transferable\");\nObject.defineProperty(exports, \"Transfer\", { enumerable: true, get: function () { return transferable_2.Transfer; } });\n/** Returns `true` if this code is currently running in a worker. */\nexports.isWorkerRuntime = implementation_1.default.isWorkerRuntime;\nlet exposeCalled = false;\nconst activeSubscriptions = new Map();\nconst isMasterJobCancelMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.cancel;\nconst isMasterJobRunMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.run;\n/**\n * There are issues with `is-observable` not recognizing zen-observable's instances.\n * We are using `observable-fns`, but it's based on zen-observable, too.\n */\nconst isObservable = (thing) => is_observable_1.default(thing) || isZenObservable(thing);\nfunction isZenObservable(thing) {\n    return thing && typeof thing === \"object\" && typeof thing.subscribe === \"function\";\n}\nfunction deconstructTransfer(thing) {\n    return transferable_1.isTransferDescriptor(thing)\n        ? { payload: thing.send, transferables: thing.transferables }\n        : { payload: thing, transferables: undefined };\n}\nfunction postFunctionInitMessage() {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"function\"\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postModuleInitMessage(methodNames) {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"module\",\n            methods: methodNames\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postJobErrorMessage(uid, rawError) {\n    const { payload: error, transferables } = deconstructTransfer(rawError);\n    const errorMessage = {\n        type: messages_1.WorkerMessageType.error,\n        uid,\n        error: common_1.serialize(error)\n    };\n    implementation_1.default.postMessageToMaster(errorMessage, transferables);\n}\nfunction postJobResultMessage(uid, completed, resultValue) {\n    const { payload, transferables } = deconstructTransfer(resultValue);\n    const resultMessage = {\n        type: messages_1.WorkerMessageType.result,\n        uid,\n        complete: completed ? true : undefined,\n        payload\n    };\n    implementation_1.default.postMessageToMaster(resultMessage, transferables);\n}\nfunction postJobStartMessage(uid, resultType) {\n    const startMessage = {\n        type: messages_1.WorkerMessageType.running,\n        uid,\n        resultType\n    };\n    implementation_1.default.postMessageToMaster(startMessage);\n}\nfunction postUncaughtErrorMessage(error) {\n    try {\n        const errorMessage = {\n            type: messages_1.WorkerMessageType.uncaughtError,\n            error: common_1.serialize(error)\n        };\n        implementation_1.default.postMessageToMaster(errorMessage);\n    }\n    catch (subError) {\n        // tslint:disable-next-line no-console\n        console.error(\"Not reporting uncaught error back to master thread as it \" +\n            \"occured while reporting an uncaught error already.\" +\n            \"\\nLatest error:\", subError, \"\\nOriginal error:\", error);\n    }\n}\nfunction runFunction(jobUID, fn, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let syncResult;\n        try {\n            syncResult = fn(...args);\n        }\n        catch (error) {\n            return postJobErrorMessage(jobUID, error);\n        }\n        const resultType = isObservable(syncResult) ? \"observable\" : \"promise\";\n        postJobStartMessage(jobUID, resultType);\n        if (isObservable(syncResult)) {\n            const subscription = syncResult.subscribe(value => postJobResultMessage(jobUID, false, common_1.serialize(value)), error => {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n                activeSubscriptions.delete(jobUID);\n            }, () => {\n                postJobResultMessage(jobUID, true);\n                activeSubscriptions.delete(jobUID);\n            });\n            activeSubscriptions.set(jobUID, subscription);\n        }\n        else {\n            try {\n                const result = yield syncResult;\n                postJobResultMessage(jobUID, true, common_1.serialize(result));\n            }\n            catch (error) {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n            }\n        }\n    });\n}\n/**\n * Expose a function or a module (an object whose values are functions)\n * to the main thread. Must be called exactly once in every worker thread\n * to signal its API to the main thread.\n *\n * @param exposed Function or object whose values are functions\n */\nfunction expose(exposed) {\n    if (!implementation_1.default.isWorkerRuntime()) {\n        throw Error(\"expose() called in the master thread.\");\n    }\n    if (exposeCalled) {\n        throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");\n    }\n    exposeCalled = true;\n    if (typeof exposed === \"function\") {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && !messageData.method) {\n                runFunction(messageData.uid, exposed, messageData.args.map(common_1.deserialize));\n            }\n        });\n        postFunctionInitMessage();\n    }\n    else if (typeof exposed === \"object\" && exposed) {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && messageData.method) {\n                runFunction(messageData.uid, exposed[messageData.method], messageData.args.map(common_1.deserialize));\n            }\n        });\n        const methodNames = Object.keys(exposed).filter(key => typeof exposed[key] === \"function\");\n        postModuleInitMessage(methodNames);\n    }\n    else {\n        throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${exposed}`);\n    }\n    implementation_1.default.subscribeToMasterMessages(messageData => {\n        if (isMasterJobCancelMessage(messageData)) {\n            const jobUID = messageData.uid;\n            const subscription = activeSubscriptions.get(jobUID);\n            if (subscription) {\n                subscription.unsubscribe();\n                activeSubscriptions.delete(jobUID);\n            }\n        }\n    });\n}\nexports.expose = expose;\nif (typeof self !== \"undefined\" && typeof self.addEventListener === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    self.addEventListener(\"error\", event => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(event.error || event), 250);\n    });\n    self.addEventListener(\"unhandledrejection\", event => {\n        const error = event.reason;\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\nif (typeof process !== \"undefined\" && typeof process.on === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    process.on(\"uncaughtException\", (error) => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(error), 250);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\n","module.exports = require(\"./dist/worker/index\")\n","// /* eslint-env worker */\n// import ComputedTurnResult from './computedTurnResult'\n// import fetch from 'node-fetch'\n\n// interface TestReport {\n//   task_id: number // eslint-disable-line\n// }\n\n// export async function checkIfBadgeEarned(\n//   badges: string,\n//   result: ComputedTurnResult,\n//   userCode: string,\n//   gameState: any,\n//   currentAvatarID: number\n// ): Promise<string> {\n//   // TODO: fix loading of environment variables. \n//   let serviceUrl = process.env.REACT_APP_KURONO_BADGES_URL;\n//   if (serviceUrl === undefined) {\n//     serviceUrl = \"https://production-kurono-badges-dot-decent-digit-629.appspot.com\"\n//   }\n\n//   const response = await fetch(serviceUrl, {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({\n//       source: { code: userCode },\n//       current_avatar_id: currentAvatarID,\n//       game_state: gameState\n//     })\n//   });\n\n//   const responseJson: {\n//     passed: TestReport[]\n//     failed: TestReport[]\n//     xfailed: TestReport[]\n//     skipped: TestReport[]\n//   } = await response.json();\n\n//   for (let i = 0; i < responseJson.passed.length; i++) {\n//     const badgeWorksheetPair = `${gameState.worksheetID}:${responseJson.passed[i].task_id}`;\n//     if (!badges.includes(badgeWorksheetPair)) {\n//       badges += `${badgeWorksheetPair},`\n//     }\n//   }\n\n//   return badges;\n// }\n\n/* eslint-env worker */\nimport ComputedTurnResult from './computedTurnResult'\n\nexport function checkIfBadgeEarned(\n  badges: string,\n  result: ComputedTurnResult,\n  userCode: string,\n  gameState: any\n): string {\n  const userPythonCode = userCode.replace(/\\s*#.*/gm, '') // Remove all comment lines from the user's code\n  const badgesPerWorksheet = [\n    { id: 1, worksheetID: 1, trigger: badge1Trigger(result) },\n    { id: 2, worksheetID: 1, trigger: badge2Trigger(result, userPythonCode) },\n    {\n      id: 3,\n      worksheetID: 1,\n      trigger: badge3Trigger(result, userPythonCode),\n    },\n  ]\n\n  for (const badge of badgesPerWorksheet) {\n    const badgeWorksheetPair = `${badge.worksheetID}:${badge.id}`\n    if (\n      !badges.includes(badgeWorksheetPair) &&\n      badge.worksheetID === gameState.worksheetID &&\n      badge.trigger\n    ) {\n      // Here is when a new badge is earned\n      // TODO on worksheet 2: This might have to order the badges, in case user does not do the worksheet in order\n      badges += `${badgeWorksheetPair},`\n    }\n  }\n  return badges\n}\n\nfunction badge1Trigger(result: any): boolean {\n  // Check the code returns a move action other than NORTH\n  return (\n    result.action.action_type === 'move' &&\n    JSON.stringify(result.action.options.direction) !== JSON.stringify({ x: 0, y: 1 })\n  )\n}\n\nfunction badge2Trigger(result: any, userPythonCode: string): boolean {\n  // Check code contains keywords to move in random directions\n  const substrings = [\n    'import random',\n    'randint(',\n    'direction.NORTH',\n    'direction.EAST',\n    'direction.SOUTH',\n    'direction.WEST',\n    'if ',\n    'elif ',\n    'else:',\n  ]\n  // Check the code contains certain keywords about moving in a random direction\n  const codeContainsKeywords = substrings.every((substring) => userPythonCode.includes(substring))\n\n  // And check it returns a move action\n  return result.action.action_type === 'move' && codeContainsKeywords\n}\n\nfunction badge3Trigger(result: any, userPythonCode: string): boolean {\n  // Check the code contains certain keywords about moving to a cell\n  const substrings = ['world_state.can_move_to(', 'print(', 'if ']\n  const codeContainsKeywords = substrings.every((substring) => userPythonCode.includes(substring))\n\n  // And check it returns a move action\n  return result.action.action_type === 'move' && codeContainsKeywords\n}\n","/* eslint-env worker */\nimport { expose } from 'threads/worker'\nimport { checkIfBadgeEarned, filterByWorksheet } from './badges'\nimport ComputedTurnResult from './computedTurnResult'\n\nlet pyodide: Pyodide\n\nfunction getAvatarStateFromGameState(gameState: any, playerAvatarID: number): object {\n  return gameState.players.find((player) => player.id === playerAvatarID)\n}\n\nasync function initializePyodide() {\n  importScripts('https://cdn.jsdelivr.net/pyodide/v0.20.0/full/pyodide.js')\n  pyodide = await loadPyodide()\n  await pyodide.loadPackage(['micropip'])\n  await pyodide.runPythonAsync(`\nimport micropip\n\nmicropip.install(\"${self.location.origin}/static/worker/aimmo_game_worker-0.0.0-py3-none-any.whl\")\n  `)\n\n  await pyodide.runPythonAsync(`\nimport contextlib\nimport sys\n\nfrom js import Object\nfrom io import StringIO\nfrom pyodide import to_js\n\nfrom simulation import direction, location\nfrom simulation.action import MoveAction, PickupAction, WaitAction, MoveTowardsAction, DropAction\nfrom simulation.avatar_state import create_avatar_state\nfrom simulation.world_map import WorldMapCreator\n\n\n@contextlib.contextmanager\ndef capture_output(stdout=None, stderr=None):\n  \"\"\"Temporarily switches stdout and stderr to stringIO objects or variable.\"\"\"\n  old_out = sys.stdout\n  old_err = sys.stderr\n\n  if stdout is None:\n      stdout = StringIO()\n  if stderr is None:\n      stderr = StringIO()\n  sys.stdout = stdout\n  sys.stderr = stderr\n  yield stdout, stderr\n\n  sys.stdout = old_out\n  sys.stderr = old_err\n`)\n}\n\nexport async function computeNextAction(gameState, playerAvatarID, gamePaused): Promise<ComputedTurnResult> {\n  const avatarState = getAvatarStateFromGameState(gameState, playerAvatarID)\n  if (gamePaused) {\n    return Promise.resolve({\n      action: { action_type: 'wait' },\n      log: '',\n      turnCount: gameState.turnCount + 1,\n    })\n  }\n\n  try {\n    return await pyodide.runPythonAsync(`\ngame_state = ${JSON.stringify(gameState)}\nworld_map = WorldMapCreator.generate_world_map_from_game_state(game_state)\navatar_state = create_avatar_state(${JSON.stringify(avatarState)})\nserialized_action = {\"action_type\": \"wait\"}\nwith capture_output() as output:\n    action = next_turn(world_map, avatar_state)\n    if action is None:\n        raise Exception(\"Make sure you are returning an action\")\n    serialized_action = action.serialise()\nstdout, stderr = output\nlogs = stdout.getvalue() + stderr.getvalue()\nto_js({\"action\": serialized_action, \"log\": logs, \"turnCount\": game_state[\"turnCount\"] + 1}, dict_converter=Object.fromEntries)\n    `)\n  } catch (error) {\n    return Promise.resolve({\n      action: { action_type: 'wait' },\n      log: simplifyErrorMessageInLog(error.toString()),\n      turnCount: gameState.turnCount + 1,\n    })\n  }\n}\n\nexport function simplifyErrorMessageInLog(log: string): string {\n  const regexToFindNextTurnErrors = /.*line (\\d+), in next_turn\\n((?:.|\\n)*)/\n  const matches = log.match(regexToFindNextTurnErrors)\n  if (matches?.length >= 2) {\n    // get only the exception message line, removing potential traceback\n    const simpleError = matches[2].split('\\n').slice(-2).join('')\n    return `Uh oh! Something isn't correct on line ${matches[1]}. Here's the error we got:\\n${simpleError}`\n  }\n  // error not in next_turn function\n  return log.split('\\n').slice(-2).join('\\n')\n}\n\nexport async function updateAvatarCode(\n  userCode: string,\n  gameState: any,\n  playerAvatarID: number = 0\n): Promise<ComputedTurnResult> {\n  let turnCount = 0\n  if (gameState) {\n    turnCount = gameState.turnCount + 1\n  }\n\n  try {\n    await pyodide.runPythonAsync(userCode)\n    if (gameState) {\n      return computeNextAction(gameState, playerAvatarID, false)\n    }\n    return Promise.resolve({\n      action: { action_type: 'wait' },\n      log: '',\n      turnCount: turnCount,\n    })\n  } catch (error) {\n    await setAvatarCodeToWaitActionOnError()\n    return Promise.resolve({\n      action: { action_type: 'wait' },\n      log: simplifyErrorMessageInLog(error.toString()),\n      turnCount: turnCount,\n    })\n  }\n}\n\nasync function setAvatarCodeToWaitActionOnError() {\n  await pyodide.runPythonAsync(\n    `def next_turn(world_map, avatar_state):\n    return WaitAction()`\n  )\n}\n\nconst pyodideWorker = {\n  initializePyodide,\n  computeNextAction,\n  updateAvatarCode,\n  checkIfBadgeEarned,\n  filterByWorksheet,\n}\n\nexport type PyodideWorker = typeof pyodideWorker\n\nexpose(pyodideWorker)\n"]}