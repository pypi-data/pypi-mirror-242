Metadata-Version: 2.1
Name: apinator-databricks
Version: 0.1.0
Summary: APInator bindings for Databricks API
Author-email: Rearc Data <data@rearc.io>
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: apinator~=0.1.0
Requires-Dist: pytest ; extra == "test"
Requires-Dist: pytest-cov ; extra == "test"
Requires-Dist: responses ; extra == "test"
Project-URL: Home, https://github.com/rearc-data/apinator-databricks
Provides-Extra: test

# Apinator-Databricks

[`apinator` bindings](https://pypi.org/project/apinator/) for the [Databricks API](https://docs.databricks.com/api-explorer/).

## Example

```python
from apinator_databricks.common import DatabricksContext
from apinator_databricks.unity_catalog import DatabricksUnityCatalogApi, uc_model

context = DatabricksContext(
        access_token="TOKEN",  # Will be kept secret
        account="account",
    )
api = DatabricksUnityCatalogApi(context)
shares: uc_model.ShareList = api.datashares.list()
for share in shares.shares:
    assert isinstance(share, uc_model.SharePartial)  # Not necessary, pydantic guarantees this
    ...
```

