# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v12/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_search_api_v12.configuration import Configuration


class AccountCustomizer(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'account_id': 'int',
        'customizer_attribute_id': 'int',
        'value': 'str',
        'approval_status': 'AccountCustomizerServiceApprovalStatus',
        'disapproval_reason_codes': 'list[str]'
    }

    attribute_map = {
        'account_id': 'accountId',
        'customizer_attribute_id': 'customizerAttributeId',
        'value': 'value',
        'approval_status': 'approvalStatus',
        'disapproval_reason_codes': 'disapprovalReasonCodes'
    }

    def __init__(self, account_id=None, customizer_attribute_id=None, value=None, approval_status=None, disapproval_reason_codes=None, local_vars_configuration=None):  # noqa: E501
        """AccountCustomizer - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._account_id = None
        self._customizer_attribute_id = None
        self._value = None
        self._approval_status = None
        self._disapproval_reason_codes = None
        self.discriminator = None

        self.account_id = account_id
        self.customizer_attribute_id = customizer_attribute_id
        self.value = value
        self.approval_status = approval_status
        self.disapproval_reason_codes = disapproval_reason_codes

    @property
    def account_id(self):
        """Gets the account_id of this AccountCustomizer.  # noqa: E501

        <div lang=\"ja\">アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Account ID.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :return: The account_id of this AccountCustomizer.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this AccountCustomizer.

        <div lang=\"ja\">アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Account ID.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :param account_id: The account_id of this AccountCustomizer.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def customizer_attribute_id(self):
        """Gets the customizer_attribute_id of this AccountCustomizer.  # noqa: E501

        <div lang=\"ja\">カスタマイザー属性IDです。<br> ADDおよびREMOVE時、このフィールドは必須となります。</div> <div lang=\"en\">CustomizerAttribute ID.<br> This field is required in ADD and REMOVE operation.</div>   # noqa: E501

        :return: The customizer_attribute_id of this AccountCustomizer.  # noqa: E501
        :rtype: int
        """
        return self._customizer_attribute_id

    @customizer_attribute_id.setter
    def customizer_attribute_id(self, customizer_attribute_id):
        """Sets the customizer_attribute_id of this AccountCustomizer.

        <div lang=\"ja\">カスタマイザー属性IDです。<br> ADDおよびREMOVE時、このフィールドは必須となります。</div> <div lang=\"en\">CustomizerAttribute ID.<br> This field is required in ADD and REMOVE operation.</div>   # noqa: E501

        :param customizer_attribute_id: The customizer_attribute_id of this AccountCustomizer.  # noqa: E501
        :type: int
        """

        self._customizer_attribute_id = customizer_attribute_id

    @property
    def value(self):
        """Gets the value of this AccountCustomizer.  # noqa: E501

        <div lang=\"ja\">属性値です。挿入用広告に挿入されます。<br> 入力仕様の詳細は以下のヘルプを参照してください。<br> ・<a href=\"https://ads-help.yahoo-net.jp/s/article/H000044225?language=ja\">アドカスタマイザー属性を関連付ける</a><br> ADD時、このフィールドは必須となります。</div> <div lang=\"en\">The attribute value. It will be inserted into the ad for insertion.<br> See also the help below.<br> * <a href=\"https://ads-help.yahoo-net.jp/s/article/H000044225?language=en_US\">Associate ad customizer attributes</a><br> This field is required in ADD operation.</div>   # noqa: E501

        :return: The value of this AccountCustomizer.  # noqa: E501
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this AccountCustomizer.

        <div lang=\"ja\">属性値です。挿入用広告に挿入されます。<br> 入力仕様の詳細は以下のヘルプを参照してください。<br> ・<a href=\"https://ads-help.yahoo-net.jp/s/article/H000044225?language=ja\">アドカスタマイザー属性を関連付ける</a><br> ADD時、このフィールドは必須となります。</div> <div lang=\"en\">The attribute value. It will be inserted into the ad for insertion.<br> See also the help below.<br> * <a href=\"https://ads-help.yahoo-net.jp/s/article/H000044225?language=en_US\">Associate ad customizer attributes</a><br> This field is required in ADD operation.</div>   # noqa: E501

        :param value: The value of this AccountCustomizer.  # noqa: E501
        :type: str
        """

        self._value = value

    @property
    def approval_status(self):
        """Gets the approval_status of this AccountCustomizer.  # noqa: E501


        :return: The approval_status of this AccountCustomizer.  # noqa: E501
        :rtype: AccountCustomizerServiceApprovalStatus
        """
        return self._approval_status

    @approval_status.setter
    def approval_status(self, approval_status):
        """Sets the approval_status of this AccountCustomizer.


        :param approval_status: The approval_status of this AccountCustomizer.  # noqa: E501
        :type: AccountCustomizerServiceApprovalStatus
        """

        self._approval_status = approval_status

    @property
    def disapproval_reason_codes(self):
        """Gets the disapproval_reason_codes of this AccountCustomizer.  # noqa: E501

        <div lang=\"ja\">審査否認理由です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Reject reason on editorial review.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :return: The disapproval_reason_codes of this AccountCustomizer.  # noqa: E501
        :rtype: list[str]
        """
        return self._disapproval_reason_codes

    @disapproval_reason_codes.setter
    def disapproval_reason_codes(self, disapproval_reason_codes):
        """Sets the disapproval_reason_codes of this AccountCustomizer.

        <div lang=\"ja\">審査否認理由です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Reject reason on editorial review.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :param disapproval_reason_codes: The disapproval_reason_codes of this AccountCustomizer.  # noqa: E501
        :type: list[str]
        """

        self._disapproval_reason_codes = disapproval_reason_codes

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AccountCustomizer):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AccountCustomizer):
            return True

        return self.to_dict() != other.to_dict()
