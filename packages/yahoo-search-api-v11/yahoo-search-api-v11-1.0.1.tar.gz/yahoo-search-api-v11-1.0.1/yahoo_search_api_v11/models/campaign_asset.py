# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v12/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_search_api_v12.configuration import Configuration


class CampaignAsset(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'account_id': 'int',
        'campaign_id': 'int',
        'asset_id': 'int',
        'type': 'CampaignAssetServiceType',
        'user_status': 'CampaignAssetServiceUserStatus'
    }

    attribute_map = {
        'account_id': 'accountId',
        'campaign_id': 'campaignId',
        'asset_id': 'assetId',
        'type': 'type',
        'user_status': 'userStatus'
    }

    def __init__(self, account_id=None, campaign_id=None, asset_id=None, type=None, user_status=None, local_vars_configuration=None):  # noqa: E501
        """CampaignAsset - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._account_id = None
        self._campaign_id = None
        self._asset_id = None
        self._type = None
        self._user_status = None
        self.discriminator = None

        self.account_id = account_id
        self.campaign_id = campaign_id
        self.asset_id = asset_id
        self.type = type
        self.user_status = user_status

    @property
    def account_id(self):
        """Gets the account_id of this CampaignAsset.  # noqa: E501

        <div lang=\"ja\">アカウントIDです。</div> <div lang=\"en\">Account ID.</div>   # noqa: E501

        :return: The account_id of this CampaignAsset.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this CampaignAsset.

        <div lang=\"ja\">アカウントIDです。</div> <div lang=\"en\">Account ID.</div>   # noqa: E501

        :param account_id: The account_id of this CampaignAsset.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def campaign_id(self):
        """Gets the campaign_id of this CampaignAsset.  # noqa: E501

        <div lang=\"ja\">キャンペーンIDです。<br> SET時、このフィールドは必須となります。</div> <div lang=\"en\">Campaign ID.<br> This field is required in SET operation.</div>   # noqa: E501

        :return: The campaign_id of this CampaignAsset.  # noqa: E501
        :rtype: int
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id):
        """Sets the campaign_id of this CampaignAsset.

        <div lang=\"ja\">キャンペーンIDです。<br> SET時、このフィールドは必須となります。</div> <div lang=\"en\">Campaign ID.<br> This field is required in SET operation.</div>   # noqa: E501

        :param campaign_id: The campaign_id of this CampaignAsset.  # noqa: E501
        :type: int
        """

        self._campaign_id = campaign_id

    @property
    def asset_id(self):
        """Gets the asset_id of this CampaignAsset.  # noqa: E501

        <div lang=\"ja\">アセットのIDです。<br> SETおよびREPLACE時、このフィールドは必須となります。<br> SET時、このフィールドは更新対象のアセットIDを入力してください。<br> REPLACE時、このフィールドはキャンペーンに設定するアセットIDを入力してください。</div> <div lang=\"en\">Asset ID.<br> This field is required in SET and REPLACE operation.<br> In SET operation, enter the asset ID to be updated.<br> In REPLACE operation, enter the asset ID to be set for the campaign.</div>   # noqa: E501

        :return: The asset_id of this CampaignAsset.  # noqa: E501
        :rtype: int
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this CampaignAsset.

        <div lang=\"ja\">アセットのIDです。<br> SETおよびREPLACE時、このフィールドは必須となります。<br> SET時、このフィールドは更新対象のアセットIDを入力してください。<br> REPLACE時、このフィールドはキャンペーンに設定するアセットIDを入力してください。</div> <div lang=\"en\">Asset ID.<br> This field is required in SET and REPLACE operation.<br> In SET operation, enter the asset ID to be updated.<br> In REPLACE operation, enter the asset ID to be set for the campaign.</div>   # noqa: E501

        :param asset_id: The asset_id of this CampaignAsset.  # noqa: E501
        :type: int
        """

        self._asset_id = asset_id

    @property
    def type(self):
        """Gets the type of this CampaignAsset.  # noqa: E501


        :return: The type of this CampaignAsset.  # noqa: E501
        :rtype: CampaignAssetServiceType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CampaignAsset.


        :param type: The type of this CampaignAsset.  # noqa: E501
        :type: CampaignAssetServiceType
        """

        self._type = type

    @property
    def user_status(self):
        """Gets the user_status of this CampaignAsset.  # noqa: E501


        :return: The user_status of this CampaignAsset.  # noqa: E501
        :rtype: CampaignAssetServiceUserStatus
        """
        return self._user_status

    @user_status.setter
    def user_status(self, user_status):
        """Sets the user_status of this CampaignAsset.


        :param user_status: The user_status of this CampaignAsset.  # noqa: E501
        :type: CampaignAssetServiceUserStatus
        """

        self._user_status = user_status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CampaignAsset):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, CampaignAsset):
            return True

        return self.to_dict() != other.to_dict()
