# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v12/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_search_api_v12.configuration import Configuration


class CampaignServiceSelector(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'account_id': 'int',
        'portfolio_bidding_ids': 'list[int]',
        'campaign_ids': 'list[int]',
        'campaign_budget_ids': 'list[int]',
        'contains_label': 'bool',
        'label_ids': 'list[int]',
        'number_results': 'int',
        'start_index': 'int',
        'user_statuses': 'list[CampaignServiceUserStatus]',
        'created_date_range': 'CampaignServiceCreatedDateRange',
        'budget_amount_range': 'CampaignServiceBudgetAmountRange'
    }

    attribute_map = {
        'account_id': 'accountId',
        'portfolio_bidding_ids': 'portfolioBiddingIds',
        'campaign_ids': 'campaignIds',
        'campaign_budget_ids': 'campaignBudgetIds',
        'contains_label': 'containsLabel',
        'label_ids': 'labelIds',
        'number_results': 'numberResults',
        'start_index': 'startIndex',
        'user_statuses': 'userStatuses',
        'created_date_range': 'createdDateRange',
        'budget_amount_range': 'budgetAmountRange'
    }

    def __init__(self, account_id=None, portfolio_bidding_ids=None, campaign_ids=None, campaign_budget_ids=None, contains_label=None, label_ids=None, number_results=500, start_index=1, user_statuses=None, created_date_range=None, budget_amount_range=None, local_vars_configuration=None):  # noqa: E501
        """CampaignServiceSelector - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._account_id = None
        self._portfolio_bidding_ids = None
        self._campaign_ids = None
        self._campaign_budget_ids = None
        self._contains_label = None
        self._label_ids = None
        self._number_results = None
        self._start_index = None
        self._user_statuses = None
        self._created_date_range = None
        self._budget_amount_range = None
        self.discriminator = None

        self.account_id = account_id
        self.portfolio_bidding_ids = portfolio_bidding_ids
        self.campaign_ids = campaign_ids
        self.campaign_budget_ids = campaign_budget_ids
        self.contains_label = contains_label
        self.label_ids = label_ids
        self.number_results = number_results
        self.start_index = start_index
        self.user_statuses = user_statuses
        self.created_date_range = created_date_range
        self.budget_amount_range = budget_amount_range

    @property
    def account_id(self):
        """Gets the account_id of this CampaignServiceSelector.  # noqa: E501

        <div lang=\"ja\">検索条件：アカウントIDです。</div> <div lang=\"en\">Search condition: Account ID.</div>   # noqa: E501

        :return: The account_id of this CampaignServiceSelector.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this CampaignServiceSelector.

        <div lang=\"ja\">検索条件：アカウントIDです。</div> <div lang=\"en\">Search condition: Account ID.</div>   # noqa: E501

        :param account_id: The account_id of this CampaignServiceSelector.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and account_id is None:  # noqa: E501
            raise ValueError("Invalid value for `account_id`, must not be `None`")  # noqa: E501

        self._account_id = account_id

    @property
    def portfolio_bidding_ids(self):
        """Gets the portfolio_bidding_ids of this CampaignServiceSelector.  # noqa: E501

        <div lang=\"ja\">検索条件：ポートフォリオ入札IDです。</div> <div lang=\"en\">Search condition: Portfolio bidding ID.</div>   # noqa: E501

        :return: The portfolio_bidding_ids of this CampaignServiceSelector.  # noqa: E501
        :rtype: list[int]
        """
        return self._portfolio_bidding_ids

    @portfolio_bidding_ids.setter
    def portfolio_bidding_ids(self, portfolio_bidding_ids):
        """Sets the portfolio_bidding_ids of this CampaignServiceSelector.

        <div lang=\"ja\">検索条件：ポートフォリオ入札IDです。</div> <div lang=\"en\">Search condition: Portfolio bidding ID.</div>   # noqa: E501

        :param portfolio_bidding_ids: The portfolio_bidding_ids of this CampaignServiceSelector.  # noqa: E501
        :type: list[int]
        """

        self._portfolio_bidding_ids = portfolio_bidding_ids

    @property
    def campaign_ids(self):
        """Gets the campaign_ids of this CampaignServiceSelector.  # noqa: E501

        <div lang=\"ja\">検索条件：キャンペーンIDです。<br> ※指定しない場合は、フィルタ条件に すべてのキャンペーンが含まれます。</div> <div lang=\"en\">Search condition: Campaign ID<br> * All campaign will return, if no campaign are not specified.</div>   # noqa: E501

        :return: The campaign_ids of this CampaignServiceSelector.  # noqa: E501
        :rtype: list[int]
        """
        return self._campaign_ids

    @campaign_ids.setter
    def campaign_ids(self, campaign_ids):
        """Sets the campaign_ids of this CampaignServiceSelector.

        <div lang=\"ja\">検索条件：キャンペーンIDです。<br> ※指定しない場合は、フィルタ条件に すべてのキャンペーンが含まれます。</div> <div lang=\"en\">Search condition: Campaign ID<br> * All campaign will return, if no campaign are not specified.</div>   # noqa: E501

        :param campaign_ids: The campaign_ids of this CampaignServiceSelector.  # noqa: E501
        :type: list[int]
        """

        self._campaign_ids = campaign_ids

    @property
    def campaign_budget_ids(self):
        """Gets the campaign_budget_ids of this CampaignServiceSelector.  # noqa: E501

        <div lang=\"ja\">検索条件：共有予算IDです。<br>※現在、こちらのフィールドは利用できません。</div> <div lang=\"en\">Search condition: Campaign budget ID.<br>*Currently this field is not available.</div>   # noqa: E501

        :return: The campaign_budget_ids of this CampaignServiceSelector.  # noqa: E501
        :rtype: list[int]
        """
        return self._campaign_budget_ids

    @campaign_budget_ids.setter
    def campaign_budget_ids(self, campaign_budget_ids):
        """Sets the campaign_budget_ids of this CampaignServiceSelector.

        <div lang=\"ja\">検索条件：共有予算IDです。<br>※現在、こちらのフィールドは利用できません。</div> <div lang=\"en\">Search condition: Campaign budget ID.<br>*Currently this field is not available.</div>   # noqa: E501

        :param campaign_budget_ids: The campaign_budget_ids of this CampaignServiceSelector.  # noqa: E501
        :type: list[int]
        """

        self._campaign_budget_ids = campaign_budget_ids

    @property
    def contains_label(self):
        """Gets the contains_label of this CampaignServiceSelector.  # noqa: E501

        <div lang=\"ja\">ラベルID取得フラグです。<br> このフィールドは省略可能となります。その際、デフォルト値はfalseとなります。 </div> <div lang=\"en\">Flag of contains label ID.<br> This field is optional. The default value will be false. </div>   # noqa: E501

        :return: The contains_label of this CampaignServiceSelector.  # noqa: E501
        :rtype: bool
        """
        return self._contains_label

    @contains_label.setter
    def contains_label(self, contains_label):
        """Sets the contains_label of this CampaignServiceSelector.

        <div lang=\"ja\">ラベルID取得フラグです。<br> このフィールドは省略可能となります。その際、デフォルト値はfalseとなります。 </div> <div lang=\"en\">Flag of contains label ID.<br> This field is optional. The default value will be false. </div>   # noqa: E501

        :param contains_label: The contains_label of this CampaignServiceSelector.  # noqa: E501
        :type: bool
        """

        self._contains_label = contains_label

    @property
    def label_ids(self):
        """Gets the label_ids of this CampaignServiceSelector.  # noqa: E501

        <div lang=\"ja\">検索条件：ラベルIDです。<br> ※labelIdsを指定した場合は、取得結果にcontainsLabelの情報が付与されます。</div> <div lang=\"en\">Search condition: Label ID.<br> *When specified labelIds, containsLabel information is added to the result.</div>   # noqa: E501

        :return: The label_ids of this CampaignServiceSelector.  # noqa: E501
        :rtype: list[int]
        """
        return self._label_ids

    @label_ids.setter
    def label_ids(self, label_ids):
        """Sets the label_ids of this CampaignServiceSelector.

        <div lang=\"ja\">検索条件：ラベルIDです。<br> ※labelIdsを指定した場合は、取得結果にcontainsLabelの情報が付与されます。</div> <div lang=\"en\">Search condition: Label ID.<br> *When specified labelIds, containsLabel information is added to the result.</div>   # noqa: E501

        :param label_ids: The label_ids of this CampaignServiceSelector.  # noqa: E501
        :type: list[int]
        """

        self._label_ids = label_ids

    @property
    def number_results(self):
        """Gets the number_results of this CampaignServiceSelector.  # noqa: E501

        <div lang=\"ja\">ページの最大件数です。このフィールドは、1以上を指定する必要があります。</div> <div lang=\"en\">Maximum number of results to return in this page. This field must be greater than or equal to 1. Also see Entity Limits per operation.</div>   # noqa: E501

        :return: The number_results of this CampaignServiceSelector.  # noqa: E501
        :rtype: int
        """
        return self._number_results

    @number_results.setter
    def number_results(self, number_results):
        """Sets the number_results of this CampaignServiceSelector.

        <div lang=\"ja\">ページの最大件数です。このフィールドは、1以上を指定する必要があります。</div> <div lang=\"en\">Maximum number of results to return in this page. This field must be greater than or equal to 1. Also see Entity Limits per operation.</div>   # noqa: E501

        :param number_results: The number_results of this CampaignServiceSelector.  # noqa: E501
        :type: int
        """
        if (self.local_vars_configuration.client_side_validation and
                number_results is not None and number_results > 10000):  # noqa: E501
            raise ValueError("Invalid value for `number_results`, must be a value less than or equal to `10000`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                number_results is not None and number_results < 1):  # noqa: E501
            raise ValueError("Invalid value for `number_results`, must be a value greater than or equal to `1`")  # noqa: E501

        self._number_results = number_results

    @property
    def start_index(self):
        """Gets the start_index of this CampaignServiceSelector.  # noqa: E501

        <div lang=\"ja\">ページの先頭のインデックスです。このフィールドは、1以上を指定する必要があります。</div> <div lang=\"en\">Index of the first result to return in this page. This field must be greater than or equal to 1.</div>   # noqa: E501

        :return: The start_index of this CampaignServiceSelector.  # noqa: E501
        :rtype: int
        """
        return self._start_index

    @start_index.setter
    def start_index(self, start_index):
        """Sets the start_index of this CampaignServiceSelector.

        <div lang=\"ja\">ページの先頭のインデックスです。このフィールドは、1以上を指定する必要があります。</div> <div lang=\"en\">Index of the first result to return in this page. This field must be greater than or equal to 1.</div>   # noqa: E501

        :param start_index: The start_index of this CampaignServiceSelector.  # noqa: E501
        :type: int
        """
        if (self.local_vars_configuration.client_side_validation and
                start_index is not None and start_index < 1):  # noqa: E501
            raise ValueError("Invalid value for `start_index`, must be a value greater than or equal to `1`")  # noqa: E501

        self._start_index = start_index

    @property
    def user_statuses(self):
        """Gets the user_statuses of this CampaignServiceSelector.  # noqa: E501


        :return: The user_statuses of this CampaignServiceSelector.  # noqa: E501
        :rtype: list[CampaignServiceUserStatus]
        """
        return self._user_statuses

    @user_statuses.setter
    def user_statuses(self, user_statuses):
        """Sets the user_statuses of this CampaignServiceSelector.


        :param user_statuses: The user_statuses of this CampaignServiceSelector.  # noqa: E501
        :type: list[CampaignServiceUserStatus]
        """

        self._user_statuses = user_statuses

    @property
    def created_date_range(self):
        """Gets the created_date_range of this CampaignServiceSelector.  # noqa: E501


        :return: The created_date_range of this CampaignServiceSelector.  # noqa: E501
        :rtype: CampaignServiceCreatedDateRange
        """
        return self._created_date_range

    @created_date_range.setter
    def created_date_range(self, created_date_range):
        """Sets the created_date_range of this CampaignServiceSelector.


        :param created_date_range: The created_date_range of this CampaignServiceSelector.  # noqa: E501
        :type: CampaignServiceCreatedDateRange
        """

        self._created_date_range = created_date_range

    @property
    def budget_amount_range(self):
        """Gets the budget_amount_range of this CampaignServiceSelector.  # noqa: E501


        :return: The budget_amount_range of this CampaignServiceSelector.  # noqa: E501
        :rtype: CampaignServiceBudgetAmountRange
        """
        return self._budget_amount_range

    @budget_amount_range.setter
    def budget_amount_range(self, budget_amount_range):
        """Sets the budget_amount_range of this CampaignServiceSelector.


        :param budget_amount_range: The budget_amount_range of this CampaignServiceSelector.  # noqa: E501
        :type: CampaignServiceBudgetAmountRange
        """

        self._budget_amount_range = budget_amount_range

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CampaignServiceSelector):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, CampaignServiceSelector):
            return True

        return self.to_dict() != other.to_dict()
