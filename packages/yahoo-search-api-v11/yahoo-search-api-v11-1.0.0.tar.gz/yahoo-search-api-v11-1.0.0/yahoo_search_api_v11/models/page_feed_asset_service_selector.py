# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v12/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_search_api_v12.configuration import Configuration


class PageFeedAssetServiceSelector(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'account_id': 'int',
        'page_feed_asset_set_ids': 'list[int]',
        'page_feed_asset_ids': 'list[int]',
        'approval_statuses': 'list[PageFeedAssetServiceApprovalStatus]',
        'page_feed_asset_custom_labels': 'list[str]',
        'page_feed_asset_urls': 'list[PageFeedAssetServicePageFeedAssetUrl]',
        'number_results': 'int',
        'start_index': 'int'
    }

    attribute_map = {
        'account_id': 'accountId',
        'page_feed_asset_set_ids': 'pageFeedAssetSetIds',
        'page_feed_asset_ids': 'pageFeedAssetIds',
        'approval_statuses': 'approvalStatuses',
        'page_feed_asset_custom_labels': 'pageFeedAssetCustomLabels',
        'page_feed_asset_urls': 'pageFeedAssetUrls',
        'number_results': 'numberResults',
        'start_index': 'startIndex'
    }

    def __init__(self, account_id=None, page_feed_asset_set_ids=None, page_feed_asset_ids=None, approval_statuses=None, page_feed_asset_custom_labels=None, page_feed_asset_urls=None, number_results=500, start_index=1, local_vars_configuration=None):  # noqa: E501
        """PageFeedAssetServiceSelector - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._account_id = None
        self._page_feed_asset_set_ids = None
        self._page_feed_asset_ids = None
        self._approval_statuses = None
        self._page_feed_asset_custom_labels = None
        self._page_feed_asset_urls = None
        self._number_results = None
        self._start_index = None
        self.discriminator = None

        self.account_id = account_id
        self.page_feed_asset_set_ids = page_feed_asset_set_ids
        self.page_feed_asset_ids = page_feed_asset_ids
        self.approval_statuses = approval_statuses
        self.page_feed_asset_custom_labels = page_feed_asset_custom_labels
        self.page_feed_asset_urls = page_feed_asset_urls
        self.number_results = number_results
        self.start_index = start_index

    @property
    def account_id(self):
        """Gets the account_id of this PageFeedAssetServiceSelector.  # noqa: E501

        <div lang=\"ja\">アカウントID</div> <div lang=\"en\">Account ID.</div>   # noqa: E501

        :return: The account_id of this PageFeedAssetServiceSelector.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this PageFeedAssetServiceSelector.

        <div lang=\"ja\">アカウントID</div> <div lang=\"en\">Account ID.</div>   # noqa: E501

        :param account_id: The account_id of this PageFeedAssetServiceSelector.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and account_id is None:  # noqa: E501
            raise ValueError("Invalid value for `account_id`, must not be `None`")  # noqa: E501

        self._account_id = account_id

    @property
    def page_feed_asset_set_ids(self):
        """Gets the page_feed_asset_set_ids of this PageFeedAssetServiceSelector.  # noqa: E501

        <div lang=\"ja\">ページフィードアセットセットID</div> <div lang=\"en\">PageFeedAssetSet ID.</div>   # noqa: E501

        :return: The page_feed_asset_set_ids of this PageFeedAssetServiceSelector.  # noqa: E501
        :rtype: list[int]
        """
        return self._page_feed_asset_set_ids

    @page_feed_asset_set_ids.setter
    def page_feed_asset_set_ids(self, page_feed_asset_set_ids):
        """Sets the page_feed_asset_set_ids of this PageFeedAssetServiceSelector.

        <div lang=\"ja\">ページフィードアセットセットID</div> <div lang=\"en\">PageFeedAssetSet ID.</div>   # noqa: E501

        :param page_feed_asset_set_ids: The page_feed_asset_set_ids of this PageFeedAssetServiceSelector.  # noqa: E501
        :type: list[int]
        """

        self._page_feed_asset_set_ids = page_feed_asset_set_ids

    @property
    def page_feed_asset_ids(self):
        """Gets the page_feed_asset_ids of this PageFeedAssetServiceSelector.  # noqa: E501

        <div lang=\"ja\">ページフィードアセットID</div> <div lang=\"en\">PageFeedAsset ID.</div>   # noqa: E501

        :return: The page_feed_asset_ids of this PageFeedAssetServiceSelector.  # noqa: E501
        :rtype: list[int]
        """
        return self._page_feed_asset_ids

    @page_feed_asset_ids.setter
    def page_feed_asset_ids(self, page_feed_asset_ids):
        """Sets the page_feed_asset_ids of this PageFeedAssetServiceSelector.

        <div lang=\"ja\">ページフィードアセットID</div> <div lang=\"en\">PageFeedAsset ID.</div>   # noqa: E501

        :param page_feed_asset_ids: The page_feed_asset_ids of this PageFeedAssetServiceSelector.  # noqa: E501
        :type: list[int]
        """

        self._page_feed_asset_ids = page_feed_asset_ids

    @property
    def approval_statuses(self):
        """Gets the approval_statuses of this PageFeedAssetServiceSelector.  # noqa: E501


        :return: The approval_statuses of this PageFeedAssetServiceSelector.  # noqa: E501
        :rtype: list[PageFeedAssetServiceApprovalStatus]
        """
        return self._approval_statuses

    @approval_statuses.setter
    def approval_statuses(self, approval_statuses):
        """Sets the approval_statuses of this PageFeedAssetServiceSelector.


        :param approval_statuses: The approval_statuses of this PageFeedAssetServiceSelector.  # noqa: E501
        :type: list[PageFeedAssetServiceApprovalStatus]
        """

        self._approval_statuses = approval_statuses

    @property
    def page_feed_asset_custom_labels(self):
        """Gets the page_feed_asset_custom_labels of this PageFeedAssetServiceSelector.  # noqa: E501

        <div lang=\"ja\">ページフィードアセットのカスタムラベル</div> <div lang=\"en\">Custom label of Page feed asset.</div>   # noqa: E501

        :return: The page_feed_asset_custom_labels of this PageFeedAssetServiceSelector.  # noqa: E501
        :rtype: list[str]
        """
        return self._page_feed_asset_custom_labels

    @page_feed_asset_custom_labels.setter
    def page_feed_asset_custom_labels(self, page_feed_asset_custom_labels):
        """Sets the page_feed_asset_custom_labels of this PageFeedAssetServiceSelector.

        <div lang=\"ja\">ページフィードアセットのカスタムラベル</div> <div lang=\"en\">Custom label of Page feed asset.</div>   # noqa: E501

        :param page_feed_asset_custom_labels: The page_feed_asset_custom_labels of this PageFeedAssetServiceSelector.  # noqa: E501
        :type: list[str]
        """

        self._page_feed_asset_custom_labels = page_feed_asset_custom_labels

    @property
    def page_feed_asset_urls(self):
        """Gets the page_feed_asset_urls of this PageFeedAssetServiceSelector.  # noqa: E501


        :return: The page_feed_asset_urls of this PageFeedAssetServiceSelector.  # noqa: E501
        :rtype: list[PageFeedAssetServicePageFeedAssetUrl]
        """
        return self._page_feed_asset_urls

    @page_feed_asset_urls.setter
    def page_feed_asset_urls(self, page_feed_asset_urls):
        """Sets the page_feed_asset_urls of this PageFeedAssetServiceSelector.


        :param page_feed_asset_urls: The page_feed_asset_urls of this PageFeedAssetServiceSelector.  # noqa: E501
        :type: list[PageFeedAssetServicePageFeedAssetUrl]
        """

        self._page_feed_asset_urls = page_feed_asset_urls

    @property
    def number_results(self):
        """Gets the number_results of this PageFeedAssetServiceSelector.  # noqa: E501

        <div lang=\"ja\">ページの最大件数です。このフィールドは、1以上を指定する必要があります。</div> <div lang=\"en\">Maximum number of results to return in this page. This field must be greater than or equal to 1. Also see Entity Limits per operation.</div>   # noqa: E501

        :return: The number_results of this PageFeedAssetServiceSelector.  # noqa: E501
        :rtype: int
        """
        return self._number_results

    @number_results.setter
    def number_results(self, number_results):
        """Sets the number_results of this PageFeedAssetServiceSelector.

        <div lang=\"ja\">ページの最大件数です。このフィールドは、1以上を指定する必要があります。</div> <div lang=\"en\">Maximum number of results to return in this page. This field must be greater than or equal to 1. Also see Entity Limits per operation.</div>   # noqa: E501

        :param number_results: The number_results of this PageFeedAssetServiceSelector.  # noqa: E501
        :type: int
        """
        if (self.local_vars_configuration.client_side_validation and
                number_results is not None and number_results > 10000):  # noqa: E501
            raise ValueError("Invalid value for `number_results`, must be a value less than or equal to `10000`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                number_results is not None and number_results < 1):  # noqa: E501
            raise ValueError("Invalid value for `number_results`, must be a value greater than or equal to `1`")  # noqa: E501

        self._number_results = number_results

    @property
    def start_index(self):
        """Gets the start_index of this PageFeedAssetServiceSelector.  # noqa: E501

        <div lang=\"ja\">ページの先頭のインデックスです。このフィールドは、1以上を指定する必要があります。</div> <div lang=\"en\">Index of the first result to return in this page. This field must be greater than or equal to 1.</div>   # noqa: E501

        :return: The start_index of this PageFeedAssetServiceSelector.  # noqa: E501
        :rtype: int
        """
        return self._start_index

    @start_index.setter
    def start_index(self, start_index):
        """Sets the start_index of this PageFeedAssetServiceSelector.

        <div lang=\"ja\">ページの先頭のインデックスです。このフィールドは、1以上を指定する必要があります。</div> <div lang=\"en\">Index of the first result to return in this page. This field must be greater than or equal to 1.</div>   # noqa: E501

        :param start_index: The start_index of this PageFeedAssetServiceSelector.  # noqa: E501
        :type: int
        """
        if (self.local_vars_configuration.client_side_validation and
                start_index is not None and start_index < 1):  # noqa: E501
            raise ValueError("Invalid value for `start_index`, must be a value greater than or equal to `1`")  # noqa: E501

        self._start_index = start_index

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PageFeedAssetServiceSelector):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, PageFeedAssetServiceSelector):
            return True

        return self.to_dict() != other.to_dict()
