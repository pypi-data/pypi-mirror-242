Metadata-Version: 2.1
Name: pfun
Version: 0.13.2
Summary: Functional, composable, asynchronous, type-safe Python.
Author: Sune Debel
Requires-Python: >=3.7,<3.12
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Provides-Extra: http
Provides-Extra: sql
Provides-Extra: test
Requires-Dist: aiohttp[speedups] (>=3.7.4,<4.0.0) ; extra == "http"
Requires-Dist: asyncpg (>=0.28.0,<0.29.0) ; extra == "sql"
Requires-Dist: dill (>=0.3.2,<0.4.0)
Requires-Dist: hypothesis (>=6.8.5,<7.0.0) ; extra == "test"
Requires-Dist: typing-extensions (>=3.10.0.0,<4.0.0.0) ; python_version >= "3.7" and python_version < "3.11"
Requires-Dist: typing-extensions (>=4.8.0,<5.0.0) ; python_version == "3.11"
Description-Content-Type: text/markdown

## <img src="https://raw.githubusercontent.com/suned/pfun/master/logo/pfun_logo.svg?sanitize=true"/> <br> <p align="center">Functional, composable, asynchronous, type-safe Python.</p>

- [Documentation](https://pfun.dev)
- [Known issues](https://github.com/suned/pfun/issues?q=is%3Aopen+is%3Aissue+label%3Abug)

## Install

```console
$ pip install pfun
```

Or with optional dependencies:
```console
$ pip install pfun[http,sql]
```

## Resources

### Articles
- [Purely Functional Python With Static Types](https://dev.to/suned/purely-functional-python-with-static-types-41mf)
- [Be More Lazy, Become More Productive](https://dev.to/suned/be-more-lazy-become-more-productive-2cnb)
- [Completely Type-Safe Error Handling in Python](https://dev.to/suned/completely-type-safe-error-handling-in-python-3apg)
- [Completely Type-Safe Dependency Injection in Python](https://dev.to/suned/completely-type-safe-dependency-injection-in-python-48a5)
- [How To Make Functional Programming in Python Go Fast](https://dev.to/suned/how-to-make-functional-programming-in-python-go-fast-ad6)

### Examples
- [Todo-Backend](https://github.com/suned/pfun-todo-backend/) (implementation of [todobackend.com](https://todobackend.com/))
## Support

On [ko-fi](https://ko-fi.com/python_pfun)

## Development

Requires [poetry](https://poetry.eustace.io/)

- Install dependencies with `poetry run task install -E http -E sql`
- Build documentation with `poetry run task serve-docs`
- Run tests with `poetry run task test`
- Lint with `poetry run task lint`

