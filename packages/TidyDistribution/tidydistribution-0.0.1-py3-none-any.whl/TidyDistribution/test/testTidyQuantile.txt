===============================================================================0
导入模块
>>> from TidyDistribution import TidyQuantile
>>> from TidyDistribution import TidySample
>>> import numpy as np
===============================================================================1
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="bernoulli", p=0.3)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="bernoulli", p=0.8, loc=3)
>>> print(y)
===============================================================================2
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="betabinom", n=10, a=1, b=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="betabinom", n=10, a=1, b=2, loc=3)
>>> print(y)
===============================================================================3
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="binom", n=10, p=0.6)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="binom", n=10, p=0.2, loc=3)
>>> print(y)
===============================================================================4
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="boltzmann", lambda_=10, N=3)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="boltzmann", lambda_=10, N=3, loc=3)
>>> print(y)
===============================================================================5
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="planck", lambda_=1)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="planck", lambda_=1, loc=3)
>>> print(y)
===============================================================================6
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="poiss", mu=1)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="poiss", mu=1, loc=3)
>>> print(y)
===============================================================================7
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="geom", p=0.1)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="geom", p=0.9, loc=3)
>>> print(y)
===============================================================================8
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="nbinom", n=10, p=0.1)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="nbinom", n=10, p=0.9, loc=3)
>>> print(y)
===============================================================================9
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="hgeom", M=20, n=10, N=10)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="hgeom", M=20, n=10, N=10, loc=3)
>>> print(y)
===============================================================================10
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="nchgeomfisher", M=20, n=10, N=10, odds=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="nchgeomfisher", M=20, n=10, N=10, odds=2, loc=3)
>>> print(y)
===============================================================================11
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="nchgeomWallenius", M=20, n=10, N=10, odds=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="nchgeomWallenius", M=20, n=10, N=10, odds=2, loc=3)
>>> print(y)
===============================================================================12
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="nhgeom", M=20, n=10, r=10)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="nhgeom", M=20, n=10, r=10, loc=3)
>>> print(y)
===============================================================================13
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="zeta", a=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="zeta", a=2, loc=3)
>>> print(y)
===============================================================================14
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="zipfian", a=2, n=10)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="zipfian", a=2, n=10, loc=3)
>>> print(y)
===============================================================================15
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="logseries", p=0.9)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="logseries", p=0.1, loc=3)
>>> print(y)
===============================================================================16
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="duniform", low=1, high=10)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="duniform", low=1, high=10, loc=3)
>>> print(y)
===============================================================================17
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="dlaplace", a=3)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="dlaplace", a=3, loc=3)
>>> print(y)
===============================================================================18
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="yulesimon", alpha=3)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="yulesimon", alpha=3, loc=3)
>>> print(y)
===============================================================================19
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="alpha", a=3)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="alpha", a=3, loc=3, scale=2)
>>> print(y)
===============================================================================20
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="anglit")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="anglit", loc=3, scale=2)
>>> print(y)
===============================================================================21
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="arcsin")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="arcsin", loc=3, scale=2)
>>> print(y)
===============================================================================22
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="beta", a=1, b=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="beta", a=1, b=2, loc=3, scale=2)
>>> print(y)
===============================================================================23
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="betaprime", a=1, b=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="betaprime", a=1, b=2, loc=3, scale=2)
>>> print(y)
===============================================================================24
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="bradford", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="bradford", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================25
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="burr", c=2, d=1)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="burr", c=2, d=1, loc=3, scale=2)
>>> print(y)
===============================================================================26
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="burr12", c=2, d=1)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="burr12", c=2, d=1, loc=3, scale=2)
>>> print(y)
===============================================================================27
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="cauchy")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="cauchy", loc=3, scale=2)
>>> print(y)
===============================================================================28
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="skewcauchy", a=0.2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="skewcauchy", a=0.2, loc=3, scale=2)
>>> print(y)
===============================================================================29
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="chi", df=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="chi", df=2, loc=3, scale=2)
>>> print(y)
===============================================================================30
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="chi2", df=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="chi2", df=2, loc=3, scale=2)
>>> print(y)
===============================================================================31
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="cosine")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="cosine", loc=3, scale=2)
>>> print(y)
===============================================================================32
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="dgamma", a=1)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="dgamma", a=1, loc=3, scale=2)
>>> print(y)
===============================================================================33
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="dweibull", c=1)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="dweibull", c=1, loc=3, scale=2)
>>> print(y)
===============================================================================34
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="exp")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="exp", loc=3, scale=2)
>>> print(y)
===============================================================================35
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="expweibull", a=1, c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="expweibull", a=1, c=2, loc=3, scale=2)
>>> print(y)
===============================================================================36
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="exppower", b=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="exppower", b=2, loc=3, scale=2)
>>> print(y)
===============================================================================37
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="fatigurlife", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="fatigurlife", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================38
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="loglogistic", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="loglogistic", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================39
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="foldcauchy", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="foldcauchy", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================40
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="foldnormal", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="foldnormal", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================41
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="f", dfn=2, dfd=3)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="f", dfn=2, dfd=3, loc=3, scale=2)
>>> print(y)
===============================================================================42
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="gamma", a=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="gamma", a=2, loc=3, scale=2)
>>> print(y)
===============================================================================43
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="glogistic", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="glogistic", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================44
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="gpareto", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="gpareto", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================45
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="gexp", a=2, b=1, c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="gexp", a=2, b=1, c=2, loc=3, scale=2)
>>> print(y)
===============================================================================46
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="gextremevalue", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="gextremevalue", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================47
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="ggamma", a=2, c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="ggamma", a=2, c=2, loc=3, scale=2)
>>> print(y)
===============================================================================48
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="ghalflogistic", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="ghalflogistic", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================49
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="gigauss", p=2, b=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="gigauss", p=2, b=2, loc=3, scale=2)
>>> print(y)
===============================================================================50
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="gnorm", beta=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="gnorm", beta=2, loc=3, scale=2)
>>> print(y)
===============================================================================51
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="gibrat")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="gibrat", loc=3, scale=2)
>>> print(y)
===============================================================================52
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="gompertz", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="gompertz", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================53
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="halfcauchy")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="halfcauchy", loc=3, scale=2)
>>> print(y)
===============================================================================54
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="halfnorm")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="halfnorm", loc=3, scale=2)
>>> print(y)
===============================================================================55
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="halflogistic")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="halflogistic", loc=3, scale=2)
>>> print(y)
===============================================================================56
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="halflogistic")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="halflogistic", loc=3, scale=2)
>>> print(y)
===============================================================================57
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="hypsecant")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="hypsecant", loc=3, scale=2)
>>> print(y)
===============================================================================58
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="gausshgeom", a=1, b=1, c=2, z=3)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="gausshgeom", a=1, b=1, c=2, z=3, loc=3, scale=2)
>>> print(y)
===============================================================================59
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="invgamma", a=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="invgamma", a=2, loc=3, scale=2)
>>> print(y)
===============================================================================60
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="invgauss", mu=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="invgauss", mu=2, loc=3, scale=2)
>>> print(y)
===============================================================================61
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="invweibull", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="invweibull", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================62
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="JohnsonSB", a=2, b=1)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="JohnsonSB", a=2, b=1, loc=3, scale=2)
>>> print(y)
===============================================================================63
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="JohnsonSU", a=2, b=1)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="JohnsonSU", a=2, b=1, loc=3, scale=2)
>>> print(y)
===============================================================================64
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="KSone", n=10)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="KSone", n=10, loc=3, scale=2)
>>> print(y)
===============================================================================65
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="KStwo", n=100)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="KStwo", n=100, loc=3, scale=2)
>>> print(y)
===============================================================================66
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="KStwobign")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="KStwobign", loc=3, scale=2)
>>> print(y)
===============================================================================67
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="laplace")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="laplace", loc=3, scale=2)
>>> print(y)
===============================================================================68
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="AsymmetricLaplace", kappa=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="AsymmetricLaplace", kappa=2, loc=3, scale=2)
>>> print(y)
===============================================================================69
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="Left-skewed-Levy")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="Left-skewed-Levy", loc=3, scale=2)
>>> print(y)
===============================================================================70
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="levy")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="levy", loc=3, scale=2)
>>> print(y)
===============================================================================71
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="logistic")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="logistic", loc=3, scale=2)
>>> print(y)
===============================================================================72
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="loglaplace", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="loglaplace", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================73
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="loggamma", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="loggamma", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================74
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="lognorm", s=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="lognorm", s=2, loc=3, scale=2)
>>> print(y)
===============================================================================75
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="loguniform", a=2, b=3)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="loguniform", a=2, b=3, loc=3, scale=2)
>>> print(y)
===============================================================================76
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="maxwell")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="maxwell", loc=3, scale=2)
>>> print(y)
===============================================================================77
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="Mielke-Beta-Kappa", k=1, s=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="Mielke-Beta-Kappa", k=1, s=2, loc=3, scale=2)
>>> print(y)
===============================================================================78
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="Nakagami", nu=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="Nakagami", nu=2, loc=3, scale=2)
>>> print(y)
===============================================================================79
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="ncchi2", df=2, nc=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="ncchi2", df=2, nc=2, loc=3, scale=2)
>>> print(y)
===============================================================================80
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="ncf", dfn=2, dfd=2, nc=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="ncf", dfn=2, dfd=2, nc=2, loc=3, scale=2)
>>> print(y)
===============================================================================81
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="nct", df=2, nc=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="nct", df=2, nc=2, loc=3, scale=2)
>>> print(y)
===============================================================================82
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="norm")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="norm", loc=3, scale=2)
>>> print(y)
===============================================================================83
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="NormalInverseGaussian", a=1, b=0.2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="NormalInverseGaussian", a=1, b=0.2, loc=3, scale=2)
>>> print(y)
===============================================================================84
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="pareto", b=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="pareto", b=2, loc=3, scale=2)
>>> print(y)
===============================================================================85
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="lomax", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="lomax", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================86
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="PowerlogNorm", c=2, s=1)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="PowerlogNorm", c=2, s=1, loc=3, scale=2)
>>> print(y)
===============================================================================87
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="PowerNormal", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="PowerNormal", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================88
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="PowerLaw", a=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="PowerLaw", a=2, loc=3, scale=2)
>>> print(y)
===============================================================================89
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="Rdistribution", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="Rdistribution", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================90
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="rayleigh")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="rayleigh", loc=3, scale=2)
>>> print(y)
===============================================================================91
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="rice", b=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="rice", b=2, loc=3, scale=2)
>>> print(y)
===============================================================================92
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="semicircular")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="semicircular", loc=3, scale=2)
>>> print(y)
===============================================================================93
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="Studentized-Range", k=2, df=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="Studentized-Range", k=2, df=2, loc=3, scale=2)
>>> print(y)
===============================================================================94
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="t", df=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="t", df=2, loc=3, scale=2)
>>> print(y)
===============================================================================95
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="Trapezoidal", c=0.2, d=0.5)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="Trapezoidal", c=0.2, d=0.5, loc=3, scale=2)
>>> print(y)
===============================================================================96
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="Triangular", c=0.2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="Triangular", c=0.2, loc=3, scale=2)
>>> print(y)
===============================================================================97
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="TruncatedExpon", b=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="TruncatedExpon", b=2, loc=3, scale=2)
>>> print(y)
===============================================================================98
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="TruncatedNormal", a=1, b=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="TruncatedNormal", a=1, b=2, loc=3, scale=2)
>>> print(y)
===============================================================================99
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="TruncatedPareto", b=0.1, c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="TruncatedPareto", b=0.1, c=2, loc=3, scale=2)
>>> print(y)
===============================================================================100
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="TruncatedWeibullMin", a=0.2, b=2, c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="TruncatedWeibullMin", a=0.2, b=2, c=2, loc=3, scale=2)
>>> print(y)
===============================================================================101
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="uniform")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="uniform", loc=3, scale=2)
>>> print(y)
===============================================================================102
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="wald")
>>> print(y)
>>> y = TidyQuantile(x, whichdist="wald", loc=3, scale=2)
>>> print(y)
===============================================================================103
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="WeibullMax", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="WeibullMax", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================104
>>> x = np.linspace(0,1,100)
>>> y = TidyQuantile(x, whichdist="WeibullMin", c=2)
>>> print(y)
>>> y = TidyQuantile(x, whichdist="WeibullMin", c=2, loc=3, scale=2)
>>> print(y)
===============================================================================105
