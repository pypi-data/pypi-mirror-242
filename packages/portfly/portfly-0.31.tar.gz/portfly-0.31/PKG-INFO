Metadata-Version: 2.1
Name: portfly
Version: 0.31
Summary: Remote/Local port forwarding in Python by TCP/UDP
Project-URL: homepage, https://github.com/xinlin-z/portfly
Author: xinlin-z
License: MIT License
        
        Copyright (c) 2022 xinlin-z
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: local,port forwarding,remote,tcp,udp
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Description-Content-Type: text/markdown

# portfly

* [Port Forwarding](#Port-Forwarding)
* [Installation](#Installation)
* [Usage](#Usage)

A Python implementation of SSH Port Forwarding, includes
remote forwarding and local forwarding, featured by
non-blocking socket, event IO and UDP forwarding path.

## Port Forwarding

Remote Port Forwarding:

![remote_port_forwarding](/remote_port_forwarding.png)

Local Port Forwarding:

![local_port_forwarding](/local_port_forwarding.png)

## Installation

```shell
$ pip install portfly
```

## Usage

On server side, you need to setup portfly to listen, even for udp forwarding
path: 

``` shell
$ python -m portfly -s server_listen_ip:port
```

On client side, you control all the details:

```shell
# remote forwarding by tcp is the default
$ python -m portfly -c [-x] [--log {INFO|DEBUG} <settings>
# local forwarding by tcp:
$ python -m portfly -c -L <settings>
# local forwarding by udp:
$ python -m portfly -c -L -u <udpport> <settings>
# remote forwarding by udp:
$ python -m portfly -u <udpport> <settings>
```

The `<settings>` part is just like ssh, which is:

```text
mapping_port:target_ip:target_port+server_ip:target_port
```

The extra `+` can leave the whole parameters unquoted.

Each client process can map only one port to/from server.
But server can be connected by many clients simultaneously.


