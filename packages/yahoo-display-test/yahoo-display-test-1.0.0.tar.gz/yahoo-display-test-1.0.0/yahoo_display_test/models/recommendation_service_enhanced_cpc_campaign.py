# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v12/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_display_test.configuration import Configuration


class RecommendationServiceEnhancedCpcCampaign(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'recommendation_id': 'int',
        'campaign_id': 'int',
        'campaign_name': 'str',
        'current_campaign_bidding_strategy_type': 'str',
        'current_cpc_bid_value': 'int',
        'recommended_campaign_bidding_strategy_type': 'str'
    }

    attribute_map = {
        'recommendation_id': 'recommendationId',
        'campaign_id': 'campaignId',
        'campaign_name': 'campaignName',
        'current_campaign_bidding_strategy_type': 'currentCampaignBiddingStrategyType',
        'current_cpc_bid_value': 'currentCpcBidValue',
        'recommended_campaign_bidding_strategy_type': 'recommendedCampaignBiddingStrategyType'
    }

    def __init__(self, recommendation_id=None, campaign_id=None, campaign_name=None, current_campaign_bidding_strategy_type=None, current_cpc_bid_value=None, recommended_campaign_bidding_strategy_type=None, local_vars_configuration=None):  # noqa: E501
        """RecommendationServiceEnhancedCpcCampaign - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._recommendation_id = None
        self._campaign_id = None
        self._campaign_name = None
        self._current_campaign_bidding_strategy_type = None
        self._current_cpc_bid_value = None
        self._recommended_campaign_bidding_strategy_type = None
        self.discriminator = None

        self.recommendation_id = recommendation_id
        self.campaign_id = campaign_id
        self.campaign_name = campaign_name
        self.current_campaign_bidding_strategy_type = current_campaign_bidding_strategy_type
        self.current_cpc_bid_value = current_cpc_bid_value
        self.recommended_campaign_bidding_strategy_type = recommended_campaign_bidding_strategy_type

    @property
    def recommendation_id(self):
        """Gets the recommendation_id of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501

        <div lang=\"ja\"> 最適化提案IDです。<br> optimizationScoreLiftがnullでない場合は、1つのキャンペーンに関する提案に共通の最適化提案IDが割り当てられます。 </div> <div lang=\"en\"> Recommendation ID.<br> When optimizationScoreLift isn't null, the system will assign a common recommendation ID to the suggestion for the campaign. </div>   # noqa: E501

        :return: The recommendation_id of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501
        :rtype: int
        """
        return self._recommendation_id

    @recommendation_id.setter
    def recommendation_id(self, recommendation_id):
        """Sets the recommendation_id of this RecommendationServiceEnhancedCpcCampaign.

        <div lang=\"ja\"> 最適化提案IDです。<br> optimizationScoreLiftがnullでない場合は、1つのキャンペーンに関する提案に共通の最適化提案IDが割り当てられます。 </div> <div lang=\"en\"> Recommendation ID.<br> When optimizationScoreLift isn't null, the system will assign a common recommendation ID to the suggestion for the campaign. </div>   # noqa: E501

        :param recommendation_id: The recommendation_id of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501
        :type: int
        """

        self._recommendation_id = recommendation_id

    @property
    def campaign_id(self):
        """Gets the campaign_id of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501

        <div lang=\"ja\"> キャンペーンIDです。<br> </div> <div lang=\"en\"> Campaign ID.<br> </div>   # noqa: E501

        :return: The campaign_id of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501
        :rtype: int
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id):
        """Sets the campaign_id of this RecommendationServiceEnhancedCpcCampaign.

        <div lang=\"ja\"> キャンペーンIDです。<br> </div> <div lang=\"en\"> Campaign ID.<br> </div>   # noqa: E501

        :param campaign_id: The campaign_id of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501
        :type: int
        """

        self._campaign_id = campaign_id

    @property
    def campaign_name(self):
        """Gets the campaign_name of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501

        <div lang=\"ja\"> キャンペーン名です。<br> </div> <div lang=\"en\"> Campaign name.<br> </div>   # noqa: E501

        :return: The campaign_name of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501
        :rtype: str
        """
        return self._campaign_name

    @campaign_name.setter
    def campaign_name(self, campaign_name):
        """Sets the campaign_name of this RecommendationServiceEnhancedCpcCampaign.

        <div lang=\"ja\"> キャンペーン名です。<br> </div> <div lang=\"en\"> Campaign name.<br> </div>   # noqa: E501

        :param campaign_name: The campaign_name of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501
        :type: str
        """

        self._campaign_name = campaign_name

    @property
    def current_campaign_bidding_strategy_type(self):
        """Gets the current_campaign_bidding_strategy_type of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501

        <div lang=\"ja\"> 現在のキャンペーン入札戦略タイプです。 </div> <div lang=\"en\"> Current campaign bidding strategy type. </div>   # noqa: E501

        :return: The current_campaign_bidding_strategy_type of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501
        :rtype: str
        """
        return self._current_campaign_bidding_strategy_type

    @current_campaign_bidding_strategy_type.setter
    def current_campaign_bidding_strategy_type(self, current_campaign_bidding_strategy_type):
        """Sets the current_campaign_bidding_strategy_type of this RecommendationServiceEnhancedCpcCampaign.

        <div lang=\"ja\"> 現在のキャンペーン入札戦略タイプです。 </div> <div lang=\"en\"> Current campaign bidding strategy type. </div>   # noqa: E501

        :param current_campaign_bidding_strategy_type: The current_campaign_bidding_strategy_type of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501
        :type: str
        """

        self._current_campaign_bidding_strategy_type = current_campaign_bidding_strategy_type

    @property
    def current_cpc_bid_value(self):
        """Gets the current_cpc_bid_value of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501

        <div lang=\"ja\"> 現在のキャンペーン最大入札単価(CPC)です。推奨するキャンペーン最大入札単価は現在値と同じになります。 </div> <div lang=\"en\"> Current max bid of campaign (CPC). Recommended max bid of campaign is the same as the current value. </div>   # noqa: E501

        :return: The current_cpc_bid_value of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501
        :rtype: int
        """
        return self._current_cpc_bid_value

    @current_cpc_bid_value.setter
    def current_cpc_bid_value(self, current_cpc_bid_value):
        """Sets the current_cpc_bid_value of this RecommendationServiceEnhancedCpcCampaign.

        <div lang=\"ja\"> 現在のキャンペーン最大入札単価(CPC)です。推奨するキャンペーン最大入札単価は現在値と同じになります。 </div> <div lang=\"en\"> Current max bid of campaign (CPC). Recommended max bid of campaign is the same as the current value. </div>   # noqa: E501

        :param current_cpc_bid_value: The current_cpc_bid_value of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501
        :type: int
        """

        self._current_cpc_bid_value = current_cpc_bid_value

    @property
    def recommended_campaign_bidding_strategy_type(self):
        """Gets the recommended_campaign_bidding_strategy_type of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501

        <div lang=\"ja\"> 推奨するキャンペーン入札戦略タイプです。 </div> <div lang=\"en\"> Recommended campaign bidding strategy type. </div>   # noqa: E501

        :return: The recommended_campaign_bidding_strategy_type of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501
        :rtype: str
        """
        return self._recommended_campaign_bidding_strategy_type

    @recommended_campaign_bidding_strategy_type.setter
    def recommended_campaign_bidding_strategy_type(self, recommended_campaign_bidding_strategy_type):
        """Sets the recommended_campaign_bidding_strategy_type of this RecommendationServiceEnhancedCpcCampaign.

        <div lang=\"ja\"> 推奨するキャンペーン入札戦略タイプです。 </div> <div lang=\"en\"> Recommended campaign bidding strategy type. </div>   # noqa: E501

        :param recommended_campaign_bidding_strategy_type: The recommended_campaign_bidding_strategy_type of this RecommendationServiceEnhancedCpcCampaign.  # noqa: E501
        :type: str
        """

        self._recommended_campaign_bidding_strategy_type = recommended_campaign_bidding_strategy_type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RecommendationServiceEnhancedCpcCampaign):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, RecommendationServiceEnhancedCpcCampaign):
            return True

        return self.to_dict() != other.to_dict()
