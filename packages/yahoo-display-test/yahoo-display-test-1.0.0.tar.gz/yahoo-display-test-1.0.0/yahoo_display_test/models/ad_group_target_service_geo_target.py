# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v12/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_display_test.configuration import Configuration


class AdGroupTargetServiceGeoTarget(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'area_search_type': 'AdGroupTargetServiceAreaSearchType',
        'latitude_in_micro_degrees': 'int',
        'longitude_in_micro_degrees': 'int',
        'radius': 'int',
        'description': 'str',
        'geo_name_en': 'str',
        'geo_name_ja': 'str'
    }

    attribute_map = {
        'area_search_type': 'areaSearchType',
        'latitude_in_micro_degrees': 'latitudeInMicroDegrees',
        'longitude_in_micro_degrees': 'longitudeInMicroDegrees',
        'radius': 'radius',
        'description': 'description',
        'geo_name_en': 'geoNameEn',
        'geo_name_ja': 'geoNameJa'
    }

    def __init__(self, area_search_type=None, latitude_in_micro_degrees=None, longitude_in_micro_degrees=None, radius=None, description=None, geo_name_en=None, geo_name_ja=None, local_vars_configuration=None):  # noqa: E501
        """AdGroupTargetServiceGeoTarget - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._area_search_type = None
        self._latitude_in_micro_degrees = None
        self._longitude_in_micro_degrees = None
        self._radius = None
        self._description = None
        self._geo_name_en = None
        self._geo_name_ja = None
        self.discriminator = None

        self.area_search_type = area_search_type
        self.latitude_in_micro_degrees = latitude_in_micro_degrees
        self.longitude_in_micro_degrees = longitude_in_micro_degrees
        self.radius = radius
        self.description = description
        self.geo_name_en = geo_name_en
        self.geo_name_ja = geo_name_ja

    @property
    def area_search_type(self):
        """Gets the area_search_type of this AdGroupTargetServiceGeoTarget.  # noqa: E501


        :return: The area_search_type of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :rtype: AdGroupTargetServiceAreaSearchType
        """
        return self._area_search_type

    @area_search_type.setter
    def area_search_type(self, area_search_type):
        """Sets the area_search_type of this AdGroupTargetServiceGeoTarget.


        :param area_search_type: The area_search_type of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :type: AdGroupTargetServiceAreaSearchType
        """

        self._area_search_type = area_search_type

    @property
    def latitude_in_micro_degrees(self):
        """Gets the latitude_in_micro_degrees of this AdGroupTargetServiceGeoTarget.  # noqa: E501

        <div lang=\"ja\">マイクロ表記の緯度です。<br> 1度と指定したい場合は、1000000を指定します。<br> ADおよびREPLACE時、areaSearchTypeがRADIUSの場合は必須です。areaSearchTypeがGEOの場合は指定できません。<br> 日本国内のみ指定できます。</div> <div lang=\"en\">Micro degrees for the latitude.<br> To specify 1 degree, specify 1000000.<br> In ADD and REPLACE operation, Required if areaSearchType is RADIUS, and cannot be specified if areaSearchType is GEO.<br> Can be specified only in Japan.</div>   # noqa: E501

        :return: The latitude_in_micro_degrees of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :rtype: int
        """
        return self._latitude_in_micro_degrees

    @latitude_in_micro_degrees.setter
    def latitude_in_micro_degrees(self, latitude_in_micro_degrees):
        """Sets the latitude_in_micro_degrees of this AdGroupTargetServiceGeoTarget.

        <div lang=\"ja\">マイクロ表記の緯度です。<br> 1度と指定したい場合は、1000000を指定します。<br> ADおよびREPLACE時、areaSearchTypeがRADIUSの場合は必須です。areaSearchTypeがGEOの場合は指定できません。<br> 日本国内のみ指定できます。</div> <div lang=\"en\">Micro degrees for the latitude.<br> To specify 1 degree, specify 1000000.<br> In ADD and REPLACE operation, Required if areaSearchType is RADIUS, and cannot be specified if areaSearchType is GEO.<br> Can be specified only in Japan.</div>   # noqa: E501

        :param latitude_in_micro_degrees: The latitude_in_micro_degrees of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :type: int
        """

        self._latitude_in_micro_degrees = latitude_in_micro_degrees

    @property
    def longitude_in_micro_degrees(self):
        """Gets the longitude_in_micro_degrees of this AdGroupTargetServiceGeoTarget.  # noqa: E501

        <div lang=\"ja\">マイクロ表記の経度です。<br> 1度と指定したい場合は、1000000を指定します。<br> ADおよびREPLACE時、areaSearchTypeがRADIUSの場合は必須です。areaSearchTypeがGEOの場合は指定できません。<br> 日本国内のみ指定できます。</div> <div lang=\"en\">Micro degrees for the longitude.<br> To specify 1 degree, specify 1000000.<br> In ADD and REPLACE operation, Required if areaSearchType is RADIUS, and cannot be specified if areaSearchType is GEO.<br> Can be specified only in Japan.</div>   # noqa: E501

        :return: The longitude_in_micro_degrees of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :rtype: int
        """
        return self._longitude_in_micro_degrees

    @longitude_in_micro_degrees.setter
    def longitude_in_micro_degrees(self, longitude_in_micro_degrees):
        """Sets the longitude_in_micro_degrees of this AdGroupTargetServiceGeoTarget.

        <div lang=\"ja\">マイクロ表記の経度です。<br> 1度と指定したい場合は、1000000を指定します。<br> ADおよびREPLACE時、areaSearchTypeがRADIUSの場合は必須です。areaSearchTypeがGEOの場合は指定できません。<br> 日本国内のみ指定できます。</div> <div lang=\"en\">Micro degrees for the longitude.<br> To specify 1 degree, specify 1000000.<br> In ADD and REPLACE operation, Required if areaSearchType is RADIUS, and cannot be specified if areaSearchType is GEO.<br> Can be specified only in Japan.</div>   # noqa: E501

        :param longitude_in_micro_degrees: The longitude_in_micro_degrees of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :type: int
        """

        self._longitude_in_micro_degrees = longitude_in_micro_degrees

    @property
    def radius(self):
        """Gets the radius of this AdGroupTargetServiceGeoTarget.  # noqa: E501

        <div lang=\"ja\">半径(km)です。<br> ADDおよびREPLACE時、areaSearchTypeがRADIUSの場合は必須です。areaSearchTypeがGEOの場合は指定できません。<br> 最大80kmまで指定できます。</div> <div lang=\"en\">Radius(km).<br> In ADD and REPLACE operation, Required if areaSearchType is RADIUS, and cannot be specified if areaSearchType is GEO.<br> Can be specified up to 80km.</div>   # noqa: E501

        :return: The radius of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :rtype: int
        """
        return self._radius

    @radius.setter
    def radius(self, radius):
        """Sets the radius of this AdGroupTargetServiceGeoTarget.

        <div lang=\"ja\">半径(km)です。<br> ADDおよびREPLACE時、areaSearchTypeがRADIUSの場合は必須です。areaSearchTypeがGEOの場合は指定できません。<br> 最大80kmまで指定できます。</div> <div lang=\"en\">Radius(km).<br> In ADD and REPLACE operation, Required if areaSearchType is RADIUS, and cannot be specified if areaSearchType is GEO.<br> Can be specified up to 80km.</div>   # noqa: E501

        :param radius: The radius of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :type: int
        """

        self._radius = radius

    @property
    def description(self):
        """Gets the description of this AdGroupTargetServiceGeoTarget.  # noqa: E501

        <div lang=\"ja\">指定した地点の説明です。<br> ADDおよびREPLACE時、areaSearchTypeがRADIUSの場合は任意で指定できます。areaSearchTypeがGEOの場合は指定できません。</div> <div lang=\"en\">A description of the specified location.<br> In ADD and REPLACE operation, Optional if areaSearchType is RADIUS, and cannot be specified if areaSearchType is GEO.</div>   # noqa: E501

        :return: The description of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AdGroupTargetServiceGeoTarget.

        <div lang=\"ja\">指定した地点の説明です。<br> ADDおよびREPLACE時、areaSearchTypeがRADIUSの場合は任意で指定できます。areaSearchTypeがGEOの場合は指定できません。</div> <div lang=\"en\">A description of the specified location.<br> In ADD and REPLACE operation, Optional if areaSearchType is RADIUS, and cannot be specified if areaSearchType is GEO.</div>   # noqa: E501

        :param description: The description of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def geo_name_en(self):
        """Gets the geo_name_en of this AdGroupTargetServiceGeoTarget.  # noqa: E501

        <div lang=\"ja\"> 地域名（英語）です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。<br> areaSearchTypeがRADIUSの場合はレスポンスの際に返却されません。 </div> <div lang=\"en\"> Region name (English).<br> Although this field will be returned in the response, it will be ignored on input.<br> If areaSearchType is RADIUS, it will not be returned. </div>   # noqa: E501

        :return: The geo_name_en of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :rtype: str
        """
        return self._geo_name_en

    @geo_name_en.setter
    def geo_name_en(self, geo_name_en):
        """Sets the geo_name_en of this AdGroupTargetServiceGeoTarget.

        <div lang=\"ja\"> 地域名（英語）です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。<br> areaSearchTypeがRADIUSの場合はレスポンスの際に返却されません。 </div> <div lang=\"en\"> Region name (English).<br> Although this field will be returned in the response, it will be ignored on input.<br> If areaSearchType is RADIUS, it will not be returned. </div>   # noqa: E501

        :param geo_name_en: The geo_name_en of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :type: str
        """

        self._geo_name_en = geo_name_en

    @property
    def geo_name_ja(self):
        """Gets the geo_name_ja of this AdGroupTargetServiceGeoTarget.  # noqa: E501

        <div lang=\"ja\"> 地域名（日本語）です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。<br> areaSearchTypeがRADIUSの場合はレスポンスの際に返却されません。 </div> <div lang=\"en\">Region name (Japanese).<br> Although this field will be returned in the response, it will be ignored on input.<br> If areaSearchType is RADIUS, it will not be returned. </div>   # noqa: E501

        :return: The geo_name_ja of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :rtype: str
        """
        return self._geo_name_ja

    @geo_name_ja.setter
    def geo_name_ja(self, geo_name_ja):
        """Sets the geo_name_ja of this AdGroupTargetServiceGeoTarget.

        <div lang=\"ja\"> 地域名（日本語）です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。<br> areaSearchTypeがRADIUSの場合はレスポンスの際に返却されません。 </div> <div lang=\"en\">Region name (Japanese).<br> Although this field will be returned in the response, it will be ignored on input.<br> If areaSearchType is RADIUS, it will not be returned. </div>   # noqa: E501

        :param geo_name_ja: The geo_name_ja of this AdGroupTargetServiceGeoTarget.  # noqa: E501
        :type: str
        """

        self._geo_name_ja = geo_name_ja

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AdGroupTargetServiceGeoTarget):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AdGroupTargetServiceGeoTarget):
            return True

        return self.to_dict() != other.to_dict()
