# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v12/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_display_test.configuration import Configuration


class GuaranteedAdGroup(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'account_id': 'int',
        'ad_group_id': 'int',
        'ad_group_name': 'str',
        'campaign_id': 'int',
        'campaign_name': 'str',
        'device': 'list[GuaranteedAdGroupServiceDeviceType]',
        'device_app': 'list[GuaranteedAdGroupServiceDeviceAppType]',
        'device_os': 'list[GuaranteedAdGroupServiceDeviceOsType]',
        'labels': 'list[GuaranteedAdGroupServiceLabel]',
        'user_status': 'GuaranteedAdGroupServiceUserStatus',
        'ad_group_targets': 'list[AdGroupTarget]',
        'is_creative_profile': 'bool'
    }

    attribute_map = {
        'account_id': 'accountId',
        'ad_group_id': 'adGroupId',
        'ad_group_name': 'adGroupName',
        'campaign_id': 'campaignId',
        'campaign_name': 'campaignName',
        'device': 'device',
        'device_app': 'deviceApp',
        'device_os': 'deviceOs',
        'labels': 'labels',
        'user_status': 'userStatus',
        'ad_group_targets': 'adGroupTargets',
        'is_creative_profile': 'isCreativeProfile'
    }

    def __init__(self, account_id=None, ad_group_id=None, ad_group_name=None, campaign_id=None, campaign_name=None, device=None, device_app=None, device_os=None, labels=None, user_status=None, ad_group_targets=None, is_creative_profile=None, local_vars_configuration=None):  # noqa: E501
        """GuaranteedAdGroup - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._account_id = None
        self._ad_group_id = None
        self._ad_group_name = None
        self._campaign_id = None
        self._campaign_name = None
        self._device = None
        self._device_app = None
        self._device_os = None
        self._labels = None
        self._user_status = None
        self._ad_group_targets = None
        self._is_creative_profile = None
        self.discriminator = None

        self.account_id = account_id
        self.ad_group_id = ad_group_id
        self.ad_group_name = ad_group_name
        self.campaign_id = campaign_id
        self.campaign_name = campaign_name
        self.device = device
        self.device_app = device_app
        self.device_os = device_os
        self.labels = labels
        self.user_status = user_status
        self.ad_group_targets = ad_group_targets
        self.is_creative_profile = is_creative_profile

    @property
    def account_id(self):
        """Gets the account_id of this GuaranteedAdGroup.  # noqa: E501

        <div lang=\"ja\"> アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Account ID.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The account_id of this GuaranteedAdGroup.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this GuaranteedAdGroup.

        <div lang=\"ja\"> アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Account ID.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param account_id: The account_id of this GuaranteedAdGroup.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def ad_group_id(self):
        """Gets the ad_group_id of this GuaranteedAdGroup.  # noqa: E501

        <div lang=\"ja\"> 広告グループIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Ad group ID.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The ad_group_id of this GuaranteedAdGroup.  # noqa: E501
        :rtype: int
        """
        return self._ad_group_id

    @ad_group_id.setter
    def ad_group_id(self, ad_group_id):
        """Sets the ad_group_id of this GuaranteedAdGroup.

        <div lang=\"ja\"> 広告グループIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Ad group ID.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param ad_group_id: The ad_group_id of this GuaranteedAdGroup.  # noqa: E501
        :type: int
        """

        self._ad_group_id = ad_group_id

    @property
    def ad_group_name(self):
        """Gets the ad_group_name of this GuaranteedAdGroup.  # noqa: E501

        <div lang=\"ja\"> 広告グループ名です。<br> このフィールドは、ADD時は必須となり、SET時は省略可能となります。 </div> <div lang=\"en\"> Ad group name.<br> This field is required in ADD operation, and will be optional in SET operation. </div>   # noqa: E501

        :return: The ad_group_name of this GuaranteedAdGroup.  # noqa: E501
        :rtype: str
        """
        return self._ad_group_name

    @ad_group_name.setter
    def ad_group_name(self, ad_group_name):
        """Sets the ad_group_name of this GuaranteedAdGroup.

        <div lang=\"ja\"> 広告グループ名です。<br> このフィールドは、ADD時は必須となり、SET時は省略可能となります。 </div> <div lang=\"en\"> Ad group name.<br> This field is required in ADD operation, and will be optional in SET operation. </div>   # noqa: E501

        :param ad_group_name: The ad_group_name of this GuaranteedAdGroup.  # noqa: E501
        :type: str
        """

        self._ad_group_name = ad_group_name

    @property
    def campaign_id(self):
        """Gets the campaign_id of this GuaranteedAdGroup.  # noqa: E501

        <div lang=\"ja\"> キャンペーンIDです。<br> このフィールドは、リクエストの場合は必須です。 </div> <div lang=\"en\"> Campaign ID.<br> This field is required in requests. </div>   # noqa: E501

        :return: The campaign_id of this GuaranteedAdGroup.  # noqa: E501
        :rtype: int
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id):
        """Sets the campaign_id of this GuaranteedAdGroup.

        <div lang=\"ja\"> キャンペーンIDです。<br> このフィールドは、リクエストの場合は必須です。 </div> <div lang=\"en\"> Campaign ID.<br> This field is required in requests. </div>   # noqa: E501

        :param campaign_id: The campaign_id of this GuaranteedAdGroup.  # noqa: E501
        :type: int
        """

        self._campaign_id = campaign_id

    @property
    def campaign_name(self):
        """Gets the campaign_name of this GuaranteedAdGroup.  # noqa: E501

        <div lang=\"ja\"> キャンペーン名です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。<br> *ADD時、このフィールドは返却されません。 </div> <div lang=\"en\"> Campaign name.<br> Although this field will be returned in the response, it will be ignored on input.<br> *This field will not be returned in ADD operation. </div>   # noqa: E501

        :return: The campaign_name of this GuaranteedAdGroup.  # noqa: E501
        :rtype: str
        """
        return self._campaign_name

    @campaign_name.setter
    def campaign_name(self, campaign_name):
        """Sets the campaign_name of this GuaranteedAdGroup.

        <div lang=\"ja\"> キャンペーン名です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。<br> *ADD時、このフィールドは返却されません。 </div> <div lang=\"en\"> Campaign name.<br> Although this field will be returned in the response, it will be ignored on input.<br> *This field will not be returned in ADD operation. </div>   # noqa: E501

        :param campaign_name: The campaign_name of this GuaranteedAdGroup.  # noqa: E501
        :type: str
        """

        self._campaign_name = campaign_name

    @property
    def device(self):
        """Gets the device of this GuaranteedAdGroup.  # noqa: E501


        :return: The device of this GuaranteedAdGroup.  # noqa: E501
        :rtype: list[GuaranteedAdGroupServiceDeviceType]
        """
        return self._device

    @device.setter
    def device(self, device):
        """Sets the device of this GuaranteedAdGroup.


        :param device: The device of this GuaranteedAdGroup.  # noqa: E501
        :type: list[GuaranteedAdGroupServiceDeviceType]
        """

        self._device = device

    @property
    def device_app(self):
        """Gets the device_app of this GuaranteedAdGroup.  # noqa: E501


        :return: The device_app of this GuaranteedAdGroup.  # noqa: E501
        :rtype: list[GuaranteedAdGroupServiceDeviceAppType]
        """
        return self._device_app

    @device_app.setter
    def device_app(self, device_app):
        """Sets the device_app of this GuaranteedAdGroup.


        :param device_app: The device_app of this GuaranteedAdGroup.  # noqa: E501
        :type: list[GuaranteedAdGroupServiceDeviceAppType]
        """

        self._device_app = device_app

    @property
    def device_os(self):
        """Gets the device_os of this GuaranteedAdGroup.  # noqa: E501


        :return: The device_os of this GuaranteedAdGroup.  # noqa: E501
        :rtype: list[GuaranteedAdGroupServiceDeviceOsType]
        """
        return self._device_os

    @device_os.setter
    def device_os(self, device_os):
        """Sets the device_os of this GuaranteedAdGroup.


        :param device_os: The device_os of this GuaranteedAdGroup.  # noqa: E501
        :type: list[GuaranteedAdGroupServiceDeviceOsType]
        """

        self._device_os = device_os

    @property
    def labels(self):
        """Gets the labels of this GuaranteedAdGroup.  # noqa: E501


        :return: The labels of this GuaranteedAdGroup.  # noqa: E501
        :rtype: list[GuaranteedAdGroupServiceLabel]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GuaranteedAdGroup.


        :param labels: The labels of this GuaranteedAdGroup.  # noqa: E501
        :type: list[GuaranteedAdGroupServiceLabel]
        """

        self._labels = labels

    @property
    def user_status(self):
        """Gets the user_status of this GuaranteedAdGroup.  # noqa: E501


        :return: The user_status of this GuaranteedAdGroup.  # noqa: E501
        :rtype: GuaranteedAdGroupServiceUserStatus
        """
        return self._user_status

    @user_status.setter
    def user_status(self, user_status):
        """Sets the user_status of this GuaranteedAdGroup.


        :param user_status: The user_status of this GuaranteedAdGroup.  # noqa: E501
        :type: GuaranteedAdGroupServiceUserStatus
        """

        self._user_status = user_status

    @property
    def ad_group_targets(self):
        """Gets the ad_group_targets of this GuaranteedAdGroup.  # noqa: E501


        :return: The ad_group_targets of this GuaranteedAdGroup.  # noqa: E501
        :rtype: list[AdGroupTarget]
        """
        return self._ad_group_targets

    @ad_group_targets.setter
    def ad_group_targets(self, ad_group_targets):
        """Sets the ad_group_targets of this GuaranteedAdGroup.


        :param ad_group_targets: The ad_group_targets of this GuaranteedAdGroup.  # noqa: E501
        :type: list[AdGroupTarget]
        """

        self._ad_group_targets = ad_group_targets

    @property
    def is_creative_profile(self):
        """Gets the is_creative_profile of this GuaranteedAdGroup.  # noqa: E501

        <div lang=\"ja\"> trueの場合、クリエイティブプロファイルで追加された広告グループであることを示します。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> If the value of this field is true, it indicates that the ad group was added using a creative profile.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The is_creative_profile of this GuaranteedAdGroup.  # noqa: E501
        :rtype: bool
        """
        return self._is_creative_profile

    @is_creative_profile.setter
    def is_creative_profile(self, is_creative_profile):
        """Sets the is_creative_profile of this GuaranteedAdGroup.

        <div lang=\"ja\"> trueの場合、クリエイティブプロファイルで追加された広告グループであることを示します。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> If the value of this field is true, it indicates that the ad group was added using a creative profile.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param is_creative_profile: The is_creative_profile of this GuaranteedAdGroup.  # noqa: E501
        :type: bool
        """

        self._is_creative_profile = is_creative_profile

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GuaranteedAdGroup):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GuaranteedAdGroup):
            return True

        return self.to_dict() != other.to_dict()
