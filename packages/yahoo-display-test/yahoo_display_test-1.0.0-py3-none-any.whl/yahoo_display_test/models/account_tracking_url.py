# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v12/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_display_test.configuration import Configuration


class AccountTrackingUrl(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'account_id': 'int',
        'account_name': 'str',
        'tracking_url': 'str',
        'is_remove_tracking_url': 'AccountTrackingUrlServiceIsRemoveFlg'
    }

    attribute_map = {
        'account_id': 'accountId',
        'account_name': 'accountName',
        'tracking_url': 'trackingUrl',
        'is_remove_tracking_url': 'isRemoveTrackingUrl'
    }

    def __init__(self, account_id=None, account_name=None, tracking_url=None, is_remove_tracking_url=None, local_vars_configuration=None):  # noqa: E501
        """AccountTrackingUrl - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._account_id = None
        self._account_name = None
        self._tracking_url = None
        self._is_remove_tracking_url = None
        self.discriminator = None

        self.account_id = account_id
        self.account_name = account_name
        self.tracking_url = tracking_url
        self.is_remove_tracking_url = is_remove_tracking_url

    @property
    def account_id(self):
        """Gets the account_id of this AccountTrackingUrl.  # noqa: E501

        <div lang=\"ja\">アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Account ID.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :return: The account_id of this AccountTrackingUrl.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this AccountTrackingUrl.

        <div lang=\"ja\">アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Account ID.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :param account_id: The account_id of this AccountTrackingUrl.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def account_name(self):
        """Gets the account_name of this AccountTrackingUrl.  # noqa: E501

        <div lang=\"ja\">アカウント名です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Account name.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :return: The account_name of this AccountTrackingUrl.  # noqa: E501
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this AccountTrackingUrl.

        <div lang=\"ja\">アカウント名です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Account name.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :param account_name: The account_name of this AccountTrackingUrl.  # noqa: E501
        :type: str
        """

        self._account_name = account_name

    @property
    def tracking_url(self):
        """Gets the tracking_url of this AccountTrackingUrl.  # noqa: E501

        <div lang=\"ja\">トラッキングURLです。<br> SET時、このフィールドは省略可能となります。</div> <div lang=\"en\">Tracking URL.<br> this field is optional in SET operation.</div>   # noqa: E501

        :return: The tracking_url of this AccountTrackingUrl.  # noqa: E501
        :rtype: str
        """
        return self._tracking_url

    @tracking_url.setter
    def tracking_url(self, tracking_url):
        """Sets the tracking_url of this AccountTrackingUrl.

        <div lang=\"ja\">トラッキングURLです。<br> SET時、このフィールドは省略可能となります。</div> <div lang=\"en\">Tracking URL.<br> this field is optional in SET operation.</div>   # noqa: E501

        :param tracking_url: The tracking_url of this AccountTrackingUrl.  # noqa: E501
        :type: str
        """

        self._tracking_url = tracking_url

    @property
    def is_remove_tracking_url(self):
        """Gets the is_remove_tracking_url of this AccountTrackingUrl.  # noqa: E501


        :return: The is_remove_tracking_url of this AccountTrackingUrl.  # noqa: E501
        :rtype: AccountTrackingUrlServiceIsRemoveFlg
        """
        return self._is_remove_tracking_url

    @is_remove_tracking_url.setter
    def is_remove_tracking_url(self, is_remove_tracking_url):
        """Sets the is_remove_tracking_url of this AccountTrackingUrl.


        :param is_remove_tracking_url: The is_remove_tracking_url of this AccountTrackingUrl.  # noqa: E501
        :type: AccountTrackingUrlServiceIsRemoveFlg
        """

        self._is_remove_tracking_url = is_remove_tracking_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AccountTrackingUrl):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AccountTrackingUrl):
            return True

        return self.to_dict() != other.to_dict()
