# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v12/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_display_test.configuration import Configuration


class AdGroupAdServiceAsset(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'media_assets': 'list[AdGroupAdServiceMediaAsset]',
        'headline_assets': 'list[AdGroupAdServiceHeadlineAsset]',
        'description_assets': 'list[AdGroupAdServiceDescriptionAsset]'
    }

    attribute_map = {
        'media_assets': 'mediaAssets',
        'headline_assets': 'headlineAssets',
        'description_assets': 'descriptionAssets'
    }

    def __init__(self, media_assets=None, headline_assets=None, description_assets=None, local_vars_configuration=None):  # noqa: E501
        """AdGroupAdServiceAsset - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._media_assets = None
        self._headline_assets = None
        self._description_assets = None
        self.discriminator = None

        self.media_assets = media_assets
        self.headline_assets = headline_assets
        self.description_assets = description_assets

    @property
    def media_assets(self):
        """Gets the media_assets of this AdGroupAdServiceAsset.  # noqa: E501


        :return: The media_assets of this AdGroupAdServiceAsset.  # noqa: E501
        :rtype: list[AdGroupAdServiceMediaAsset]
        """
        return self._media_assets

    @media_assets.setter
    def media_assets(self, media_assets):
        """Sets the media_assets of this AdGroupAdServiceAsset.


        :param media_assets: The media_assets of this AdGroupAdServiceAsset.  # noqa: E501
        :type: list[AdGroupAdServiceMediaAsset]
        """

        self._media_assets = media_assets

    @property
    def headline_assets(self):
        """Gets the headline_assets of this AdGroupAdServiceAsset.  # noqa: E501


        :return: The headline_assets of this AdGroupAdServiceAsset.  # noqa: E501
        :rtype: list[AdGroupAdServiceHeadlineAsset]
        """
        return self._headline_assets

    @headline_assets.setter
    def headline_assets(self, headline_assets):
        """Sets the headline_assets of this AdGroupAdServiceAsset.


        :param headline_assets: The headline_assets of this AdGroupAdServiceAsset.  # noqa: E501
        :type: list[AdGroupAdServiceHeadlineAsset]
        """

        self._headline_assets = headline_assets

    @property
    def description_assets(self):
        """Gets the description_assets of this AdGroupAdServiceAsset.  # noqa: E501


        :return: The description_assets of this AdGroupAdServiceAsset.  # noqa: E501
        :rtype: list[AdGroupAdServiceDescriptionAsset]
        """
        return self._description_assets

    @description_assets.setter
    def description_assets(self, description_assets):
        """Sets the description_assets of this AdGroupAdServiceAsset.


        :param description_assets: The description_assets of this AdGroupAdServiceAsset.  # noqa: E501
        :type: list[AdGroupAdServiceDescriptionAsset]
        """

        self._description_assets = description_assets

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AdGroupAdServiceAsset):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AdGroupAdServiceAsset):
            return True

        return self.to_dict() != other.to_dict()
