"use strict";(self.webpackChunklino_react=self.webpackChunklino_react||[]).push([[135],{6373:(t,e,n)=>{n.r(e),n.d(e,{name:()=>x,linoResolveGetter:()=>y});var r=n(4782),o=n(6042),s=n(8091),i=n(3424),a=n(2594),l=n(9840),u=n(9430),c=n(1832),h=n(2875),p=n(4954),d=n.n(p);function f(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function v(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?f(Object(n),!0).forEach((function(e){(0,o.Z)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):f(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function m(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=(0,u.Z)(t);if(e){var o=(0,u.Z)(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return(0,l.Z)(this,n)}}var x="SiteContext";function b(){return b=(0,h.Z)(d().mark((function t(e){var n,o,l,u,h,p,f,x,b,y,C,P,g,R,A;return d().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return C=function(t){var e=n.useState("static"),r=(0,c.Z)(e,2),o=r[0],s=(r[1],n.useState("dark")),i=(0,c.Z)(s,2),a=i[0],u=(i[1],n.useState(!1)),p=(0,c.Z)(u,2),d=p[0],v=p[1],m=n.useState(!1),b=(0,c.Z)(m,2),y=b[0],C=b[1],P=n.useState(!1),g=(0,c.Z)(P,2),R=g[0],A=g[1];return n.createElement("div",{className:l("layout-wrapper",{"layout-overlay":"overlay"===o,"layout-static":"static"===o,"layout-static-sidebar-inactive":d&&"static"===o,"layout-overlay-sidebar-active":y&&"overlay"===o,"layout-mobile-sidebar-active":R}),ref:function(e){return t.APP.topDiv=e}},n.createElement(x,{onToggleMenu:function(t){C(!y),v(!d),A(!R),t&&t.preventDefault()},onHomeButton:t.APP.onHomeButton,WS:t.APP.state.WS,useChat:!1}),n.createElement("div",{className:l("layout-sidebar",{"layout-sidebar-dark":"dark"===a})},n.createElement(h,{style:{height:"100%"}},n.createElement("div",{className:"layout-sidebar-scroll-content"},n.createElement(f,{model:t.APP.state.menu_data,onMenuItemClick:function(t){t.item.items||(C(!1),A(!1))}})))),t.children)},t.next=3,e.resolve("react","default");case 3:return n=t.sent,t.next=6,e.resolve("prop-types","default");case 6:return o=t.sent,t.next=9,e.resolve("classnames","default");case 9:return l=t.sent,t.next=12,e.resolve("lodash","default");case 12:return u=t.sent,t.next=15,e.resolve("primereact/scrollpanel","ScrollPanel");case 15:return h=t.sent,t.next=18,e.resolve("./LinoUtils","constants");case 18:return p=t.sent,t.next=21,e.resolve("./AppMenu","AppMenu");case 21:return f=t.sent,t.next=24,e.resolve("./AppTopbar","AppTopbar");case 24:return x=t.sent,t.next=27,e.resolve("./DashboardItems","DashboardItems");case 27:return b=t.sent,t.next=30,e.resolve("./NavigationControl","Context");case 30:return y=t.sent,(P=function(t){(0,a.Z)(n,t);var e=m(n);function n(t){var r;return(0,s.Z)(this,n),(r=e.call(this,t)).state={initialized:!1},r}return(0,i.Z)(n,[{key:"componentWillUnmount",value:function(){var t=this.state.context.controller;t.isSlave&&delete t.parent.children[t.actionHandler.refName],delete t.APP.rps[t.actionHandler.refName]}}]),n}(n.Component)).Context=n.createContext({}),(g=function(t){(0,a.Z)(r,t);var e=m(r);function r(t){var n;return(0,s.Z)(this,r),(n=e.call(this,t)).state=v(v({},n.state),{},{context:null}),n}return(0,i.Z)(r,[{key:"componentDidMount",value:function(){var t=this,e=function(e){Object.assign(e,t.props.params),r.pushStatus(t.props.status,e),r.history.replace(e)},n=this.props.parentContext,r=new y(n.APP,n.iPool,{});r.setRoot(this),r.setParent(n),this.props.inherit?(r.value=n.copy(),r.value.static=n.value.static,r.value.controller=r,e(r.value)):this.props.simple?r.basicContext(this.props.path,e):r.buildURLContext(this.props.path,e)}},{key:"render",value:function(){var t=this,e=this.state.initialized?n.createElement(r.Context.Provider,{value:this.state.context},this.props.children?this.props.children:this.props.getChildren(this.state.context)):null;return this.props.simple?e:n.createElement("div",{ref:function(e){return t.contextEntry=e}},e,n.createElement("div",{ref:function(e){return t.chInPx=e},style:{width:"1ch",visibility:"hidden"}}))}}]),r}(P)).propTypes={children:function(t){for(var e,n=arguments.length,r=new Array(n>1?n-1:0),s=1;s<n;s++)r[s-1]=arguments[s];if(null===t.getChildren)return(e=o.element).isRequired.apply(e,[t].concat(r))},getChildren:function(t){for(var e,n=arguments.length,r=new Array(n>1?n-1:0),s=1;s<n;s++)r[s-1]=arguments[s];if(null===t.children)return(e=o.func).isRequired.apply(e,[t].concat(r))},inherit:o.bool,params:o.object,parentContext:o.instanceOf(y).isRequired,path:function(t){for(var e,n=arguments.length,r=new Array(n>1?n-1:0),s=1;s<n;s++)r[s-1]=arguments[s];if(!t.inherit)return(e=o.string).isRequired.apply(e,[t].concat(r))},simple:o.bool,status:o.object},g.defaultProps={children:null,getChildren:null,inherit:!1,params:{},simple:!0,status:{}},(R=function(t){(0,a.Z)(l,t);var o=m(l);function l(t){var n;return(0,s.Z)(this,l),(n=o.call(this,t)).state=v(v({},n.state),{},{context:t.APP.URLContext.value,hasActor:null}),n.Actor=e.get("./Actor","Actor"),n.state.context.controller.setRoot((0,r.Z)(n)),n}return(0,i.Z)(l,[{key:"componentDidMount",value:function(){var t=this;this.state.context.controller.attachDataContext(new A(this,{success:!1})),this.state.context.controller.build((function(e){e.rs||(e.rs=t.state.context.controller.newSlug(),t.props.APP.router.history.replace({search:"rs=".concat(e.rs)})),t.state.context.controller.history.replace(e)}))}},{key:"render",value:function(){var t=this;return n.createElement(C,{APP:this.props.APP},n.createElement("div",{className:"layout-main",ref:function(e){return t.contextEntry=e}},this.state.initialized&&n.createElement(P.Context.Provider,{value:this.state.context},this.state.hasActor?n.createElement(this.Actor,{actorData:this.state.context.static.actorData}):n.createElement(b,{ref:function(e){t.props.APP.dashboard=e,t.props.APP.setRpRef(e)},dashboard_items:this.props.APP.state.user_settings?this.props.APP.state.user_settings.dashboard_items:0,user:this.props.APP.state.user_settings?this.props.APP.state.user_settings.username:"notloaded"})),n.createElement("div",{ref:function(e){return t.chInPx=e},style:{width:"1ch",visibility:"hidden"}})))}}]),l}(P)).propTypes={APP:o.object.isRequired},A=function(){function t(e){var n=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(0,s.Z)(this,t),this.saveFileUploadRequest=function(t){n.mutableContext.FileUploadRequest=t},this.root=e,this.backupContext=this.backupContext.bind(this),this.clearMod=this.clearMod.bind(this),this.isModified=this.isModified.bind(this),this.prepContext=this.prepContext.bind(this),this.set=this.set.bind(this),this.setLeafRef=this.setLeafRef.bind(this),this.update=this.update.bind(this),this.updateState=this.updateState.bind(this),this.set(r,!0)}return(0,i.Z)(t,[{key:"prepContext",value:function(t){var e=this;if(t.Leaves={},t.slaveLeaves={},t.virtualLeaves={},t.FileUploadRequest=null,t.editing_mode=!1,t.modifiedRows={},t.modified=[],t.rows){var n=this.root.context[p.URL_PARAM_LIMIT];t.pks=t.rows.map((function(t){return t[e.root.context.static.actorData.pk_index]}));for(var r=0;r<t.rows.length;r++)t.modifiedRows[r]=[];t.pageCount=Math.floor(t.count/n)}return t}},{key:"backupContext",value:function(t){this.contextBackup=u.cloneDeep(t)}},{key:"clearMod",value:function(){if(this.mutableContext.FileUploadRequest=null,this.mutableContext.modified=[],this.mutableContext.rows)for(var t=0;t<this.mutableContext.rows.length;t++)this.mutableContext.modifiedRows[t]=[];Object.assign(this.mutableContext,u.cloneDeep(this.contextBackup))}},{key:"isModified",value:function(t){if(null!==this.mutableContext.FileUploadRequest)return!0;if(void 0!==t)return isNaN(parseInt(t))?this.mutableContext.modified.length>0:this.mutableContext.modifiedRows[t].length>0;if(this.mutableContext.modified.length)return!0;for(var e=0,n=Object.values(this.mutableContext.modifiedRows);e<n.length;e++)if(n[e].length)return!0;return!1}},{key:"set",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:function(){return null};this.backupContext(t),this.mutableContext=this.prepContext(t),e||this.root.setState(v({context:this.mutableContext,displayMode:this.root.context[p.URL_PARAM_DISPLAY_MODE]},n)),r(this.mutableContext)}},{key:"setLeafRef",value:function(t){var e=t.name,n=t.ref,r=t.type;t.input,this.mutableContext[r+"Leaves"][e]=n}},{key:"update",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Object.assign(this.mutableContext,t),this.root.setState({context:this.mutableContext})}},{key:"updateState",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.mutableContext=Object.assign({},this.mutableContext,t),this.root.setState(v({context:this.mutableContext},e))}}]),t}(),A.Context=n.createContext({}),t.abrupt("return",{URLContext:g,RootURLContext:R,DataContext:A});case 41:case"end":return t.stop()}}),t)}))),b.apply(this,arguments)}Storage.prototype.setObject=function(t,e){this.setItem(t,JSON.stringify(e))},Storage.prototype.getObject=function(t){var e=this.getItem(t);return e&&JSON.parse(e)};var y={resolveGetter:function(t){return b.apply(this,arguments)},resolveNames:["URLContext","RootURLContext","DataContext"]}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,